<?xml version="1.0"?>
<doc>
    <assembly>
        <name>IngeniuxCMService</name>
    </assembly>
    <members>
        <member name="F:IngeniuxCMService.Admin.UserInfoExtended.readLanguages">
            <summary>
            comma-space delimited list
            </summary>
        </member>
        <member name="F:IngeniuxCMService.Admin.UserInfoExtended.writeLanguages">
            <summary>
            comma-space delimieted list
            </summary>
        </member>
        <member name="T:IngeniuxCMService.IFileReplaceServices">
            <remarks>Search replace action doesn't directly return result; instead, it hands off
            and then uses "Progress" action to get the actual progress and result.</remarks>
        </member>
        <member name="M:IngeniuxCMService.IFileReplaceServices.Find(IngeniuxCMService.Admin.FindInput)">
            <remarks>Returns a session ID on which to check progress.</remarks>
        </member>
        <member name="M:IngeniuxCMService.IFileReplaceServices.Unload(IngeniuxCMService.UniqueObject)">
            <remarks>Gets called to abandon ongoing search.</remarks>
        </member>
        <member name="M:IngeniuxCMService.IFileReplaceServices.Fix(IngeniuxCMService.Admin.FixResultInput)">
            <remarks>Fixes items, including removal.</remarks>
        </member>
        <member name="M:IngeniuxCMService.IFileReplaceServices.Progress(IngeniuxCMService.UniqueObject)">
            <remarks>This service is in charge of getting progress and results.</remarks>
        </member>
        <member name="T:IngeniuxCMService.Admin.SearchInfo">
            <remarks>Combined all possible fields for search info</remarks>
        </member>
        <member name="T:IngeniuxCMService.ActiveDirectoryQuery">
            <summary>
            This class can return a list of users and groups from Active Directory.
            Thus, we can provide a list of candidates for creating users and groups within the CMS.
            </summary>
        </member>
        <member name="T:IngeniuxCMService.IMembershipProvidersServices">
            <remarks>Services to list and manipulate membership providers</remarks>
        </member>
        <member name="T:IngeniuxCMService.MembershipProvidersServices">
            <summary>
            Provides the ability to work with the Ingeniux CMS authentication system, including login, enumerating list providers, and user account manipulations.
            </summary>
        </member>
        <member name="F:IngeniuxCMService.MembershipProvidersServices.MOCK_PROVIDER_NAME">
            <summary>
            The constant value of the mock account provider name
            </summary>
        </member>
        <member name="M:IngeniuxCMService.MembershipProvidersServices.GetMembershipProviders">
             <summary>
             Retrieves the list of Membership Providers available in Ingeniux CMS authentication system
             </summary>
             <returns>
             <para>The collections of Membership Provider info.</para>
             <example>
             Sample JSON return
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": {
            		"Providers": [{
            			"key": "IGXADMembershipProvider",
            			"value": "IGXADMembershipProvider"
            		}, {
            			"key": "IngeniuxMembershipProvider",
            			"value": "IngeniuxMembershipProvider"
            		}]
            	}
            }
             ]]>
             </code>
             </example>
             </returns>
             <remarks>The Membership Provider "IGXLocalAccountsProvider" will never to return, because it is for web.config hard-coded users only.</remarks>
        </member>
        <member name="M:IngeniuxCMService.MembershipProvidersServices.IsAdDefaultProvider">
             <summary>
             Verifies in Active Directory Membership Provider is the default membership provider.
             This method is used to confirm if Active Directory Import functionalities can be used with this Ingeniux CMS site.
             </summary>
             <returns>
             <para>The object indicating whether or not Active Directory Membership Provider is default Membership Provider</para>
             <example>
             Sample JSON return
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": {
            		"AdDefault": true
            	}
            }
             ]]>
             </code>
             </example>
             </returns>
        </member>
        <member name="M:IngeniuxCMService.MembershipProvidersServices.GetADQueryDefaults">
             <summary>
             Retrieves the default value of Active Directory Search parameters. These parameter values are to be passed in when query Active Directory
             </summary>
             <returns>
             <para>Default Active Directory search parameter values</para>
             <example>
             Sample JSON return
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": {
            		"adSearchDefaults": {
            			"GroupNameField": "sAMAccountName",
            			"GroupUserField": "member",
            			"Query": "(&(objectCategory=group))",
            			"UserEmailField": "mail",
            			"UserIDField": "sAMAccountName",
            			"UserNameField": "displayName"
            		}
            	}
            }
             ]]>
             </code>
             </example>
             </returns>
             <remarks>The default value are constants and will not ever change. So it only needs to be called once.</remarks>
        </member>
        <member name="M:IngeniuxCMService.MembershipProvidersServices.QueryAD(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
             <summary>
             Query the Active Directory specified in the Active Directory Membership Provider connection string (local-connection-strings.config).
             Retrieves the listing of Group and User directory entries.
             </summary>
             <param name="bindUser">
             <para>The user account to connect to Active Directory, need to include domain information</para>
             <example>ingeniux\jdoe</example>
             </param>
             <param name="bindPass">The password for the connecting user account</param>
             <param name="searchQuery"><![CDATA[The query for searching User Groups in Active Directory, default "(&(objectCategory=group))"]]></param>
             <param name="groupNameField"><![CDATA[The field for Group Name in Group Account directory entry, default "sAMAccountName"]]></param>
             <param name="groupUsersField"><![CDATA[The field for Users in Group Account directory entry, default "member"]]></param>
             <param name="userIdField"><![CDATA[The field for User Id in User Account directory entry, default "sAMAccountName" also]]></param>
             <param name="userNameField"><![CDATA[The field for User Name in User Account directory entry, default "displayName"]]></param>
             <param name="userEmailField"><![CDATA[The field for User Email Address in User Account directory entry, default "mail"]]></param>
             <returns>
             <para>List of Groups that contains Users</para>
             <example>
             Sample JSON return
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": {
            		"usersAndGroups": {
            			"Domain": "imda",
            			"Groups": [{
            				"GroupName": "Executives",
            				"Users": [{
            					"Email": "Jimmy.Eddie@imda.com",
            					"UserID": "jime",
            					"UserName": "Jimmy Eddie"
            				}, {
            					"Email": "Natie.Eggy@imda.com",
            					"UserID": "neggy",
            					"UserName": "Natie Eggy"
            				}, {
            					"Email": "Shane.McMahon@imda.com",
            					"UserID": "shanmc",
            					"UserName": "Shane McMahon"
            				}]
            			}, {
            				"GroupName": "Account Operators",
            				"Users": []
            			}, {
            				"GroupName": "AccountManagement",
            				"Users": [{
            					"Email": "Jimmy.Eddie@imda.com",
            					"UserID": "jime",
            					"UserName": "Jimmy Eddie"
            				}, {
            					"Email": "Rob.Doe@imda.com",
            					"UserID": "robdo",
            					"UserName": "Rob Doe"
            				}, {
            					"Email": "Sean.Riddle@imda.com",
            					"UserID": "seanrid",
            					"UserName": "Sean Riddle"
            				}, {
            					"Email": "Shane.McMahon@imda.com",
            					"UserID": "shanmc",
            					"UserName": "Shane McMahon"
            				}]
            			}]
            		}
            	}
            }
            ]]>
             </code>
             </example>
             </returns>
        </member>
        <member name="M:IngeniuxCMService.MembershipProvidersServices.ChangePassword(System.String,System.String,System.String,System.String)">
             <summary>
             Changes password of specified user account
             </summary>
             <param name="providerName">Name of membership provider for given user account</param>
             <param name="userName">User Account Id</param>
             <param name="oldpassword">Current password for given user</param>
             <param name="newpassword">New password for given user</param>
             <returns>
             <para>The password change result, and requirements from Membership Provider on password format</para>
             <example>
             Sample JSON return
             <code language="javascript">
             <![CDATA[
            {
            	PasswordChanged: true,
            	MinPasswordLength: 8,
            	MinNonAlphaNumericCharactersLength: 2
            }
             ]]>
             </code>s
             </example>
             </returns>
             <remarks>
             Not all Membership Providers implements "ChangePassword" method. If not, this operation will thrown "NotImplemented" exception into error response format.
             </remarks>
        </member>
        <member name="M:IngeniuxCMService.MembershipProvidersServices.CreateUser(System.String,System.String,System.String,System.String)">
             <summary>
             <para>Creates a new User account in Ingeniux CMS. In Membership Provider is integrated account provider (Ingeniux Membership Provider or SQL provider), allow to set password using the provider.</para>
             <para>Also, it will try to send 2 email out to the new user's email address, first to inform user that the account has been created, second to send user the password of the new account.</para>
             <para>If for any reason the email cannot be sent out, the password information will be brought back to client, so the Administrator can manually inform new user the password.</para>
             </summary>
             <param name="providerName">
             <para>Name of the membership provider. It is the value of "name" attribute in for the provide entry local-membership.config</para>
             <example>
             <code language="xml">
             <![CDATA[
            <add name="IGXADMembershipProvider" type="System.Web.Security.ActiveDirectoryMembershipProvider, System.Web, version=4.0.0.0,Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"
            		connectionStringName="IGXADConnectionString"
            		attributeMapUsername="sAMAccountName"/>
             ]]>
             </code>
             </example>
             </param>
             <param name="username">User Account Name (Id)</param>
             <param name="password">Password for user account to set by Membership Provider. Only needed for Integrated providers</param>
             <param name="email">Email address of the new User</param>
             <returns>
             <para>The status information on user creation.</para>
             <example>
             Sample JSON return - Email successful. Note that the "Newpassword" field is null, and no email errors
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": {
            		"EmailError": null,
            		"EmailError2": null,
            		"EmailSent": true,
            		"MinNonAlphaNumericCharactersLength": 2,
            		"MinPasswordLength": 8,
            		"NewUser": "TestUser",
            		"Newpassword": null,
            		"Status": "Success",
            		"StatusDetail": ""
            	}
            }
             ]]>
             </code>
             </example>
             <example>
             Sample JSON return - Email not successful, either due to invalid System Options > Email settings, or problem reaching target domain. We will receive email errors, and the password.
             Therefore, to make sure the password is not exposed, make sure to configure Email settings correctly, and make sure the User's email address is correct.
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": {
            		"EmailError": "The parameter 'from' cannot be an empty string.\u000d\u000aParameter name: from",
            		"EmailError2": "The parameter 'from' cannot be an empty string.\u000d\u000aParameter name: from",
            		"EmailSent": false,
            		"MinNonAlphaNumericCharactersLength": 2,
            		"MinPasswordLength": 8,
            		"NewUser": "TestUser",
            		"Newpassword": "letmein",
            		"Status": "Success",
            		"StatusDetail": ""
            	}
            }
             ]]>
             </code>
             </example>
             </returns>
             <remarks>
             <para>This operation is to be used with integrated providers only. It is used to create authentication account, not used to create Ingeniux CMS users.</para>
             </remarks>
        </member>
        <member name="M:IngeniuxCMService.MembershipProvidersServices.DeleteUsers(System.String)">
             <summary>
             Deletes users from Integrated Membership Provider
             </summary>
             <param name="integratedUser">
             <para>Information containing users to be deleted. It is a serialized JSON string. User id as key, User's Membership Provider as value</para>
             <example>
             <code language="javascript">
             <![CDATA[
             "{\"user1\":\"IngeniuxMembershipProvider\",\"user2\":\"IngeniuxMembershipProvider\"}"
             ]]>
             </code>
             </example>
             </param>
             <returns>
             <para>The information on the result of users removal, in their corresponding Membership Providers.</para>
             <example>
             Sample JSON return
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": {
            		"removedUsers": ["test2", "test3"]
            	}
            }
             ]]>
             </code>
             </example>
             </returns>
        </member>
        <member name="M:IngeniuxCMService.MembershipProvidersServices.ResetPassword(System.String,System.String)">
             <summary>
             Resets an integrated User's password on its Membership Provider. Also, an email is sent to target user to provide the temporary password.
             </summary>
             <param name="providerName">Name of the Membership Provider for given user</param>
             <param name="userName">User Name (Id)</param>
             <returns>
             <para>The password reset status</para>
             <example>
             Sample JSON return - Email successful
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": {
            		"EmailError": null,
            		"EmailSent": true,
            		"ErrorCode": null,
            		"ErrorMessage": null,
            		"Newpassword": null,
            		"ResetSuccessful": true
            	}
            }
             ]]>
             </code>
             </example>
             <example>
             Sample JSON return - Email failed, this will include email error and return the new password.
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": {
            		"EmailError": "The parameter 'from' cannot be an empty string.\u000d\u000aParameter name: from",,
            		"EmailSent": true,
            		"ErrorCode": null,
            		"ErrorMessage": null,
            		"Newpassword": "letmein",
            		"ResetSuccessful": true
            	}
            }
             ]]>
             </code>
             </example>
             </returns>
        </member>
        <member name="M:IngeniuxCMService.MembershipProvidersServices.GetIntegratedProvider">
             <summary>
             Retrieves list of integrated Membership Providers deployed under Ingeniux CMS site
             </summary>
             <returns>
             <para>Collection of integrated Membership Provider information only</para>
             <example>
             Sample JSON return
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": {
            		"Providers": [{
            			"key": "IngeniuxMembershipProvider",
            			"value": "RavenDBMembershipProvider"
            		}]
            	}
            }
             ]]>
             </code>
             </example>
             </returns>
        </member>
        <member name="M:IngeniuxCMService.MembershipProvidersServices.Login(System.String,System.String,System.String)">
            <summary>
            Login to Ingeniux CMS site and receive authentication token
            </summary>
            <param name="userName">User name</param>
            <param name="password">Password for User</param>
            <param name="membershipProviderName">Membership Provider name for given user. It is the "name" attribute value of membership provide entry in "local-membership.config".</param>
            <returns>Authentication token</returns>
        </member>
        <member name="M:IngeniuxCMService.Admin.ProviderManagersList.#ctor">
            <summary>
            Empty constructor for COM interop only. Don't use it.
            </summary>
        </member>
        <member name="M:IngeniuxCMService.Admin.ProvidersManager.createManagers">
            <summary>
            Usesreflection to create provider managers based on providers.
            </summary>
        </member>
        <member name="M:IngeniuxCMService.Admin.SQLMembershipProviderManager.#ctor">
            <summary>
            This constructor is left for Com Interop only. Don't use it
            </summary>
        </member>
        <member name="M:IngeniuxCMService.Admin.SQLMembershipProviderManager.GetProviderType">
            <summary>
            Static method, used to check the provider type for this manager type
            </summary>
            <returns></returns>
        </member>
        <member name="T:IngeniuxCMService.IPageCreationRulesExportService">
            <remarks>
            This is a file download service, so it needs special stream binding in the config file.
            </remarks>
        </member>
        <member name="F:IngeniuxCMService.Admin.PcrGetParentsParam.pageIds">
            <summary>
            Pipe-delimited list
            </summary>
        </member>
        <member name="F:IngeniuxCMService.Admin.PcrSupportTypeInput.selectedIds">
            <summary>
            Pipe-delimited
            </summary>
        </member>
        <member name="F:IngeniuxCMService.Admin.PcrSupportTypeInput.selectedEmails">
            <summary>
            Pipe-delimited
            </summary>
        </member>
        <member name="T:IngeniuxCMService.PageCreationRulesAdminServices">
            <summary>
            Provides administrative functionalities to manipulate Page Creation Rules.
            </summary>
        </member>
        <member name="M:IngeniuxCMService.PageCreationRulesAdminServices.List">
            <summary>
            Retrieves the list of extended information entries of Page Creation Rules, and collection of Workflow Definition basic information entries.
            </summary>
            <returns>
            <para>The object contains collection of Page Creation Rules and Workflow Definitions</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "rules": [{
                        "name": "Image",
                        "id": "PageCreationRules\/1",
                        "englishName": null,
                        "groupsCount": 2,
                        "isDefault": false,
                        "workflowEnglishName": null,
                        "workflowName": "",
                        "autoSelectParent": true,
                        "isSchemaComponent": true,
                        "parentsCount": 1,
                        "schema": "Image File",
                        "schemaEnglishName": "Image File",
                        "stylesheet": "~default~",
                        "usersCount": 0,
                        "workflowId": ""
                    }],
                    "workflowChoices": [{
                        "name": "--No Workflow--",
                        "id": "",
                        "allowedGroup": null,
                        "allowedUsers": null
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>The returned workflow definition information are choices to use create deciding whether to have Pages created via a Page Creation Rule to be put into a Workflow.</remarks>
        </member>
        <member name="M:IngeniuxCMService.PageCreationRulesAdminServices.GetRule(IngeniuxCMService.Admin.GetSingleItemParam)">
            <summary>
            Retrieves a single Page Creation Rule via its unique Id, providing full details of the Rule.
            </summary>
            <param name="data">
            <para>Object containing the unique Id of Page Creation Rule to retrieve</para>
            <example>
            Sample JSON intpu
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "itemId": "PageCreationRules/1"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Full details of the Page Creation Rule</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "info": {
                        "name": "Image",
                        "id": "PageCreationRules\/1",
                        "englishName": null,
                        "groupsCount": 2,
                        "isDefault": false,
                        "workflowEnglishName": null,
                        "workflowName": "",
                        "autoSelectParent": true,
                        "isSchemaComponent": true,
                        "parentsCount": 1,
                        "schema": "Image File",
                        "schemaEnglishName": "Image File",
                        "stylesheet": "~default~",
                        "usersCount": 0,
                        "workflowId": "",
                        "groups": [{
                            "name": "Administrators",
                            "id": "UserGroup\/1"
                        }, {
                            "name": "Authors",
                            "id": "UserGroups\/1"
                        }],
                        "users": []
                    },
                    "parents": [{
                        "name": "Listing",
                        "id": "x112",
                        "accessible": true,
                        "icon": 99,
                        "parentOnly": false,
                        "path": "Site\/Listing"
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Page Creation Rule with given Id doesn't exit, returns error status</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.PageCreationRulesAdminServices.Delete(IngeniuxCMService.Admin.PcrDeleteRuleParam)">
            <summary>
            Deletes Page Creation Rules that matche given unique Ids
            </summary>
            <param name="data">Array of Page Creation Rule Id to delete</param>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "selectedIds": ["PageCreationRules/34", "PageCreationRules/33"]
                }
            }
            ]]>
            </code>
            </example>
            <returns>
            <para>Collection of valid Page Creation Rule Ids that have been removed.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": ["PageCreationRules\/34", "PageCreationRules\/33"]
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>Any Ids that doesn't exist in Page Creation Rules collection will be ignored. Only valid Page Creation Rule Ids will be returned after they are deleted.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.PageCreationRulesAdminServices.Save(IngeniuxCMService.Admin.PcrSaveInput)">
            <summary>
            Saves the updates on an existing Page Creation Rule
            </summary>
            <param name="data">
            <para>The updated information on the Page Creation Rule</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "info": {
                        "name": "Image",
                        "id": "PageCreationRules/1",
                        "englishName": null,
                        "groupsCount": 2,
                        "isDefault": false,
                        "workflowEnglishName": null,
                        "workflowName": "",
                        "autoSelectParent": true,
                        "isSchemaComponent": true,
                        "parentsCount": 1,
                        "schema": "Image%20File",
                        "schemaEnglishName": "Image File",
                        "stylesheet": "~default~",
                        "usersCount": 0,
                        "workflowId": "",
                        "groups": ["UserGroup/1", "UserGroups/1"],
                        "users": ["INGENIUX\\awang"],
                        "newEntry": false
                    },
                    "members": [{
                        "pageId": "x112",
                        "isParent": false
                    }, {
                        "pageId": "x3",
                        "isParent": false
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Updated Page Creation Rule Data</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "info": {
                        "name": "Image",
                        "id": "PageCreationRules\/1",
                        "englishName": null,
                        "groupsCount": 2,
                        "isDefault": false,
                        "workflowEnglishName": null,
                        "workflowName": "",
                        "autoSelectParent": true,
                        "isSchemaComponent": true,
                        "parentsCount": 2,
                        "schema": "Image File",
                        "schemaEnglishName": "Image File",
                        "stylesheet": "~default~",
                        "usersCount": 1,
                        "workflowId": "",
                        "groups": [{
                            "name": "Administrators",
                            "id": "UserGroup\/1"
                        }, {
                            "name": "Authors",
                            "id": "UserGroups\/1"
                        }],
                        "users": [{
                            "name": "INGENIUX\\awang (Turtle Master)",
                            "id": "User\/INGENIUX___awang"
                        }]
                    },
                    "parents": [{
                        "name": "Listing",
                        "id": "x112",
                        "accessible": true,
                        "icon": 99,
                        "parentOnly": false,
                        "path": "Site\/Listing"
                    }, {
                        "name": "Internal Components",
                        "id": "x3",
                        "accessible": true,
                        "icon": 1,
                        "parentOnly": false,
                        "path": "Site\/Internal Components"
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Page Creation Rule with given id doesn't exist, returns error status</para>
            <para>If Schema with given friendly name doesn't exis, returns error status</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.PageCreationRulesAdminServices.CreateNew(IngeniuxCMService.Admin.PcrSaveInput)">
            <summary>
            Creates a new Page Creation Rule with given data
            </summary>
            <param name="data">
            <para>Full details of the new Page Creation Rule to be created</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "info": {
                        "newEntry": true,
                        "id": "PageCreationRules/1",
                        "name": "Document",
                        "schema": "Binary%20Document",
                        "workflowId": "",
                        "isDefault": false,
                        "stylesheet": "~default~",
                        "autoSelectParent": true,
                        "users": [],
                        "groups": ["UserGroup/1", "UserGroups/1"]
                    },
                    "members": [{
                        "pageId": "x3",
                        "isParent": false
                    }]
                }
            }
            ]]>
            </code>
            </example>
            <remarks>This operation doesn't check if there was already a Rule using the same name.</remarks>
            <remarks>All string parameters in the input must be URI encoded.</remarks>
            </param>
            <returns>
            <para>New Page Creation Rule Data</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "info": {
                        "name": "Document",
                        "id": "PageCreationRules\/65",
                        "englishName": null,
                        "groupsCount": 2,
                        "isDefault": false,
                        "workflowEnglishName": null,
                        "workflowName": "",
                        "autoSelectParent": true,
                        "isSchemaComponent": true,
                        "parentsCount": 0,
                        "schema": "Binary Document",
                        "schemaEnglishName": "Binary Document",
                        "stylesheet": "~default~",
                        "usersCount": 0,
                        "workflowId": "",
                        "groups": [{
                            "name": "Administrators",
                            "id": "UserGroup\/1"
                        }, {
                            "name": "Authors",
                            "id": "UserGroups\/1"
                        }],
                        "users": []
                    },
                    "parents": []
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.PageCreationRulesAdminServices.GetRuleParents(IngeniuxCMService.Admin.PcrGetParentsParam)">
            <summary>
            Retrieves the existing Parent Page entries detailed information for given Page Creation Rule
            </summary>
            <param name="data">
            <para>Information on the Page Creation Rules and Ids of the parent pages</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "ruleId": "PageCreationRules/65",
                    "pageIds": "x87"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Details of all existing parent pages</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "parents": [{
                        "name": "Test",
                        "id": "x87",
                        "accessible": true,
                        "icon": 99,
                        "parentOnly": false,
                        "path": "Site\/Internal Components\/Test"
                    }]
                }
            }
            
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Page Creation Rule with given Id doesn't exist, returns error status</para>
            <para>If provided parent ids contains non existing Pages, those ids will be ignored. Only information on the valid Pages will be returned.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.PageCreationRulesAdminServices.GetSupportTypeChoices_Schemas">
            <summary>
            Retrieves collection of basic Schema information.
            </summary>
            <returns>
            <para>Array of basic Schema Information</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "displayName": "Folder",
                    "friendlyName": "Folder",
                    "isComponent": true
                }, {
                    "displayName": "Image File",
                    "friendlyName": "Image File",
                    "isComponent": true
                }, {
                    "displayName": "Insert",
                    "friendlyName": "Insert",
                    "isComponent": true
                }, {
                    "displayName": "Media File",
                    "friendlyName": "Media File",
                    "isComponent": true
                }, {
                    "displayName": "Navigation",
                    "friendlyName": "Navigation",
                    "isComponent": true
                }, {
                    "displayName": "Home Page",
                    "friendlyName": "Home Page",
                    "isComponent": false
                }, {
                    "displayName": "Home Slider",
                    "friendlyName": "Home Slider",
                    "isComponent": true
                }, {
                    "displayName": "SliderFrame",
                    "friendlyName": "SliderFrame",
                    "isComponent": true
                }, {
                    "displayName": "Recent Works",
                    "friendlyName": "Recent Works",
                    "isComponent": true
                }, {
                    "displayName": "Testimonial",
                    "friendlyName": "Testimonial",
                    "isComponent": true
                }]
            }
            
            ]]>
            </code>
            </example>
            </returns>
            <remarks>The Schema entry contains just enough information for Page Creation Rule Schema selection.</remarks>
        </member>
        <member name="M:IngeniuxCMService.PageCreationRulesAdminServices.GetSupportTypeChoices_Stylesheets">
            <summary>
            Retrieves collection of basic Stylesheets information
            </summary>
            <returns>
            <para>Array of basic information of Stylesheets</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "displayName": "--Default Stylesheet--",
                    "fileName": "~default~"
                }, {
                    "displayName": "default.xsl",
                    "fileName": "default.xsl"
                }, {
                    "displayName": "error.xsl",
                    "fileName": "error.xsl"
                }, {
                    "displayName": "formFilter.xsl",
                    "fileName": "formFilter.xsl"
                }, {
                    "displayName": "formProcessor.xsl",
                    "fileName": "formProcessor.xsl"
                }, {
                    "displayName": "include-form.xsl",
                    "fileName": "include-form.xsl"
                }]
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.PageCreationRulesAdminServices.GetSupportTypeChoices_AvailableUsers(IngeniuxCMService.Admin.PcrSupportTypeInput)">
            <summary>
            Retrieves the available Users for Page Creation Rule security assignment.
            These are the users that are not assigned to Page Creation Rule yet.
            </summary>
            <param name="data">
            <para>Information containing User Ids that were already assigned to Page Creation Rule</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "listingType": "availableUsers",
                    "selectedIds": "INGENIUX\\awang",
                    "selectedEmails": ""
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Array of information of Users that weren't assigned to Page Creation Rule yet</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "name": "INGENIUX\\abusbin (abusbin)",
                    "id": "INGENIUX\\abusbin",
                    "email": ""
                }, {
                    "name": "ingeniux\\author (author)",
                    "id": "ingeniux\\author",
                    "email": ""
                }, {
                    "name": "t (t)",
                    "id": "t",
                    "email": "t@i.com"
                }]
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>Page Creation Rule allows assigning asset to individual Users directly</remarks>
        </member>
        <member name="M:IngeniuxCMService.PageCreationRulesAdminServices.GetSupportTypeChoices_AvailableGroups(IngeniuxCMService.Admin.PcrSupportTypeInput)">
            <summary>
            Retrieves the available User Groups for Page Creation Rule security assignment.
            These are the groups that are not assigned to Page Creation Rule yet.
            </summary>
            <param name="data">
            <para>Information containing User Ids that were already assigned to Page Creation Rule</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "listingType": "availableGroups",
                    "selectedIds": "UserGroup/1",
                    "selectedEmails": ""
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Array of information of User Groups that weren't assigned to Page Creation Rule yet</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "name": "Authors",
                    "id": "UserGroups\/1",
                    "userIds": ["ingeniux\\author"]
                }]
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.IPublishingSystemManagerServices.CreatePubTarget(IngeniuxCMService.PublishingTargetSaveInput)">
            <remarks>Uses the same object to serialize the input parameter, but actually contains less data</remarks>
        </member>
        <member name="M:IngeniuxCMService.IPublishingSystemManagerServices.AdministrativeReplicate(System.String,System.Boolean)">
            <remarks>From handler: replicate. This action can only be invoked via publishing manager, so it is part of the publishing services.</remarks>
        </member>
        <member name="F:IngeniuxCMService.PublishingObjectAccessGroupInfo.usersCount">
            <remarks>Escaped</remarks>
        </member>
        <member name="F:IngeniuxCMService.ReplicationTargetInput.data">
            <remarks>serialized JSON from editor. Should be deserialized as specific type of replication target object</remarks>
        </member>
        <member name="T:IngeniuxCMService.SSMapRep">
            <summary>
            The serializable class for site map
            </summary>
        </member>
        <member name="T:IngeniuxCMService.PublishingSystemManagerServices">
            <summary>
            Provides the functionality to work with the Ingeniux CMS publishing system.
            </summary>
        </member>
        <member name="M:IngeniuxCMService.PublishingSystemManagerServices.ListPubTargets">
            <summary>
            Retrieves the collection of Publishing Targets and User Groups basic information
            </summary>
            <returns>
            <para>Object contains Array of Publishing Target basic information, and array of User Groups basic information</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "groups": [{
                        "name": "Administrators",
                        "groupId": "UserGroup\/1",
                        "usersCount": 2
                    }, {
                        "name": "Authors",
                        "groupId": "UserGroups\/1",
                        "usersCount": 1
                    }],
                    "pubTargets": [{
                        "name": "Live",
                        "id": "PublishingTargets\/1",
                        "rootPage": "x2",
                        "rootPageName": "Site",
                        "site": "",
                        "transformOnPublish": false,
                        "userAgent": ""
                    }, {
                        "name": "Staging",
                        "id": "PublishingTargets\/33",
                        "rootPage": "x2",
                        "rootPageName": "Site",
                        "site": "",
                        "transformOnPublish": false,
                        "userAgent": ""
                    }, {
                        "name": "Staging 2",
                        "id": "PublishingTargets\/34",
                        "rootPage": "x2",
                        "rootPageName": "Site",
                        "site": "",
                        "transformOnPublish": false,
                        "userAgent": ""
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.PublishingSystemManagerServices.ListPubProfiles">
            <summary>
            Retrieves the list of Publishing Profiles. Publishing Profiles are collection of Publishing Target that fit certain criteria. The purpose of Publishing Profiles is easy Publishing Targets
            selection during Publish submission.
            </summary>
            <returns>
            <para>Object contains Array of Publishing Profile basic information, and array of User Groups basic information</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "groups": [{
                        "name": "Administrators",
                        "groupId": "UserGroup\/1",
                        "usersCount": 2
                    }, {
                        "name": "Authors",
                        "groupId": "UserGroups\/1",
                        "usersCount": 1
                    }],
                    "pubProfiles": [{
                        "name": "Staging",
                        "id": "PublishingProfiles\/1",
                        "targetsCount": 2
                    }, {
                        "name": "Live",
                        "id": "PublishingProfiles\/2",
                        "targetsCount": 1
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.PublishingSystemManagerServices.GetPubTarget(IngeniuxCMService.PublishingSystemItemGetParam)">
            <summary>
            Retrieves information of a single Publishing Target by its unique Id
            </summary>
            <param name="data">
            <para>Object containing unique Id of the Publishing Target</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "itemId": "PublishingTargets/1"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>
            Object containing the information of Publishing Target, the information of its replication system, and collection of User Groups
            </para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "accessibleGroups": [{
                        "name": "Administrators",
                        "groupId": "UserGroup\/1",
                        "usersCount": 2
                    }, {
                        "name": "Authors",
                        "groupId": "UserGroups\/1",
                        "usersCount": 1
                    }],
                    "info": {
                        "name": "Live",
                        "id": "PublishingTargets\/1",
                        "rootPage": "x2",
                        "rootPageName": "Site",
                        "site": "",
                        "transformOnPublish": false,
                        "userAgent": "",
                        "analytics": {
                            "analyticsEnabled": false,
                            "provider": "Ingeniux.Analytics.Google.AnalyticsDataProvider, Ingeniux.Analytics"
                        },
                        "autoRedirectCanonicalURL": true,
                        "baseUrl": "",
                        "enableDynamicPublishing": true,
                        "externalPreviewURL": "DssPreview\/IGXDynamicPreview",
                        "forceLowerCaseURL": false,
                        "globalContentRoot": "",
                        "homePageId": "x5",
                        "iceEnabled": true,
                        "iceFieldMarkupUpdateURL": "DssPreview\/IGXDTICEUpdate",
                        "includeFoldersInURL": false,
                        "normalizeUrlSeparators": false,
                        "page404Id": "",
                        "pubFolder": "Live",
                        "structuredUrlEnabled": true,
                        "urlExtension": "xml",
                        "urlSeparator": "-",
                        "useExternalPreviewURL": true
                    },
                    "replication": {
                        "doReplication": true,
                        "simultaneousReplication": false,
                        "targetTypes": [{
                            "name": "File Replication Target",
                            "type": "FileReplicationTarget"
                        }, {
                            "name": "Secure FTP Replication Target",
                            "type": "SFTPReplicationTarget"
                        }, {
                            "name": "FTP\/SSL Replication Target",
                            "type": "FTPSReplicationTarget"
                        }, {
                            "name": "FTP Replication Target",
                            "type": "FTPReplicationTarget"
                        }],
                        "targets": ["{\"TargetLocation\":\"G:\\\\SyncTests\\\\file2\",\"UseImpersonation\":false,\"ImpersonateUserName\":\"\",\"ImpersonateUserDomain\":\"\",\"ImpersonatePassword\":\"\",\"ID\":\"bc24ec5353c9417590dbcc27ee56f005\",\"Name\":\"File\",\"Disabled\":false,\"ReplicatorID\":\"Replicator_PublishingTargets_1\",\"Type\":\"Ingeniux.CMS.FileReplicationTarget\",\"typeFriendlyName\":\"Ingeniux.CMS.FileReplicationTarget\",\"Description\":\"\",\"PublishingTargetDirectory\":\"g:\\\\productdev\\\\dev_trunk\\\\cms_site\\\\app_data\\\\xml\\\\pub\\\\Live\",\"PublishingTargetID\":\"PublishingTargets\/1\",\"UseCommands\":false,\"PreReplicationCommand\":\"\",\"PostReplicationCommand\":\"\",\"PreReplicationCommandTimeout\":10,\"PostReplicationCommandTimeout\":10,\"ExemptLocations\":[],\"AdditionalLocations\":[],\"CleanupExemptLocations\":[]}"]
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Publishing Target doesn't exist, returns error status</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.PublishingSystemManagerServices.GetPubProfile(IngeniuxCMService.PublishingSystemItemGetParam)">
            <summary>
            Retrieve information of a single Publishing Profile by its unique Id
            </summary>
            <param name="data">
            <para>Object containing Publishing Profile's unique Id</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "itemId": "PublishingProfiles/1"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>
            Object containing detailed information of the Publishing Profile, and colleciton of User Groups basic information
            </para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "accessibleGroups": [{
                        "name": "Administrators",
                        "groupId": "UserGroup\/1",
                        "usersCount": 2
                    }, {
                        "name": "Authors",
                        "groupId": "UserGroups\/1",
                        "usersCount": 1
                    }],
                    "info": {
                        "name": "Staging",
                        "id": "PublishingProfiles\/1",
                        "targetsCount": 2,
                        "excludeTargets": [["PublishingTargets\/33", "PublishingTargets\/34"], ["PublishingTargets\/1"]],
                        "pubTargets": [{
                            "name": "Staging",
                            "id": "PublishingTargets\/33"
                        }, {
                            "name": "Staging 2",
                            "id": "PublishingTargets\/34"
                        }]
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Publishing Profile doesn't exist, returns error status</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.PublishingSystemManagerServices.SavePubTarget(IngeniuxCMService.PublishingTargetSaveInput)">
            <summary>
            Saves a single Publishing Target with updated information
            </summary>
            <param name="data">
            <para>The updated information on the Publishing Target and its underlying replication system</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "info": {
                        "name": "Live",
                        "id": "PublishingTargets/1",
                        "rootPage": "x2",
                        "rootPageName": "Site",
                        "site": "",
                        "transformOnPublish": false,
                        "userAgent": "",
                        "analytics": {
                            "analyticsEnabled": false,
                            "provider": "Ingeniux.Analytics.Google.AnalyticsDataProvider, Ingeniux.Analytics"
                        },
                        "autoRedirectCanonicalURL": true,
                        "baseUrl": "",
                        "enableDynamicPublishing": true,
                        "externalPreviewURL": "DssPreview/IGXDynamicPreview",
                        "forceLowerCaseURL": true,
                        "globalContentRoot": "",
                        "homePageId": "x5",
                        "iceEnabled": true,
                        "iceFieldMarkupUpdateURL": "DssPreview/IGXDTICEUpdate",
                        "includeFoldersInURL": false,
                        "normalizeUrlSeparators": false,
                        "page404Id": "",
                        "pubFolder": "Live",
                        "structuredUrlEnabled": true,
                        "urlExtension": "xml",
                        "urlSeparator": "-",
                        "useExternalPreviewURL": true,
                        "newEntry": false,
                        "analyticsProvider": "Ingeniux.Analytics.Google.AnalyticsDataProvider, Ingeniux.Analytics",
                        "analyticsEnabled": false
                    },
                    "members": ["UserGroup/1", "UserGroups/1"],
                    "replication": {
                        "doReplication": true,
                        "simultaneousReplication": false,
                        "targets": [{
                            "type": "FileReplicationTarget",
                            "ID": "bc24ec5353c9417590dbcc27ee56f005",
                            "data": "{\"Disabled\":false,\"ID\":\"bc24ec5353c9417590dbcc27ee56f005\",\"Name\":\"File\",\"Description\":\"\",\"TargetLocation\":\"G:\\\\SyncTests\\\\file2\",\"CompareContent\":false,\"UseCommands\":false,\"PreReplicationCommand\":\"\",\"PreReplicationCommandTimeout\":10,\"PostReplicationCommand\":\"\",\"PostReplicationCommandTimeout\":10,\"UseImpersonation\":false,\"ImpersonateUserName\":\"\",\"ImpersonateUserDomain\":\"\",\"ImpersonatePassword\":\"\"}",
                            "exemptLocations": [],
                            "additionalLocations": [],
                            "cleanupExemptLocations": []
                        }]
                    }
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Updated information of the Publishing Target after save, and list of all Publishing Targets</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "allowedTargets": [{
                        "name": "Live",
                        "id": "PublishingTargets\/1",
                        "dynamicPublish": true,
                        "previewUrl": "DssPreview\/IGXDynamicPreview",
                        "rootPageId": "x2",
                        "structuredUrlEnabled": true
                    }, {
                        "name": "Staging",
                        "id": "PublishingTargets\/33",
                        "dynamicPublish": true,
                        "previewUrl": "DssPreview\/IGXDynamicPreview",
                        "rootPageId": "x2",
                        "structuredUrlEnabled": true
                    }, {
                        "name": "Staging 2",
                        "id": "PublishingTargets\/34",
                        "dynamicPublish": true,
                        "previewUrl": "DssPreview\/IGXDynamicPreview",
                        "rootPageId": "x2",
                        "structuredUrlEnabled": true
                    }],
                    "info": {
                        "name": "Live",
                        "id": "PublishingTargets\/1",
                        "rootPage": "x2",
                        "rootPageName": "Site",
                        "site": "",
                        "transformOnPublish": false,
                        "userAgent": "",
                        "analytics": {
                            "analyticsEnabled": false,
                            "provider": null
                        },
                        "autoRedirectCanonicalURL": true,
                        "baseUrl": "",
                        "enableDynamicPublishing": true,
                        "externalPreviewURL": "DssPreview\/IGXDynamicPreview",
                        "forceLowerCaseURL": true,
                        "globalContentRoot": "",
                        "homePageId": "x5",
                        "iceEnabled": true,
                        "iceFieldMarkupUpdateURL": "DssPreview\/IGXDTICEUpdate",
                        "includeFoldersInURL": false,
                        "normalizeUrlSeparators": false,
                        "page404Id": "",
                        "pubFolder": "Live",
                        "structuredUrlEnabled": true,
                        "urlExtension": "xml",
                        "urlSeparator": "-",
                        "useExternalPreviewURL": true
                    },
                    "replication": {
                        "doReplication": true,
                        "simultaneousReplication": false,
                        "targetTypes": [{
                            "name": "File Replication Target",
                            "type": "FileReplicationTarget"
                        }, {
                            "name": "Secure FTP Replication Target",
                            "type": "SFTPReplicationTarget"
                        }, {
                            "name": "FTP\/SSL Replication Target",
                            "type": "FTPSReplicationTarget"
                        }, {
                            "name": "FTP Replication Target",
                            "type": "FTPReplicationTarget"
                        }],
                        "targets": ["{\"Disabled\":false,\"ID\":\"bc24ec5353c9417590dbcc27ee56f005\",\"Name\":\"File\",\"Description\":\"\",\"TargetLocation\":\"G:\\\\SyncTests\\\\file2\",\"UseCommands\":false,\"PreReplicationCommand\":\"\",\"PreReplicationCommandTimeout\":10,\"PostReplicationCommand\":\"\",\"PostReplicationCommandTimeout\":10,\"UseImpersonation\":false,\"ImpersonateUserName\":\"\",\"ImpersonateUserDomain\":\"\",\"ImpersonatePassword\":\"\",\"ReplicatorID\":\"Replicator_PublishingTargets_1\",\"Type\":\"Ingeniux.CMS.FileReplicationTarget\",\"typeFriendlyName\":\"Ingeniux.CMS.FileReplicationTarget\",\"PublishingTargetDirectory\":\"g:\\\\productdev\\\\dev_trunk\\\\cms_site\\\\app_data\\\\xml\\\\pub\\\\Live\",\"PublishingTargetID\":\"PublishingTargets\/1\",\"ExemptLocations\":[],\"AdditionalLocations\":[],\"CleanupExemptLocations\":[]}"]
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Publishing Target doesn't exist, or Root Page doesn't exist, returns error status</para>
            <para>If Structured URL is enabled, but Structured URL home page doesn't exist, returns error status</para>
            <para>If Global Content Root Page id is not empty, but the Page doesn't exist, returns error status</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.PublishingSystemManagerServices.SavePubProfile(IngeniuxCMService.PublishingProfileSaveInput)">
            <summary>
            Saves a single Publishing Profile with updated information
            </summary>
            <param name="data">
            <para>The updated information of the Publishing Profile</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "info": {
                        "name": "Staging",
                        "id": "PublishingProfiles/1",
                        "targetsCount": 2,
                        "excludeTargets": [["PublishingTargets/33", "PublishingTargets/34"], ["PublishingTargets/1"]],
                        "pubTargets": ["PublishingTargets/33", "PublishingTargets/34"],
                        "newEntry": false
                    },
                    "members": ["UserGroup/1"]
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Updated information of the Publishing Profile after save.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "info": {
                        "name": "Staging",
                        "id": "PublishingProfiles\/1",
                        "targetsCount": 2,
                        "excludeTargets": [["PublishingTargets\/33", "PublishingTargets\/34"], ["PublishingTargets\/1"]],
                        "pubTargets": [{
                            "name": "Staging",
                            "id": "PublishingTargets\/33"
                        }, {
                            "name": "Staging 2",
                            "id": "PublishingTargets\/34"
                        }]
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Publishing Profile doesn't exist, returns error status.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.PublishingSystemManagerServices.CreatePubTarget(IngeniuxCMService.PublishingTargetSaveInput)">
            <summary>
            Creates a new Publishing Target
            </summary>
            <param name="data">
            <para>Object containing the information of new Publishing Target to be created</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "info": {
                        "newEntry": true,
                        "name": "Live2",
                        "rootPage": "x2",
                        "pubFolder": "Live2",
                        "homePageId": "x5",
                        "page404Id": "",
                        "structuredUrlEnabled": true,
                        "id": "",
                        "globalContentRoot": "",
                        "transformOnPublish": false,
                        "userAgent": "",
                        "site": "",
                        "urlExtension": "xml",
                        "urlSeparator": "-",
                        "forceLowerCaseURL": false,
                        "autoRedirectCanonicalURL": true,
                        "includeFoldersInURL": false,
                        "normalizeUrlSeparators": false,
                        "baseUrl": "",
                        "useExternalPreviewURL": true,
                        "externalPreviewURL": "DssPreview/IGXDynamicPreview",
                        "iceFieldMarkupUpdateURL": "DssPreview/IGXDTICEUpdate",
                        "analyticsProvider": "Ingeniux.Analytics.Google.AnalyticsDataProvider, Ingeniux.Analytics",
                        "analyticsEnabled": false,
                        "enableDynamicPublishing": true
                    },
                    "members": ["UserGroup/1", "UserGroups/1"],
                    "replication": {
                        "doReplication": false,
                        "simultaneousReplication": false,
                        "targets": []
                    }
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Object containing detailed information of newly created Publishing Target, and basic information of all Publishign Targets.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "allowedTargets": [{
                        "name": "Live",
                        "id": "PublishingTargets\/1",
                        "dynamicPublish": true,
                        "previewUrl": "DssPreview\/IGXDynamicPreview",
                        "rootPageId": "x2",
                        "structuredUrlEnabled": true
                    }, {
                        "name": "Staging",
                        "id": "PublishingTargets\/33",
                        "dynamicPublish": true,
                        "previewUrl": "DssPreview\/IGXDynamicPreview",
                        "rootPageId": "x2",
                        "structuredUrlEnabled": true
                    }, {
                        "name": "Staging 2",
                        "id": "PublishingTargets\/34",
                        "dynamicPublish": true,
                        "previewUrl": "DssPreview\/IGXDynamicPreview",
                        "rootPageId": "x2",
                        "structuredUrlEnabled": true
                    }, {
                        "name": "Live2",
                        "id": "PublishingTargets\/35",
                        "dynamicPublish": true,
                        "previewUrl": "DssPreview\/IGXDynamicPreview",
                        "rootPageId": "x2",
                        "structuredUrlEnabled": true
                    }],
                    "info": {
                        "name": "Live2",
                        "id": "PublishingTargets\/35",
                        "rootPage": "x2",
                        "rootPageName": "Site",
                        "site": "",
                        "transformOnPublish": false,
                        "userAgent": "",
                        "analytics": {
                            "analyticsEnabled": false,
                            "provider": null
                        },
                        "autoRedirectCanonicalURL": true,
                        "baseUrl": "",
                        "enableDynamicPublishing": true,
                        "externalPreviewURL": "DssPreview\/IGXDynamicPreview",
                        "forceLowerCaseURL": false,
                        "globalContentRoot": "",
                        "homePageId": "x5",
                        "iceEnabled": true,
                        "iceFieldMarkupUpdateURL": "DssPreview\/IGXDTICEUpdate",
                        "includeFoldersInURL": false,
                        "normalizeUrlSeparators": false,
                        "page404Id": "",
                        "pubFolder": "Live2",
                        "structuredUrlEnabled": true,
                        "urlExtension": "xml",
                        "urlSeparator": "-",
                        "useExternalPreviewURL": true
                    },
                    "replication": {
                        "doReplication": false,
                        "simultaneousReplication": false,
                        "targetTypes": [{
                            "name": "File Replication Target",
                            "type": "FileReplicationTarget"
                        }, {
                            "name": "Secure FTP Replication Target",
                            "type": "SFTPReplicationTarget"
                        }, {
                            "name": "FTP\/SSL Replication Target",
                            "type": "FTPSReplicationTarget"
                        }, {
                            "name": "FTP Replication Target",
                            "type": "FTPReplicationTarget"
                        }],
                        "targets": []
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If an existing Publishing Target with the same name or Publishing Folder path exists, returns error status</para>
            <para>If the Root Page doesn't exist, returns error status</para>
            <para>If Structured URL is enabled, but Structured URL home page doesn't exist, returns error status</para>
            <para>If Global Content Root Page id is not empty, but the Page doesn't exist, returns error status</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.PublishingSystemManagerServices.CreatePubProfile(IngeniuxCMService.PublishingProfileSaveInput)">
            <summary>
            Creates a new Publishing Profile
            </summary>
            <param name="data">
            <para>Object containing information of new Publishing Profile</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "info": {
                        "newEntry": true,
                        "name": "Live",
                        "pubTargets": ["PublishingTargets/1", "PublishingTargets/35"]
                    },
                    "members": ["UserGroup/1", "UserGroups/1"]
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Object containing detailed information of newsly created Publishing Profile</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "info": {
                        "name": "Live",
                        "id": "PublishingProfiles\/33",
                        "targetsCount": 2,
                        "excludeTargets": [["PublishingTargets\/33", "PublishingTargets\/34"]],
                        "pubTargets": [{
                            "name": "Live",
                            "id": "PublishingTargets\/1"
                        }, {
                            "name": "Live2",
                            "id": "PublishingTargets\/35"
                        }]
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.PublishingSystemManagerServices.DeleteTargets(IngeniuxCMService.UniqueObjectsDeleteParam)">
            <summary>
            Deletes collection of Publishing Targets
            </summary>
            <param name="data">
            <para>Object containing array of Id of Publishing Targets be deleted</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "selectedIds": ["PublishingTargets/34", "PublishingTargets/35"]
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Object containing the Id of Publishing Targets that were actually deleted, and array of basic information on available Publishing Targets</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "deletedIds": ["PublishingTargets\/34", "PublishingTargets\/35"],
                    "allowedTargets": [{
                        "name": "Live",
                        "id": "PublishingTargets\/1",
                        "dynamicPublish": true,
                        "previewUrl": "DssPreview\/IGXDynamicPreview",
                        "rootPageId": "x2",
                        "structuredUrlEnabled": true
                    }, {
                        "name": "Staging",
                        "id": "PublishingTargets\/33",
                        "dynamicPublish": true,
                        "previewUrl": "DssPreview\/IGXDynamicPreview",
                        "rootPageId": "x2",
                        "structuredUrlEnabled": true
                    }, {
                        "name": "Staging 2",
                        "id": "PublishingTargets\/34",
                        "dynamicPublish": true,
                        "previewUrl": "DssPreview\/IGXDynamicPreview",
                        "rootPageId": "x2",
                        "structuredUrlEnabled": true
                    }, {
                        "name": "Live2",
                        "id": "PublishingTargets\/35",
                        "dynamicPublish": true,
                        "previewUrl": "DssPreview\/IGXDynamicPreview",
                        "rootPageId": "x2",
                        "structuredUrlEnabled": true
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>Non-existing Publishing Targets will be ignored. The returned list of delete Ids are Publishing Targets that exist.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.PublishingSystemManagerServices.DeleteProfiles(IngeniuxCMService.UniqueObjectsDeleteParam)">
            <summary>
            Deletes collection of Publishing Profiles
            </summary>
            <param name="data">
            <para>Object containing array of Id of Publishing Profiles to be deleted</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "selectedIds": ["PublishingProfiles/1"]
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Object containing array of Publishing Profile Ids that were deleted</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "deletedIds": ["PublishingProfiles\/1"]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>Non-existing Publishing Profiles will be ignored</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.PublishingSystemManagerServices.AdministrativeReplicate(System.String,System.Boolean)">
            <summary>
            Perform a replication directly on a Publishing Target without publishing.
            </summary>
            <param name="pubTargetId">Id of the Publishing Target</param>
            <param name="clean">Whether to perform a replication that will clean up files not no longer exists in the Publishing Folder</param>
            <returns>
            <para>Object containing instructions of the administrative replication</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "clean": false,
                    "pubTargetId": "PublishingTargets\/1"
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Publishing Target doesn't exist, returns error status</para>
            <para>If Publishing Target's replication function is not enabled, returns error status</para>
            <para>This opertaion will return a response right away, the actual replication will be performed in the background and may take some time to finish</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.PublishingSystemManagerServices.GetUserAgentsAndSites">
            <summary>
            Retrieves the collections of User Agents and Sites. User Agents are Sites are branding definitions that get trigger at runntime.
            User Agents affect branding via User Agent string, Sites affect branding via access URL.
            </summary>
            <returns>
            <para>Object containing arrays of basic information of User Agents and Sites</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "Sites": [{
                        "Name": "Corporation",
                        "SearchString": "corp",
                        "SiteGroup": "Corp"
                    }, {
                        "Name": "Support",
                        "SearchString": "support",
                        "SiteGroup": "Support"
                    }],
                    "UserAgents": [{
                        "ContentType": "text\/html",
                        "FileExtension": "xml",
                        "Name": "IE",
                        "SearchString": "ie"
                    }, {
                        "ContentType": "text\/html",
                        "FileExtension": "xml",
                        "Name": "Chrome",
                        "SearchString": "chrome"
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.PublishingSystemManagerServices.Publish(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            Performs a Publish on a Publishing Target
            </summary>
            <param name="pageId">Root Page Id for Publishing</param>
            <param name="pubTargetId">Publishing Target Id</param>
            <param name="incremental">Whether to publich changes only, or perform full site publish</param>
            <param name="includeChildren">Include descendants of the Root Page or not</param>
            <param name="sitePublish">Whether this is a publishing a full site, or just specified page (with or without descendants)</param>
            <returns>
            <para>Result of Publishing submission</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "includeChildren": true,
                    "incremental": true,
                    "pageId": "x2",
                    "pubTargetName": "Live",
                    "targetId": "PublishingTargets\/1"
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Publishing Target doesn't exist, returns error status</para>
            <para>If Root Page Id is not specified, uses the Root Page of the Publishing Target</para>
            <para>If "sitePublish" is true, do a full site publish on the Target, otherwise, it is a Page only publish with or without descendants</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.PublishingSystemManagerServices.GetRepTargetTypes">
            <summary>
            Retrieves the list of Replication Target types. These are supported replication target types by the Ingeniux CMS site.
            </summary>
            <returns>
            <para>Array of Replication Target types</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "targetTypes": [{
                        "name": "File Replication Target",
                        "type": "FileReplicationTarget"
                    }, {
                        "name": "Secure FTP Replication Target",
                        "type": "SFTPReplicationTarget"
                    }, {
                        "name": "FTP\/SSL Replication Target",
                        "type": "FTPSReplicationTarget"
                    }, {
                        "name": "FTP Replication Target",
                        "type": "FTPReplicationTarget"
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.PublishingSystemManagerServices.GetAssignedTargets">
            <summary>
            Retrieves the list of Publishing Targets that weren were assigned to any Publishing Profiles
            </summary>
            <returns>
            <para>Object containing array of Publishing Target Ids that are included by Publishing Profiles already</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "excludeIds": [["PublishingTargets\/1"]]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="T:IngeniuxCMService.RedirectServices">
            <summary>
            Provides functionality to manage the redirects system for run-time sites.
            </summary>
        </member>
        <member name="M:IngeniuxCMService.RedirectServices.ListRedirects">
            <summary>
            Retrieves the collection of Redirect entries for all Publishing Targets
            </summary>
            <returns>
            <para>Collection of Redirect entries</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "Redirects": [{
                        "ID": "redirects\/1",
                        "Name": "redirects\/1",
                        "From": "\/support\/contactus",
                        "SelectedTgtIDs": "PublishingTargets\/1",
                        "SelectedTgtNames": "Live",
                        "To": "http:\/\/www.ingeniux.com\/contactus"
                    }, {
                        "ID": "redirects\/2",
                        "Name": "redirects\/2",
                        "From": "\/support\/contactus",
                        "SelectedTgtIDs": "PublishingTargets\/33",
                        "SelectedTgtNames": "Staging",
                        "To": "http:\/\/test.ingeniux.com\/contactus"
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.RedirectServices.SaveRedirect(IngeniuxCMService.RedirectInput)">
            <summary>
            Creates/Updates a Redirect entry
            </summary>
            <param name="data">
            <para>Object containing information to create/update a Redirect entry</para>
            /// <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "From": "/support/contactus",
                    "To": "http://www.ingeniux.com/contactus",
                    "SelectedTgtIds": ["PublishingTargets/1"],
                    "ID": "redirects/1"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Listing of all Redirect entries</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "Redirects": [{
                        "ID": "redirects\/1",
                        "Name": "redirects\/1",
                        "From": "\/support\/contactus",
                        "SelectedTgtIDs": "PublishingTargets\/1",
                        "SelectedTgtNames": "Live",
                        "To": "http:\/\/www.ingeniux.com\/contactus"
                    }, {
                        "ID": "redirects\/2",
                        "Name": "redirects\/2",
                        "From": "\/support\/contactus",
                        "SelectedTgtIDs": "PublishingTargets\/33",
                        "SelectedTgtNames": "Staging",
                        "To": "http:\/\/test.ingeniux.com\/contactus"
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If the "Id" property of the input parameter is not provided, we are saving a new redirect entry</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.RedirectServices.DeleteRedirects(System.String[])">
            <summary>
            Deletes a collection of Redirect entries
            </summary>
            <param name="data">Array of Redirect entry Ids</param>
            <returns>
            <para>Listing of all Redirect entries</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "Redirects": [{
                        "ID": "redirects\/1",
                        "Name": "redirects\/1",
                        "From": "\/support\/contactus",
                        "SelectedTgtIDs": "PublishingTargets\/1",
                        "SelectedTgtNames": "Live",
                        "To": "http:\/\/www.ingeniux.com\/contactus"
                    }, {
                        "ID": "redirects\/2",
                        "Name": "redirects\/2",
                        "From": "\/support\/contactus",
                        "SelectedTgtIDs": "PublishingTargets\/33",
                        "SelectedTgtNames": "Staging",
                        "To": "http:\/\/test.ingeniux.com\/contactus"
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>Non-existing Redirect entries will be ignored</para>
            </remarks>
        </member>
        <member name="T:IngeniuxCMService.SiteDefinitionsLocalizationServices">
            <summary>
            Provides functionality to translate schemas, page creation rules, workflow definitions, and workflow states for specific user-interface languages.
            </summary>
        </member>
        <member name="M:IngeniuxCMService.SiteDefinitionsLocalizationServices.GetWorkflowDefinition(IngeniuxCMService.SingleSiteDefitionLocalizationGetInput)">
            <summary>
            Retrieves a single Workflow Definition's Localization
            </summary>
            <param name="data">
            <para>Workflow Definition information</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "id": "WorkflowDefinitions/2",
                    "label": "Workflow Definition Name:"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Localization of the given Workflow Definition</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "children": [{
                        "name": "WorkflowTransition_WorkflowDefinitions\/2_1",
                        "firstEntry": {
                            "label": "Name:",
                            "original": "Initial",
                            "target": "",
                            "name": "Name"
                        },
                        "isDone": false,
                        "label": "Initial",
                        "secondEntry": {
                            "label": "Description:",
                            "original": "",
                            "target": "",
                            "name": "Description"
                        }
                    }, {
                        "name": "WorkflowTransition_WorkflowDefinitions\/2_2",
                        "firstEntry": {
                            "label": "Name:",
                            "original": "Transition5",
                            "target": "",
                            "name": "Name"
                        },
                        "isDone": false,
                        "label": "Transition5",
                        "secondEntry": {
                            "label": "Description:",
                            "original": "",
                            "target": "",
                            "name": "Description"
                        }
                    }, {
                        "name": "WorkflowTransition_WorkflowDefinitions\/2_3",
                        "firstEntry": {
                            "label": "Name:",
                            "original": "Transition6",
                            "target": "",
                            "name": "Name"
                        },
                        "isDone": false,
                        "label": "Transition6",
                        "secondEntry": {
                            "label": "Description:",
                            "original": "",
                            "target": "",
                            "name": "Description"
                        }
                    }, {
                        "name": "WorkflowTransition_WorkflowDefinitions\/2_4",
                        "firstEntry": {
                            "label": "Name:",
                            "original": "Transition7",
                            "target": "",
                            "name": "Name"
                        },
                        "isDone": false,
                        "label": "Transition7",
                        "secondEntry": {
                            "label": "Description:",
                            "original": "",
                            "target": "",
                            "name": "Description"
                        }
                    }],
                    "descriptionField": {
                        "label": "Workflow Definition Description:",
                        "original": "",
                        "target": null
                    },
                    "nameField": {
                        "label": "Workflow Definition Name:",
                        "original": "Standard",
                        "target": null
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Workflow Definition doesn't exist, returns error status</para>
            <para>If Localization for Workflow Definition doesn't exist, all the "isDone" field of transition entries are "false"</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SiteDefinitionsLocalizationServices.SaveWorkflowDefinition(IngeniuxCMService.WorkflowDefinitionLocalizationSaveInput)">
            <summary>
            Saves the localization for a single Workflow Definition. If localization didn't exist before for the Definition, a new entry will be created.
            </summary>
            <param name="data">
            <para>The localization of Workflow Definition's name, description and all the transitions</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "id": "WorkflowDefinitions/3",
                    "name": "Single Step",
                    "description": "",
                    "Members": [{
                        "ID": "WorkflowTransition_WorkflowDefinitions/3_1",
                        "Name": "Start up",
                        "Description": "Executed after push page into workflow"
                    }, {
                        "ID": "WorkflowTransition_WorkflowDefinitions/3_2",
                        "Name": "Publish",
                        "Description": "Publish the page"
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Object containing the localized name for the Workflow Definition</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "newName": "Single Step",
                    "save": true
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>English or English translation is allowed. This allows to change descriptive text only without touching original Workflow Definition</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SiteDefinitionsLocalizationServices.GetWorkstate(IngeniuxCMService.SingleSiteDefitionLocalizationGetInput)">
            <summary>
            Retrieves a single Workstate's localization
            </summary>
            <param name="data">
            <para>Workstate Id and its current name</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "id": "WorkStates/38",
                    "label": "Workflow State Name:"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Localization of the given Workstate</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "children": null,
                    "descriptionField": {
                        "label": "Workflow State Description:",
                        "original": "",
                        "target": ""
                    },
                    "nameField": {
                        "label": "Workflow State Name:",
                        "original": "Publishing",
                        "target": ""
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Workstate doesn't exist, returns error status</para>
            <para>If Localization for Workstate doesn't exist, all the "isDone" field of transition entries are "false"</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SiteDefinitionsLocalizationServices.SaveWorkstate(IngeniuxCMService.SiteDefinitionItemLocalizationSaveInput)">
            <summary>
            Saves the localization for a single Workstate
            </summary>
            <param name="data">
            <para>Localized name and description of the Workstate</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "id": "WorkStates/38",
                    "name": "Being Published",
                    "description": "Page on the state of being published",
                    "Members": []
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Object containing localized Workstate name</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "newName": "Being Published",
                    "save": true
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>English or English translation is allowed. This allows to change descriptive text only without touching original Workstate</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SiteDefinitionsLocalizationServices.GetPCR(IngeniuxCMService.SingleSiteDefitionLocalizationGetInput)">
            <summary>
            Retrieves a single Page Creation Rule's localization
            </summary>
            <param name="data">
            <para>Object containing Page Creation Rule's Id and original name</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "id": "PageCreationRules/1",
                    "label": "Page Creation Rule Name:"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Localization of the Page Creation Rule, which only contains translated name</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "children": null,
                    "descriptionField": null,
                    "nameField": {
                        "label": "Page Creation Rule Name:",
                        "original": "Image",
                        "target": "Image"
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Page Creation Rule doesn't exist, returns error status</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SiteDefinitionsLocalizationServices.SavePCR(IngeniuxCMService.SiteDefinitionItemLocalizationSaveInput)">
            <summary>
            Saves the localization of a single Page Creation Rule
            </summary>
            <param name="data">
            <para>Localization of Page Creation Rule</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "id": "PageCreationRules/1",
                    "name": "Create Image Component",
                    "description": "",
                    "Members": []
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Object containing localized Page Creation Rule name</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "newName": "Create Image Component",
                    "save": true
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>English or English translation is allowed. This allows to change descriptive text only without touching original Page Creation Rule</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SiteDefinitionsLocalizationServices.GetSchema(IngeniuxCMService.SingleSiteDefitionLocalizationGetInput)">
            <summary>
            Retrieves a single Schema's localization
            </summary>
            <param name="data">
            <para>Object containng Schema Id and original Schema name</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "id": "Details",
                    "label": "Schema Friendly Name:"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Localization of the given Schema, including Schema name, description and localization of all its fields</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "children": [{
                        "name": "Title",
                        "firstEntry": {
                            "label": "Label:",
                            "original": "Title",
                            "target": "",
                            "name": "Label"
                        },
                        "isDone": false,
                        "label": "Title",
                        "secondEntry": {
                            "label": "Help Text:",
                            "original": "",
                            "target": "",
                            "name": "HelpText"
                        }
                    }, {
                        "name": "BodyCopy",
                        "firstEntry": {
                            "label": "Label:",
                            "original": "Body Copy",
                            "target": "",
                            "name": "Label"
                        },
                        "isDone": false,
                        "label": "Body Copy",
                        "secondEntry": {
                            "label": "Help Text:",
                            "original": "",
                            "target": "",
                            "name": "HelpText"
                        }
                    }, {
                        "name": "SiteControl",
                        "firstEntry": {
                            "label": "Label:",
                            "original": "Site Control",
                            "target": "",
                            "name": "Label"
                        },
                        "isDone": false,
                        "label": "Site Control",
                        "secondEntry": {
                            "label": "Help Text:",
                            "original": "",
                            "target": "",
                            "name": "HelpText"
                        }
                    }, {
                        "name": "AncestorNavigation",
                        "firstEntry": {
                            "label": "Label:",
                            "original": "Ancestor Navigation",
                            "target": "",
                            "name": "Label"
                        },
                        "isDone": false,
                        "label": "Ancestor Navigation",
                        "secondEntry": {
                            "label": "Help Text:",
                            "original": "",
                            "target": "",
                            "name": "HelpText"
                        }
                    }],
                    "descriptionField": null,
                    "nameField": {
                        "label": "Schema Friendly Name:",
                        "original": "Details",
                        "target": ""
                    },
                    "isIncomplete": true,
                    "isOutDated": true,
                    "isTranslated": false,
                    "metaData": "Details"
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Schema doesn't exist, returns error status</para>
            <para>If Localization for Schema doesn't exist, all the "isDone" field of transition entries are "false"</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SiteDefinitionsLocalizationServices.SaveSchema(IngeniuxCMService.SchemaLocalizationSaveInput)">
            <summary>
            Saves the localization of given Schema
            </summary>
            <param name="data">
            <para>Localization of Schema, including Schema friendly name and localization of all its fields</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "id": "Details",
                    "metaData": "Details",
                    "name": "细节",
                    "description": "",
                    "Members": [{
                        "ID": "Title",
                        "Label": "标题",
                        "HelpText": ""
                    }, {
                        "ID": "BodyCopy",
                        "Label": "内容",
                        "HelpText": ""
                    }, {
                        "ID": "SiteControl",
                        "Label": "网站通用内容",
                        "HelpText": "指向通用内容部件"
                    }, {
                        "ID": "AncestorNavigation",
                        "Label": "祖先导航",
                        "HelpText": "列出所有网页的祖先"
                    }],
                    "subType": "page"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Object containing Schema's localized name and all of the localized help text for its fields</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "newName": "细节",
                    "save": true,
                    "helpText": [{
                        "Key": "Title",
                        "Value": ""
                    }, {
                        "Key": "BodyCopy",
                        "Value": ""
                    }, {
                        "Key": "SiteControl",
                        "Value": "指向通用内容部件"
                    }, {
                        "Key": "AncestorNavigation",
                        "Value": "列出所有网页的祖先"
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>English or English translation is allowed. This allows to change descriptive text only without touching original Schema</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SiteDefinitionsLocalizationServices.GetLocalizationStats">
            <summary>
            Retrieves the summary of Site Definitions Localization on the Ingeniux CMS site
            </summary>
            <returns>
            <para>Summary of Site Definitions Localization, including localization for Schemas, Page Creation Rules, Workflow Definitions and Workstates</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "ComponentSchemas": {
                        "all": 33,
                        "done": 0,
                        "percent": 0
                    },
                    "IsStats": true,
                    "LastUpdateDate": "Date(1391016638500)",
                    "PCRs": {
                        "all": 2,
                        "done": 1,
                        "percent": 50
                    },
                    "PageSchemas": {
                        "all": 2,
                        "done": 27,
                        "percent": 1350
                    },
                    "WorkflowDefinitions": {
                        "all": 2,
                        "done": 1,
                        "percent": 50
                    },
                    "WorkflowStates": {
                        "all": 5,
                        "done": 1,
                        "percent": 20
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.SiteDefinitionsLocalizationServices.GetPageSchemas">
            <summary>
            Retrieves localization on all Page Schemas of the site. The name on each entry is localized name if localization exists
            </summary>
            <returns>
            <para>Collection of localized or original basic information on Schemas for creating Pages</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "ID": "Home",
                    "Name": "Home Page",
                    "isInComplete": false,
                    "isOutDated": true,
                    "isTranslated": true
                }, {
                    "ID": "Details",
                    "Name": "细节",
                    "isInComplete": false,
                    "isOutDated": false,
                    "isTranslated": true
                }]
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.SiteDefinitionsLocalizationServices.GetComponentSchemas">
            <summary>
            Retrieves localization on all Component Schemas of the site. The name on each entry is localized name if localization exists
            </summary>
            <returns>
            <para>Collection of localized or original basic information on Schemas for creating Components</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "ID": "Schemas\/12",
                    "Name": "Binary File",
                    "isInComplete": false,
                    "isOutDated": true,
                    "isTranslated": true
                }, {
                    "ID": "Schemas\/568",
                    "Name": "图像",
                    "isInComplete": false,
                    "isOutDated": false,
                    "isTranslated": true
                }]
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.SiteDefinitionsLocalizationServices.GetPCRs">
            <summary>
            Retrieves localization on all Page Creation Rules on the site. The name of each entry is localized name if localization exists
            </summary>
            <returns>
            <para>Collection of localized or original basic information of Page Creation Rules</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "ID": "PageCreationRules\/65",
                    "Name": "Document",
                    "isInComplete": true,
                    "isOutDated": true,
                    "isTranslated": false
                }, {
                    "ID": "PageCreationRules\/1",
                    "Name": "Créer un composant de l'image",
                    "isInComplete": false,
                    "isOutDated": false,
                    "isTranslated": true
                }]
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.SiteDefinitionsLocalizationServices.GetWorkflowDefinitions">
            <summary>
            Retrieves all Workflow Definitions on the site. The name of each entry is localized name if localization exists
            </summary>
            <returns>
            <para>Collection of localized or original basic information of Workflow Definitions</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "ID": "WorkflowDefinitions\/2",
                    "Name": "Standard",
                    "isInComplete": true,
                    "isOutDated": true,
                    "isTranslated": false
                }, {
                    "ID": "WorkflowDefinitions\/3",
                    "Name": "Paso a paso",
                    "isInComplete": false,
                    "isOutDated": false,
                    "isTranslated": true
                }]
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.SiteDefinitionsLocalizationServices.GetWorkstates">
            <summary>
            Retrieves all Workstates on the site. The name of each entry is localized name if localization exists
            </summary>
            <returns>
            <para>Collection of localized or original basic information of Workstates</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "ID": "WorkStates\/36",
                    "Name": "Approving",
                    "isInComplete": true,
                    "isOutDated": true,
                    "isTranslated": false
                }, {
                    "ID": "WorkStates\/35",
                    "Name": "Authoring",
                    "isInComplete": true,
                    "isOutDated": true,
                    "isTranslated": false
                }, {
                    "ID": "WorkStates\/1",
                    "Name": "Initial",
                    "isInComplete": true,
                    "isOutDated": false,
                    "isTranslated": false
                }, {
                    "ID": "WorkStates\/37",
                    "Name": "検討する",
                    "isInComplete": true,
                    "isOutDated": true,
                    "isTranslated": false
                }, {
                    "ID": "WorkStates\/38",
                    "Name": "Being Published",
                    "isInComplete": false,
                    "isOutDated": false,
                    "isTranslated": true
                }]
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.ISystemOptionsServices.GetData(IngeniuxCMService.SystemOptionsGetParam)">
            <remarks>This service must return a JSON-serialized string. Because the return can be anything
            from the old structure, this requires one further step from the client script to deserialize the JSON data from the
            response message.</remarks>
        </member>
        <member name="M:IngeniuxCMService.ISystemOptionsServices.SetData(IngeniuxCMService.SystemOptionsSetInputInfo)">
            <remarks>This service must use JSON string as an input and a return. Because the types of input
            are so different from each other and impossible to deserialize,
            the client-side script must first double-serialize the object parameter.</remarks>
        </member>
        <member name="T:IngeniuxCMService.SystemOptionsServices">
            <summary>
            Provides the functionality to manage Ingeniux CMS global settings.
            </summary>
        </member>
        <member name="M:IngeniuxCMService.SystemOptionsServices.GetConfig">
            <summary>
            Retrieves the all entries of System Options, in a 2 level deep tree structure
            </summary>
            <returns>
            <para>All System Options entries in a tree structure.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "name": "System Options",
                    "id": "SysOptRoot",
                    "children": [{
                        "__type": "SystemOptions_container:#IngeniuxCMService",
                        "name": "Dynamic Site Server Configuration",
                        "id": "RTSettingsRoot",
                        "children": [{
                            "__type": "SystemOptions_setting:#IngeniuxCMService",
                            "name": "Global Variables Configuration",
                            "id": "globalVariables",
                            "children": null,
                            "desc": "Manage Global Variable values for Dynamic Content Placements. Each Global Variable can be unique values for specific Publishing Targets.",
                            "navName": "Global Variables",
                            "type": "setting",
                            "contextDisplayItem": null,
                            "displayItems": [{
                                "__type": "SystemOptions_globalVariablesListing:#IngeniuxCMService",
                                "name": "",
                                "id": "globalVariablesConfig",
                                "defaultValue": null,
                                "displayItems": null,
                                "field": "globalVariables",
                                "groupName": null,
                                "type": "globalVariablesListing",
                                "validation": null
                            }]
                        }, {
                            "__type": "SystemOptions_container:#IngeniuxCMService",
                            "name": "Server Variables",
                            "id": "serverVariables",
                            "children": [{
                                "__type": "SystemOptions_setting:#IngeniuxCMService",
                                "name": "Default Server Variables Selection",
                                "id": "serverVariablesConfig",
                                "children": null,
                                "desc": "Select the default HTTP server variables to be included in the IGX_Info element of expanded page XML.",
                                "navName": "Default Variables",
                                "type": "setting",
                                "contextDisplayItem": null,
                                "displayItems": [{
                                    "__type": "SystemOptions_multiselect:#IngeniuxCMService",
                                    "name": "Available Default Server Variables",
                                    "id": "serverVariablesSelect",
                                    "defaultValue": null,
                                    "displayItems": null,
                                    "field": "serverVars",
                                    "groupName": null,
                                    "type": "multiselect",
                                    "validation": null,
                                    "ajaxArgs": [""],
                                    "ajaxName": "getPossibleServerVariables",
                                    "identifier": null,
                                    "returnName": null,
                                    "sortable": false
                                }]
                            }, {
                                "__type": "SystemOptions_setting:#IngeniuxCMService",
                                "name": "Custom Server Variables Configuration",
                                "id": "customServerVariablesConfig",
                                "children": null,
                                "desc": "Manage custom server variables to be included in the XML element IGX_Info during page rendering.",
                                "navName": "Custom Variables",
                                "type": "setting",
                                "contextDisplayItem": null,
                                "displayItems": [{
                                    "__type": "SystemOptions_editablelist:#IngeniuxCMService",
                                    "name": null,
                                    "id": "customServerVariablesAdd",
                                    "defaultValue": null,
                                    "displayItems": null,
                                    "field": "customServerVars",
                                    "groupName": null,
                                    "type": "editablelist",
                                    "validation": [{
                                        "display": "alert",
                                        "message": "Could not save! {0} is a duplicated value.",
                                        "type": "NoDuplicatesMsg"
                                    }, {
                                        "display": "alert",
                                        "message": "Invalid characters. Please use only letters, numbers, and underscores and dashes.",
                                        "type": "InvalidChars"
                                    }],
                                    "columns": [{
                                        "name": "Custom Server Variables",
                                        "editable": true,
                                        "field": "name",
                                        "relWidth": 2,
                                        "selectable": true,
                                        "singleClickEdit": true
                                    }],
                                    "labelKey": null
                                }]
                            }],
                            "desc": "Configure the server variables to be included in the expanded page XML during page rendering.",
                            "navName": "",
                            "type": "container"
                        }, {
                            "__type": "SystemOptions_setting:#IngeniuxCMService",
                            "name": "DSS Cache Configuration",
                            "id": "RtCacheSettings",
                            "children": null,
                            "desc": "Change caching settings for DSS sites",
                            "navName": "Cache",
                            "type": "setting",
                            "contextDisplayItem": null,
                            "displayItems": [{
                                "__type": "SystemOptions_checkbox:#IngeniuxCMService",
                                "name": "Enable Cache",
                                "id": "rtCacheOn",
                                "defaultValue": null,
                                "displayItems": null,
                                "field": "isOn",
                                "groupName": null,
                                "type": "checkbox",
                                "validation": null,
                                "disable": [{
                                    "disableIds": "rtCacheGroup",
                                    "type": "IsFalse"
                                }]
                            }, {
                                "__type": "SystemOptions_group:#IngeniuxCMService",
                                "name": null,
                                "id": "rtCacheGroup",
                                "children": null,
                                "desc": "",
                                "navName": "",
                                "type": "group",
                                "contextDisplayItem": null,
                                "displayItems": [{
                                    "__type": "SystemOptions_textbox:#IngeniuxCMService",
                                    "name": "Trigger File:",
                                    "id": "triggerFile",
                                    "defaultValue": null,
                                    "displayItems": null,
                                    "field": "triggerFile",
                                    "groupName": null,
                                    "type": "textbox",
                                    "validation": [{
                                        "display": "notification",
                                        "message": "Cannot be blank!",
                                        "type": "IsEmpty"
                                    }]
                                }, {
                                    "__type": "SystemOptions_textbox:#IngeniuxCMService",
                                    "name": "Cache Page Size (Bytes): ",
                                    "id": "cachePageSize",
                                    "defaultValue": null,
                                    "displayItems": null,
                                    "field": "cachePageSize",
                                    "groupName": null,
                                    "type": "textbox",
                                    "validation": [{
                                        "display": "notification",
                                        "message": "Page Size must be a number.",
                                        "type": "IsNotNum"
                                    }, {
                                        "display": "notification",
                                        "message": "Cannot be blank!",
                                        "type": "IsEmpty"
                                    }]
                                }, {
                                    "__type": "SystemOptions_numberspinner:#IngeniuxCMService",
                                    "name": "Cache Page Count:",
                                    "id": "cachePageCount",
                                    "defaultValue": null,
                                    "displayItems": null,
                                    "field": "cachePageCount",
                                    "groupName": null,
                                    "type": "numberspinner",
                                    "validation": null,
                                    "delta": 1,
                                    "max": 0,
                                    "min": 0
                                }, {
                                    "__type": "SystemOptions_horizontallayout:#IngeniuxCMService",
                                    "name": null,
                                    "id": "groupButtonLayoutSelector",
                                    "children": null,
                                    "desc": "",
                                    "navName": "",
                                    "type": "horizontallayout",
                                    "contextDisplayItem": null,
                                    "displayItems": [{
                                        "__type": "SystemOptions_radiobutton:#IngeniuxCMService",
                                        "name": "Never Expire",
                                        "id": "rtChacheNeverExpire",
                                        "defaultValue": null,
                                        "displayItems": null,
                                        "field": "neverExpire",
                                        "groupName": null,
                                        "type": "radiobutton",
                                        "validation": null
                                    }, {
                                        "__type": "SystemOptions_radiobutton:#IngeniuxCMService",
                                        "name": "Expire in (Seconds):",
                                        "id": "expireTime",
                                        "defaultValue": null,
                                        "displayItems": [{
                                            "__type": "SystemOptions_numberspinner:#IngeniuxCMService",
                                            "name": null,
                                            "id": "expireTimeNumSelector",
                                            "defaultValue": null,
                                            "displayItems": null,
                                            "field": "expireTime",
                                            "groupName": null,
                                            "type": "numberspinner",
                                            "validation": null,
                                            "delta": 1,
                                            "max": 0,
                                            "min": 1
                                        }],
                                        "field": "doesExpire",
                                        "groupName": null,
                                        "type": "radiobutton",
                                        "validation": null
                                    }]
                                }]
                            }]
                        }, {
                            "__type": "SystemOptions_setting:#IngeniuxCMService",
                            "name": "Dynamic Site Server Logging",
                            "id": "rtLogging",
                            "children": null,
                            "desc": "Enter the path and file name of your DSS log. Example: C:\\IGXLogs\\igxxmlsrv.log",
                            "navName": "",
                            "type": "setting",
                            "contextDisplayItem": null,
                            "displayItems": [{
                                "__type": "SystemOptions_textbox:#IngeniuxCMService",
                                "name": "File Name:",
                                "id": "rtLoggingFileName",
                                "defaultValue": null,
                                "displayItems": null,
                                "field": "rtFileName",
                                "groupName": null,
                                "type": "textbox",
                                "validation": null
                            }, {
                                "__type": "SystemOptions_dropdown:#IngeniuxCMService",
                                "name": "Logging Level:",
                                "id": "rtLogLevel",
                                "defaultValue": null,
                                "displayItems": null,
                                "field": "logLevel",
                                "groupName": null,
                                "type": "dropdown",
                                "validation": null,
                                "ajaxArgs": null,
                                "ajaxName": null,
                                "identifier": null,
                                "returnName": null,
                                "sortable": false,
                                "dropDownData": [{
                                    "name": "Errors",
                                    "id": "0"
                                }, {
                                    "name": "Warnings",
                                    "id": "1"
                                }, {
                                    "name": "Informational",
                                    "id": "2"
                                }, {
                                    "name": "Debug",
                                    "id": "3"
                                }]
                            }]
                        }, {
                            "__type": "SystemOptions_setting:#IngeniuxCMService",
                            "name": "Allow Transform Configuration",
                            "id": "allowTFRM",
                            "children": null,
                            "desc": "Change whether XSL transformation is allowed.",
                            "navName": "Allow Transform",
                            "type": "setting",
                            "contextDisplayItem": null,
                            "displayItems": [{
                                "__type": "SystemOptions_checkbox:#IngeniuxCMService",
                                "name": "Allow Transform?",
                                "id": "allowTFRMCB",
                                "defaultValue": null,
                                "displayItems": null,
                                "field": "allowTFRM",
                                "groupName": null,
                                "type": "checkbox",
                                "validation": null,
                                "disable": null
                            }]
                        }],
                        "desc": "Configure the common settings for Dynamic Site Server published by this CMS instance.",
                        "navName": "Dynamic Site Server",
                        "type": "container"
                    }],
                    "desc": "Use the System Options tree on the left to select and configure CMS system settings. Each node in the System Options tree controls a specific part of the CMS.",
                    "navName": "",
                    "type": "container"
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.SystemOptionsServices.GetData(IngeniuxCMService.SystemOptionsGetParam)">
            <summary>
            Retrieves an single Configuration by its unique Id
            </summary>
            <param name="data">
            <para>Object containing the unique Id of the configuration entry</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "id": "iceSettings"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Data of the configuration entry</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "data": "{\"enableIce\":\"False\",\"fieldMarkBaseZIndex\":\"100\",\"fieldMarkerColor\":\"#3064b7\",\"htmlEditorMatchPreviewStyle\":\"True\",\"invokedFieldMarkerColor\":\"ff8000\"}",
                    "success": true
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>Please note that the "data" property of the response is serialize JSON string. It will be the same JSON string for SOAP services too.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SystemOptionsServices.SetData(IngeniuxCMService.SystemOptionsSetInputInfo)">
            <summary>
            Updates a single configuration entry new data
            </summary>
            <param name="data">
            <para>Object contains updated information of the configuration entry.</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "id": "iceSettings",
                    "data": "{\"enableIce\":true,\"htmlEditorMatchPreviewStyle\":true,\"fieldMarkerColor\":\"#3064b7\",\"invokedFieldMarkerColor\":\"#0f8000\",\"fieldMarkBaseZIndex\":\"100\"}"
                }
            }
            ]]>
            </code>
            </example>
            <remarks>The "data" property of the input is a serialized JSON string. It must also be passed in as serialized JSON string on SOAP services too.</remarks>
            </param>
            <returns>
            <para>Object containing the information of whether the update was successful. If the updates were on a XHTML editor configuration entry, updated "tinymceConfig" message will include serialized JSON string as result.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "msg": "{}",
                    "success": true,
                    "tinymceConfig": "{\"supportHtml5\":true,\"supportHtml5CustomDataAttributes\":false,\"theme_igx_buttons1\":\"code,|,copy,cut,paste,pasteword,pastetext,|,undo,redo,forecolor,backcolor,|,justifycenter,justifyright,justifyfull,justifyleft,|,numlist,bullist,outdent,indent,|,link,unlink,|,anchor,image,hr,charmap,media,|,table,row_props,cell_props,|,row_before,row_after,delete_row,col_before,col_after,delete_col,|,split_cells,merge_cells,|,search,replace,|,bold,italic,underline,strikethrough,sup,sub,|,formatselect,styleselect,fontselect,fontsizeselect,help\",\"plugins\":\"spellchecker,media,table,searchreplace,advimage,igxcontextmenu,igxpaste,igxlink,safari,inlinepopups,igxspellchecker,insertdatetime,igxcontextmenu,igxpaste,igxlink,safari,inlinepopups\",\"table_styles\":\"Table=table,Table Row=tableRow,Table Cell=tableCell\",\"igxlink_styles\":\"Internal Link=intLink,External Link=extLink,Anchor Link=anchorLink\",\"advimage_styles\":\"Block Image=blockImg,Floated Image=floatImg,Image Banner=banner\",\"theme_igx_blockformats\":\"h1,h2,h3,h4,h5,h6,p\",\"theme_igx_fonts\":\"Andale Mono=andale mono,times,Arial=arial,helvetica,sans-serif,Arial Black=arial black,avant garde,Book Antiqua=book antiqua,palatino,Comic Sans MS=comic sans ms,sans-serif,Courier New=courier new,courier,Georgia=georgia,palatino,Helvetica=helvetica,Impact=impact,chicago,Symbol=symbol,Tahoma=tahoma,arial,helvetica,sans-serif,Terminal=terminal,monaco,Times New Roman=times new roman,times,Trebuchet MS=trebuchet ms,geneva,Verdana=verdana,geneva,Webdings=webdings,Wingdings=wingdings,zapf dingbats\",\"theme_igx_font_sizes\":\"8pt,10pt,12pt,14pt,18pt,24pt,36pt\",\"igxpaste_smart_paste\":\"destination\",\"table_row_styles\":\"Table=table,Table Row=tableRow,Table Cell=tableCell\",\"table_cell_styles\":\"Table=table,Table Row=tableRow,Table Cell=tableCell\",\"content_css\":\"custom\/editor\/localstyles.css\",\"mode\":\"none\",\"entity_encoding\":\"named\",\"theme\":\"igx\",\"valid_elements\":\"a[accesskey|charset|class|coords|dir<ltr?rtl|href|hreflang|id|lang|name|onblur|onclick|ondblclick|onfocus|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|rel|rev|shape<circle?default?poly?rect|style|tabindex|title|target|type],abbr[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],acronym[class|dir<ltr?rtl|id|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],address[class|align|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],applet[align<bottom?left?middle?right?top|alt|archive|class|code|codebase|height|hspace|id|name|object|style|title|vspace|width],area[accesskey|alt|class|coords|dir<ltr?rtl|href|id|lang|nohref<nohref|onblur|onclick|ondblclick|onfocus|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|shape<circle?default?poly?rect|style|tabindex|title|target],article[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],aside[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],audio[autoplay|class|controls|dir<ltr?rtl|id|lang|loop|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|preload|src|style|title],base[href|target],basefont[color|face|id|size],bdo[class|dir<ltr?rtl|id|lang|style|title],big[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],blockquote[dir|style|cite|class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],body[alink|background|bgcolor|class|dir<ltr?rtl|id|lang|link|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onload|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|onunload|style|title|text|vlink],br[class|clear<all?left?none?right|id|style|title],button[accesskey|class|dir<ltr?rtl|disabled<disabled|id|lang|name|onblur|onclick|ondblclick|onfocus|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|tabindex|title|type|value],canvas[class|dir<ltr?rtl|height|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title|width],caption[align<bottom?left?right?top|class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],center[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],cite[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],code[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],col[align<center?char?justify?left?right|char|charoff|class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|span|style|title|valign<baseline?bottom?middle?top|width],colgroup[align<center?char?justify?left?right|char|charoff|class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|span|style|title|valign<baseline?bottom?middle?top|width],command[class|dir<ltr?rtl|checked|disabled|icon|id|label|radiogroup|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title|type<command?checkbox?radio],datalist[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],dd[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],del[cite|class|datetime|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],details[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|open|style|title],dfn[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],dir[class|compact<compact|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],div[align<center?justify?left?right|class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],dl[class|compact<compact|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],dt[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],em\/i[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],embed[class|dir<ltr?rtl|height|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|src|style|title|type|width],fieldset[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],figcaption[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],figure[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],footer[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],font[class|color|dir<ltr?rtl|face|id|lang|size|style|title],form[accept|accept-charset|action|class|dir<ltr?rtl|enctype|id|lang|method<get?post|name|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|onreset|onsubmit|style|title|target],frame[class|frameborder|id|longdesc|marginheight|marginwidth|name|noresize<noresize|scrolling<auto?no?yes|src|style|title],frameset[class|cols|id|onload|onunload|rows|style|title],h1[align<center?justify?left?right|class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],h2[align<center?justify?left?right|class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],h3[align<center?justify?left?right|class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],h4[align<center?justify?left?right|class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],h5[align<center?justify?left?right|class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],h6[align<center?justify?left?right|class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],head[dir<ltr?rtl|lang|profile],header[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],hgroup[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],hr[align<center?left?right|class|dir<ltr?rtl|id|lang|noshade<noshade|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|size|style|title|width],html[dir<ltr?rtl|lang|version],iframe[align<bottom?left?middle?right?top|class|frameborder|height|id|longdesc|marginheight|marginwidth|name|scrolling<auto?no?yes|src|style|title|width],img[align<bottom?left?middle?right?top|alt|border|class|dir<ltr?rtl|height|hspace|id|ismap<ismap|lang|longdesc|name|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|src|style|title|usemap|vspace|width],input[accept|accesskey|align<bottom?left?middle?right?top|alt|autocomplete|autofocus|checked<checked|class|dir<ltr?rtl|disabled<disabled|form|id|ismap<ismap|lang|list|max|maxlength|min|name|onblur|onclick|ondblclick|onfocus|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|onselect|pattern|placeholder|readonly<readonly|required<required|size|src|style|tabindex|title|type<button?checkbox?file?hidden?image?password?radio?reset?submit?text?datetime?datetime-local?date?month?time?week?number?range?email?url?search?tel?color|usemap|value],ins[cite|class|datetime|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],isindex[class|dir<ltr?rtl|id|lang|prompt|style|title],kbd[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],keygen[autofocus|challenge|class|dir<ltr?rtl|disabled<disabled|form|id|keytype|name|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],label[accesskey|class|dir<ltr?rtl|for|id|lang|onblur|onclick|ondblclick|onfocus|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],legend[align<bottom?left?right?top|accesskey|class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],li[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title|type|value],link[charset|class|dir<ltr?rtl|href|hreflang|id|lang|media|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|rel|rev|style|title|target|type],map[class|dir<ltr?rtl|id|lang|name|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],mark[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],menu[class|compact<compact|dir<ltr?rtl|id|label|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title|type],meta[content|dir<ltr?rtl|http-equiv|lang|name|scheme],meter[class|dir<ltr?rtl|form|high|id|lang|low|max|min|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|optimum|style|title|value],nav[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],noframes[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],noscript[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],object[align<bottom?left?middle?right?top|archive|border|class|classid|codebase|codetype|data|declare|dir<ltr?rtl|height|hspace|id|lang|name|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|standby|style|tabindex|title|type|usemap|vspace|width],ol[class|compact<compact|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|start|style|title|type],optgroup[class|dir<ltr?rtl|disabled<disabled|id|label|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],option[class|dir<ltr?rtl|disabled<disabled|id|label|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|selected<selected|style|title|value],output[class|dir<ltr?rtl|for|form|id|lang|name|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],p[align<center?justify?left?right|class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],param[id|name|type|value|valuetype<DATA?OBJECT?REF],pre\/listing\/plaintext\/xmp[align|class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title|width],progress[class|dir<ltr?rtl|id|lang|max|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title|value],q[cite|class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],rp[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],rt[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],ruby[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],s[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],samp[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],script[charset|defer|language|src|type],section[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],select[class|dir<ltr?rtl|disabled<disabled|id|lang|multiple<multiple|name|onblur|onclick|ondblclick|onfocus|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|size|style|tabindex|title],small[class|dir<ltr?rtl|id|lang|media|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],source[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|src|media|style|title|type],span[align<center?justify?left?right|class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],strike[class|class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],strong\/b[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],style[dir<ltr?rtl|lang|media|title|type],sub[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],summary[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|open|style|title],sup[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],table[align<center?left?right|bgcolor|border|cellpadding|cellspacing|class|dir<ltr?rtl|frame|height|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|rules|style|summary|title|width],tbody[align<center?char?justify?left?right|char|class|charoff|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title|valign<baseline?bottom?middle?top],td[abbr|align<center?char?justify?left?right|axis|bgcolor|char|charoff|class|colspan|dir<ltr?rtl|headers|height|id|lang|nowrap<nowrap|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|rowspan|scope<col?colgroup?row?rowgroup|style|title|valign<baseline?bottom?middle?top|width],textarea[accesskey|class|cols|dir<ltr?rtl|disabled<disabled|id|lang|name|onblur|onclick|ondblclick|onfocus|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|onselect|readonly<readonly|rows|style|tabindex|title],tfoot[align<center?char?justify?left?right|char|charoff|class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title|valign<baseline?bottom?middle?top],th[abbr|align<center?char?justify?left?right|axis|bgcolor|char|charoff|class|colspan|dir<ltr?rtl|headers|height|id|lang|nowrap<nowrap|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|rowspan|scope<col?colgroup?row?rowgroup|style|title|valign<baseline?bottom?middle?top|width],thead[align<center?char?justify?left?right|char|charoff|class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title|valign<baseline?bottom?middle?top],time[class|datetime|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|pubdate|style|title],title[dir<ltr?rtl|lang],tr[abbr|align<center?char?justify?left?right|bgcolor|char|charoff|class|rowspan|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title|valign<baseline?bottom?middle?top],tt[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],u[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title],-ul[class|compact<compact|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title|type],var[class|dir<ltr?rtl|height|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style]|title],video[audio|autoplay|class|controls|dir<ltr?rtl|id|lang|loop|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|preload|poster|src|style|title|width|height],wbr[class|dir<ltr?rtl|id|lang|onclick|ondblclick|onkeydown|onkeypress|onkeyup|onmousedown|onmousemove|onmouseout|onmouseover|onmouseup|style|title]\",\"valid_children\":null,\"media_strict\":false,\"width\":\"620\",\"height\":\"500\",\"file_browser_callback\":\"igxBrowser\",\"relative_urls\":true,\"convert_urls\":true,\"document_base_url\":\"http:\/\/localhost\/\/CMStrunk\/xml\/\",\"forced_root_block\":\"\",\"dialog_type\":\"model\",\"use_native_selects\":true,\"apply_source_formatting\":true,\"fix_list_elements\":true,\"strict_loading_mode\":true,\"convert_fonts_to_spans\":true,\"font_size_style_values\":\"xx-small,x-small,small,medium,large,x-large,xx-large\",\"igxpaste_use_dialog\":true,\"igxpaste_auto_cleanup_on_paste\":true,\"igxpaste_convert_middot_lists\":false,\"igxpaste_unindented_list_class\":\"unindentedList\",\"igxpaste_convert_headers_to_strong\":true,\"spellchecker_languages\":\"+English=en,French=fr,German=de,Spanish=es\",\"spellchecker_rpc_url\":\"editor\/tinymce\/jscripts\/tiny_mce\/plugins\/igxspellchecker\/tinyspell.aspx\",\"auto_reset_designmode\":true}"
                }
            }
            ]]>
            </code>
            </example>
            <remarks>
            The "tinymceConfig" field of return data is normally empty. If the configuration entry was on XHTML Editor, it will be serialized JSON string of the complete updated configuration for the XHTML editor. Same JSON string is returned for SOAP services.
            </remarks>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.SystemOptionsServices.GetPossibleTinyMceData(IngeniuxCMService.TinyMcePossibleDataGetParam)">
            <summary>
            Retrieves the collection of TinyMce configuration value candicates in a specific aspect
            </summary>
            <param name="data">
            <para>Object containing the name of the property to get candidates for</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "propertyName": "PossibleButtons"
                }
            }
            ]]>
            </code>
            </example>
            <remarks>The choices for propertyName are: PossibleButtons, PossiblePlugins, PossibleBlockFormats, PossibleFonts, PossibleFonts, RequiredPlugins</remarks>
            </param>
            <returns>
            <para>Array of TinyMce property value candidates</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            //Result of possible block formats for TinyMce editor
            
            {
                "code": 0,
                "error": null,
                "message": [{
                    "name": "address",
                    "id": "address",
                    "type": "BlockFormat",
                    "value": "address"
                }, {
                    "name": "h1",
                    "id": "h1",
                    "type": "BlockFormat",
                    "value": "h1"
                }, {
                    "name": "h2",
                    "id": "h2",
                    "type": "BlockFormat",
                    "value": "h2"
                }, {
                    "name": "h3",
                    "id": "h3",
                    "type": "BlockFormat",
                    "value": "h3"
                }, {
                    "name": "h4",
                    "id": "h4",
                    "type": "BlockFormat",
                    "value": "h4"
                }, {
                    "name": "h5",
                    "id": "h5",
                    "type": "BlockFormat",
                    "value": "h5"
                }, {
                    "name": "h6",
                    "id": "h6",
                    "type": "BlockFormat",
                    "value": "h6"
                }, {
                    "name": "p",
                    "id": "p",
                    "type": "BlockFormat",
                    "value": "p"
                }, {
                    "name": "pre",
                    "id": "pre",
                    "type": "BlockFormat",
                    "value": "pre"
                }]
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.SystemOptionsServices.GetToolbarButtons">
            <summary>
            Retrieves the all the available Toolbar button to construct the Toolbar for Ingeniux CMS site client.
            This result of this operation is all the global and Page level functionalities available to choose from.
            </summary>
            <returns>
            <para>Array of all available Toolbar buttons</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "name": "Dashboard",
                    "id": "Overview"
                }, {
                    "name": "Save",
                    "id": "Save"
                }, {
                    "name": "Separator (|)",
                    "id": "separator1"
                }, {
                    "name": "Check Out",
                    "id": "CheckOut"
                }, {
                    "name": "Rename",
                    "id": "Rename"
                }, {
                    "name": "Assign To...",
                    "id": "AssignTo"
                }, {
                    "name": "Advance",
                    "id": "Advance"
                }, {
                    "name": "Separator (|)",
                    "id": "separator2"
                }, {
                    "name": "",
                    "id": "SpellCheck"
                }, {
                    "name": "Separator (|)",
                    "id": "separator3"
                }, {
                    "name": "Refresh",
                    "id": "Refresh"
                }, {
                    "name": "Preview",
                    "id": "Preview"
                }, {
                    "name": "Publish",
                    "id": "Publish"
                }, {
                    "name": "",
                    "id": "separator4"
                }, {
                    "name": "Assets",
                    "id": "Assets"
                }]
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.SystemOptionsServices.GetAllCustomTabs">
            <summary>
            Retrieves all available Custom Tabs information. Custom Tabs are custom application modules with user interface exposed as a Tab on the Ingeniux CMS site client.
            </summary>
            <returns>
            <para>Array of Custom Tabs information</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "name": "Analytics",
                    "id": "CustomTabSettings\/1"
                }]
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.SystemOptionsServices.GetServerVariables">
            <summary>
            Retrieves all built-in HTTP server variables. These server variable are part of W3C HTTP specifications
            </summary>
            <returns>
            <para>Array of all built-in HTTP server variables</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "name": "ALL_HTTP",
                    "id": "ALL_HTTP"
                }, {
                    "name": "ALL_RAW",
                    "id": "ALL_RAW"
                }, {
                    "name": "APPL_MD_PATH",
                    "id": "APPL_MD_PATH"
                }, {
                    "name": "APPL_PHYSICAL_PATH",
                    "id": "APPL_PHYSICAL_PATH"
                }, {
                    "name": "AUTH_TYPE",
                    "id": "AUTH_TYPE"
                }, {
                    "name": "AUTH_USER",
                    "id": "AUTH_USER"
                }, {
                    "name": "AUTH_PASSWORD",
                    "id": "AUTH_PASSWORD"
                }, {
                    "name": "LOGON_USER",
                    "id": "LOGON_USER"
                }, {
                    "name": "REMOTE_USER",
                    "id": "REMOTE_USER"
                }, {
                    "name": "CERT_COOKIE",
                    "id": "CERT_COOKIE"
                }, {
                    "name": "CERT_FLAGS",
                    "id": "CERT_FLAGS"
                }, {
                    "name": "CERT_ISSUER",
                    "id": "CERT_ISSUER"
                }, {
                    "name": "CERT_KEYSIZE",
                    "id": "CERT_KEYSIZE"
                }, {
                    "name": "CERT_SECRETKEYSIZE",
                    "id": "CERT_SECRETKEYSIZE"
                }, {
                    "name": "CERT_SERIALNUMBER",
                    "id": "CERT_SERIALNUMBER"
                }, {
                    "name": "CERT_SERVER_ISSUER",
                    "id": "CERT_SERVER_ISSUER"
                }, {
                    "name": "CERT_SERVER_SUBJECT",
                    "id": "CERT_SERVER_SUBJECT"
                }, {
                    "name": "CERT_SUBJECT",
                    "id": "CERT_SUBJECT"
                }, {
                    "name": "CONTENT_LENGTH",
                    "id": "CONTENT_LENGTH"
                }, {
                    "name": "CONTENT_TYPE",
                    "id": "CONTENT_TYPE"
                }, {
                    "name": "GATEWAY_INTERFACE",
                    "id": "GATEWAY_INTERFACE"
                }, {
                    "name": "HTTPS",
                    "id": "HTTPS"
                }, {
                    "name": "HTTPS_KEYSIZE",
                    "id": "HTTPS_KEYSIZE"
                }, {
                    "name": "HTTPS_SECRETKEYSIZE",
                    "id": "HTTPS_SECRETKEYSIZE"
                }, {
                    "name": "HTTPS_SERVER_ISSUER",
                    "id": "HTTPS_SERVER_ISSUER"
                }, {
                    "name": "HTTPS_SERVER_SUBJECT",
                    "id": "HTTPS_SERVER_SUBJECT"
                }, {
                    "name": "INSTANCE_ID",
                    "id": "INSTANCE_ID"
                }, {
                    "name": "INSTANCE_META_PATH",
                    "id": "INSTANCE_META_PATH"
                }, {
                    "name": "LOCAL_ADDR",
                    "id": "LOCAL_ADDR"
                }, {
                    "name": "PATH_INFO",
                    "id": "PATH_INFO"
                }, {
                    "name": "PATH_TRANSLATED",
                    "id": "PATH_TRANSLATED"
                }, {
                    "name": "QUERY_STRING",
                    "id": "QUERY_STRING"
                }, {
                    "name": "REMOTE_ADDR",
                    "id": "REMOTE_ADDR"
                }, {
                    "name": "REMOTE_HOST",
                    "id": "REMOTE_HOST"
                }, {
                    "name": "REMOTE_PORT",
                    "id": "REMOTE_PORT"
                }, {
                    "name": "REQUEST_METHOD",
                    "id": "REQUEST_METHOD"
                }, {
                    "name": "SCRIPT_NAME",
                    "id": "SCRIPT_NAME"
                }, {
                    "name": "SERVER_NAME",
                    "id": "SERVER_NAME"
                }, {
                    "name": "SERVER_PORT",
                    "id": "SERVER_PORT"
                }, {
                    "name": "SERVER_PORT_SECURE",
                    "id": "SERVER_PORT_SECURE"
                }, {
                    "name": "SERVER_PROTOCOL",
                    "id": "SERVER_PROTOCOL"
                }, {
                    "name": "SERVER_SOFTWARE",
                    "id": "SERVER_SOFTWARE"
                }, {
                    "name": "URL",
                    "id": "URL"
                }, {
                    "name": "HTTP_CACHE_CONTROL",
                    "id": "HTTP_CACHE_CONTROL"
                }, {
                    "name": "HTTP_CONNECTION",
                    "id": "HTTP_CONNECTION"
                }, {
                    "name": "HTTP_PRAGMA",
                    "id": "HTTP_PRAGMA"
                }, {
                    "name": "HTTP_CONTENT_LENGTH",
                    "id": "HTTP_CONTENT_LENGTH"
                }, {
                    "name": "HTTP_CONTENT_TYPE",
                    "id": "HTTP_CONTENT_TYPE"
                }, {
                    "name": "HTTP_ACCEPT",
                    "id": "HTTP_ACCEPT"
                }, {
                    "name": "HTTP_ACCEPT_ENCODING",
                    "id": "HTTP_ACCEPT_ENCODING"
                }, {
                    "name": "HTTP_ACCEPT_LANGUAGE",
                    "id": "HTTP_ACCEPT_LANGUAGE"
                }, {
                    "name": "HTTP_COOKIE",
                    "id": "HTTP_COOKIE"
                }, {
                    "name": "HTTP_HOST",
                    "id": "HTTP_HOST"
                }, {
                    "name": "HTTP_REFERER",
                    "id": "HTTP_REFERER"
                }, {
                    "name": "HTTP_USER_AGENT",
                    "id": "HTTP_USER_AGENT"
                }, {
                    "name": "HTTP_X_IGX_XHR",
                    "id": "HTTP_X_IGX_XHR"
                }, {
                    "name": "HTTP_X_INSIGHT",
                    "id": "HTTP_X_INSIGHT"
                }]
            }
            ]]>
            </code>
            </example>
            <remarks>The result is generated from the request going into the operation. If request included custom server variables, they will be included in the result too.</remarks>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.SystemOptionsServices.GetPossibleTreeMenuItems">
            <summary>
            Retrieves the collection of Menu Items on the Site Tree context menu.
            This result reflects what functionalitis are available on the Ingeniux CMS Site tree.
            </summary>
            <returns>
            <para>Collection of Site Tree context menu items</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "name": "Empty Recycle Folder",
                    "id": "EmptyRecycleFolder"
                }, {
                    "name": "New",
                    "id": "New"
                }, {
                    "name": "Rename",
                    "id": "Rename"
                }, {
                    "name": "Refresh",
                    "id": "Refresh"
                }, {
                    "name": "Seperator",
                    "id": "Seperator2"
                }, {
                    "name": "Cut",
                    "id": "Cut"
                }, {
                    "name": "Copy",
                    "id": "Copy"
                }, {
                    "name": "Paste",
                    "id": "Paste"
                }, {
                    "name": "Delete",
                    "id": "Delete"
                }, {
                    "name": "Seperator",
                    "id": "Seperator3"
                }, {
                    "name": "Add to Workflow",
                    "id": "AddToWorkflow"
                }, {
                    "name": "Remove From Workflow",
                    "id": "RemoveFromWorkflow"
                }, {
                    "name": "Assign To...",
                    "id": "AssignTo"
                }, {
                    "name": "Advance",
                    "id": "Advance"
                }, {
                    "name": "Show History",
                    "id": "ShowHistory"
                }, {
                    "name": "Send Mail",
                    "id": "SendMail"
                }, {
                    "name": "Seperator",
                    "id": "Seperator4"
                }, {
                    "name": "Check Out",
                    "id": "CheckOut"
                }, {
                    "name": "Check In",
                    "id": "CheckIn"
                }, {
                    "name": "Propagate publishes to latest version",
                    "id": "PropagateCheckIn"
                }, {
                    "name": "Undo Check Out",
                    "id": "UndoCheckOut"
                }, {
                    "name": "Rollback",
                    "id": "Rollback"
                }, {
                    "name": "Seperator",
                    "id": "Seperator5"
                }, {
                    "name": "Mark For Publish",
                    "id": "MarkForPublish"
                }, {
                    "name": "Preview",
                    "id": "Preview"
                }, {
                    "name": "Publish",
                    "id": "Publish"
                }, {
                    "name": "Seperator",
                    "id": "Seperator6"
                }, {
                    "name": "Page Properties",
                    "id": "PageProperties"
                }]
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.SystemOptionsServices.GetTimeZones">
            <summary>
            Retrieves information of all the Time Zones in the world. 
            </summary>
            <returns>
            <para>Collection of all Time Zones information</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "name": "Afghanistan Standard Time",
                    "id": "Afghanistan Standard Time : 4"
                }, {
                    "name": "Alaskan Daylight Time",
                    "id": "Alaskan Daylight Time : -539"
                }, {
                    "name": "Alaskan Standard Time",
                    "id": "Alaskan Standard Time : -9"
                }, {
                    "name": "Arab Standard Time",
                    "id": "Arab Standard Time : 3"
                }, {
                    "name": "Arabian Standard Time",
                    "id": "Arabian Standard Time : 4"
                }, {
                    "name": "Arabic Daylight Time",
                    "id": "Arabic Daylight Time : 181"
                }, {
                    "name": "Arabic Standard Time",
                    "id": "Arabic Standard Time : 3"
                }, {
                    "name": "Argentina Daylight Time",
                    "id": "Argentina Daylight Time : -179"
                }, {
                    "name": "Argentina Standard Time",
                    "id": "Argentina Standard Time : -3"
                }, {
                    "name": "Atlantic Daylight Time",
                    "id": "Atlantic Daylight Time : -239"
                }, {
                    "name": "Atlantic Standard Time",
                    "id": "Atlantic Standard Time : -4"
                }, {
                    "name": "AUS Central Standard Time",
                    "id": "AUS Central Standard Time : 10"
                }, {
                    "name": "AUS Eastern Daylight Time",
                    "id": "AUS Eastern Daylight Time : 601"
                }, {
                    "name": "AUS Eastern Standard Time",
                    "id": "AUS Eastern Standard Time : 10"
                }, {
                    "name": "Azerbaijan Daylight Time",
                    "id": "Azerbaijan Daylight Time : 241"
                }, {
                    "name": "Azerbaijan Standard Time",
                    "id": "Azerbaijan Standard Time : 4"
                }, {
                    "name": "Azores Daylight Time",
                    "id": "Azores Daylight Time : -59"
                }, {
                    "name": "Azores Standard Time",
                    "id": "Azores Standard Time : -1"
                }, {
                    "name": "Bahia Daylight Time",
                    "id": "Bahia Daylight Time : -179"
                }, {
                    "name": "Bahia Standard Time",
                    "id": "Bahia Standard Time : -3"
                }, {
                    "name": "Bangladesh Daylight Time",
                    "id": "Bangladesh Daylight Time : 361"
                }, {
                    "name": "Bangladesh Standard Time",
                    "id": "Bangladesh Standard Time : 6"
                }, {
                    "name": "Canada Central Standard Time",
                    "id": "Canada Central Standard Time : -6"
                }, {
                    "name": "Cape Verde Standard Time",
                    "id": "Cape Verde Standard Time : -1"
                }, {
                    "name": "Caucasus Daylight Time",
                    "id": "Caucasus Daylight Time : 241"
                }, {
                    "name": "Caucasus Standard Time",
                    "id": "Caucasus Standard Time : 4"
                }, {
                    "name": "Cen. Australia Daylight Time",
                    "id": "Cen. Australia Daylight Time : 571"
                }, {
                    "name": "Cen. Australia Standard Time",
                    "id": "Cen. Australia Standard Time : 10"
                }, {
                    "name": "Central America Standard Time",
                    "id": "Central America Standard Time : -6"
                }, {
                    "name": "Central Asia Standard Time",
                    "id": "Central Asia Standard Time : 6"
                }, {
                    "name": "Central Brazilian Daylight Time",
                    "id": "Central Brazilian Daylight Time : -239"
                }, {
                    "name": "Central Brazilian Standard Time",
                    "id": "Central Brazilian Standard Time : -4"
                }, {
                    "name": "Central Daylight Time",
                    "id": "Central Daylight Time : -359"
                }, {
                    "name": "Central Daylight Time (Mexico)",
                    "id": "Central Daylight Time (Mexico) : -359"
                }, {
                    "name": "Central Europe Daylight Time",
                    "id": "Central Europe Daylight Time : 61"
                }, {
                    "name": "Central Europe Standard Time",
                    "id": "Central Europe Standard Time : 1"
                }, {
                    "name": "Central European Daylight Time",
                    "id": "Central European Daylight Time : 61"
                }, {
                    "name": "Central European Standard Time",
                    "id": "Central European Standard Time : 1"
                }, {
                    "name": "Central Pacific Standard Time",
                    "id": "Central Pacific Standard Time : 11"
                }, {
                    "name": "Central Standard Time",
                    "id": "Central Standard Time : -6"
                }, {
                    "name": "Central Standard Time (Mexico)",
                    "id": "Central Standard Time (Mexico) : -6"
                }, {
                    "name": "China Standard Time",
                    "id": "China Standard Time : 8"
                }, {
                    "name": "Coordinated Universal Time",
                    "id": "Coordinated Universal Time : 0"
                }, {
                    "name": "Dateline Standard Time",
                    "id": "Dateline Standard Time : -12"
                }, {
                    "name": "E. Africa Standard Time",
                    "id": "E. Africa Standard Time : 3"
                }, {
                    "name": "E. Australia Standard Time",
                    "id": "E. Australia Standard Time : 10"
                }, {
                    "name": "E. Europe Daylight Time",
                    "id": "E. Europe Daylight Time : 121"
                }, {
                    "name": "E. Europe Standard Time",
                    "id": "E. Europe Standard Time : 2"
                }, {
                    "name": "E. South America Daylight Time",
                    "id": "E. South America Daylight Time : -179"
                }, {
                    "name": "E. South America Standard Time",
                    "id": "E. South America Standard Time : -3"
                }, {
                    "name": "Eastern Daylight Time",
                    "id": "Eastern Daylight Time : -299"
                }, {
                    "name": "Eastern Standard Time",
                    "id": "Eastern Standard Time : -5"
                }, {
                    "name": "Egypt Daylight Time",
                    "id": "Egypt Daylight Time : 121"
                }, {
                    "name": "Egypt Standard Time",
                    "id": "Egypt Standard Time : 2"
                }, {
                    "name": "Ekaterinburg Daylight Time",
                    "id": "Ekaterinburg Daylight Time : 361"
                }, {
                    "name": "Ekaterinburg Standard Time",
                    "id": "Ekaterinburg Standard Time : 6"
                }, {
                    "name": "Fiji Daylight Time",
                    "id": "Fiji Daylight Time : 721"
                }, {
                    "name": "Fiji Standard Time",
                    "id": "Fiji Standard Time : 12"
                }, {
                    "name": "FLE Daylight Time",
                    "id": "FLE Daylight Time : 121"
                }, {
                    "name": "FLE Standard Time",
                    "id": "FLE Standard Time : 2"
                }, {
                    "name": "Georgian Standard Time",
                    "id": "Georgian Standard Time : 4"
                }, {
                    "name": "GMT Daylight Time",
                    "id": "GMT Daylight Time : 1"
                }, {
                    "name": "GMT Standard Time",
                    "id": "GMT Standard Time : 0"
                }, {
                    "name": "Greenland Daylight Time",
                    "id": "Greenland Daylight Time : -179"
                }, {
                    "name": "Greenland Standard Time",
                    "id": "Greenland Standard Time : -3"
                }, {
                    "name": "Greenwich Standard Time",
                    "id": "Greenwich Standard Time : 0"
                }, {
                    "name": "GTB Daylight Time",
                    "id": "GTB Daylight Time : 121"
                }, {
                    "name": "GTB Standard Time",
                    "id": "GTB Standard Time : 2"
                }, {
                    "name": "Hawaiian Standard Time",
                    "id": "Hawaiian Standard Time : -10"
                }, {
                    "name": "India Standard Time",
                    "id": "India Standard Time : 6"
                }, {
                    "name": "Iran Daylight Time",
                    "id": "Iran Daylight Time : 211"
                }, {
                    "name": "Iran Standard Time",
                    "id": "Iran Standard Time : 4"
                }, {
                    "name": "Jerusalem Daylight Time",
                    "id": "Jerusalem Daylight Time : 121"
                }, {
                    "name": "Jerusalem Standard Time",
                    "id": "Jerusalem Standard Time : 2"
                }, {
                    "name": "Jordan Daylight Time",
                    "id": "Jordan Daylight Time : 181"
                }, {
                    "name": "Jordan Standard Time",
                    "id": "Jordan Standard Time : 3"
                }, {
                    "name": "Kaliningrad Daylight Time",
                    "id": "Kaliningrad Daylight Time : 181"
                }, {
                    "name": "Kaliningrad Standard Time",
                    "id": "Kaliningrad Standard Time : 3"
                }, {
                    "name": "Kamchatka Daylight Time",
                    "id": "Kamchatka Daylight Time : 721"
                }, {
                    "name": "Kamchatka Standard Time",
                    "id": "Kamchatka Standard Time : 12"
                }, {
                    "name": "Korea Standard Time",
                    "id": "Korea Standard Time : 9"
                }, {
                    "name": "Libya Daylight Time",
                    "id": "Libya Daylight Time : 121"
                }, {
                    "name": "Libya Standard Time",
                    "id": "Libya Standard Time : 2"
                }, {
                    "name": "Magadan Daylight Time",
                    "id": "Magadan Daylight Time : 721"
                }, {
                    "name": "Magadan Standard Time",
                    "id": "Magadan Standard Time : 12"
                }, {
                    "name": "Malay Peninsula Standard Time",
                    "id": "Malay Peninsula Standard Time : 8"
                }, {
                    "name": "Mauritius Daylight Time",
                    "id": "Mauritius Daylight Time : 241"
                }, {
                    "name": "Mauritius Standard Time",
                    "id": "Mauritius Standard Time : 4"
                }, {
                    "name": "Mid-Atlantic Daylight Time",
                    "id": "Mid-Atlantic Daylight Time : -119"
                }, {
                    "name": "Mid-Atlantic Standard Time",
                    "id": "Mid-Atlantic Standard Time : -2"
                }, {
                    "name": "Middle East Daylight Time",
                    "id": "Middle East Daylight Time : 121"
                }, {
                    "name": "Middle East Standard Time",
                    "id": "Middle East Standard Time : 2"
                }, {
                    "name": "Montevideo Daylight Time",
                    "id": "Montevideo Daylight Time : -179"
                }, {
                    "name": "Montevideo Standard Time",
                    "id": "Montevideo Standard Time : -3"
                }, {
                    "name": "Morocco Daylight Time",
                    "id": "Morocco Daylight Time : 1"
                }, {
                    "name": "Morocco Standard Time",
                    "id": "Morocco Standard Time : 0"
                }, {
                    "name": "Mountain Daylight Time",
                    "id": "Mountain Daylight Time : -419"
                }, {
                    "name": "Mountain Daylight Time (Mexico)",
                    "id": "Mountain Daylight Time (Mexico) : -419"
                }, {
                    "name": "Mountain Standard Time",
                    "id": "Mountain Standard Time : -7"
                }, {
                    "name": "Mountain Standard Time (Mexico)",
                    "id": "Mountain Standard Time (Mexico) : -7"
                }, {
                    "name": "Myanmar Standard Time",
                    "id": "Myanmar Standard Time : 6"
                }, {
                    "name": "N. Central Asia Daylight Time",
                    "id": "N. Central Asia Daylight Time : 421"
                }, {
                    "name": "N. Central Asia Standard Time",
                    "id": "N. Central Asia Standard Time : 7"
                }, {
                    "name": "Namibia Daylight Time",
                    "id": "Namibia Daylight Time : 61"
                }, {
                    "name": "Namibia Standard Time",
                    "id": "Namibia Standard Time : 1"
                }, {
                    "name": "Nepal Standard Time",
                    "id": "Nepal Standard Time : 6"
                }, {
                    "name": "New Zealand Daylight Time",
                    "id": "New Zealand Daylight Time : 721"
                }, {
                    "name": "New Zealand Standard Time",
                    "id": "New Zealand Standard Time : 12"
                }, {
                    "name": "Newfoundland Daylight Time",
                    "id": "Newfoundland Daylight Time : -209"
                }, {
                    "name": "Newfoundland Standard Time",
                    "id": "Newfoundland Standard Time : -4"
                }, {
                    "name": "North Asia Daylight Time",
                    "id": "North Asia Daylight Time : 481"
                }, {
                    "name": "North Asia East Daylight Time",
                    "id": "North Asia East Daylight Time : 541"
                }, {
                    "name": "North Asia East Standard Time",
                    "id": "North Asia East Standard Time : 9"
                }, {
                    "name": "North Asia Standard Time",
                    "id": "North Asia Standard Time : 8"
                }, {
                    "name": "Pacific Daylight Time",
                    "id": "Pacific Daylight Time : -479"
                }, {
                    "name": "Pacific Daylight Time (Mexico)",
                    "id": "Pacific Daylight Time (Mexico) : -479"
                }, {
                    "name": "Pacific SA Daylight Time",
                    "id": "Pacific SA Daylight Time : -239"
                }, {
                    "name": "Pacific SA Standard Time",
                    "id": "Pacific SA Standard Time : -4"
                }, {
                    "name": "Pacific Standard Time",
                    "id": "Pacific Standard Time : -8"
                }, {
                    "name": "Pacific Standard Time (Mexico)",
                    "id": "Pacific Standard Time (Mexico) : -8"
                }, {
                    "name": "Pakistan Daylight Time",
                    "id": "Pakistan Daylight Time : 301"
                }, {
                    "name": "Pakistan Standard Time",
                    "id": "Pakistan Standard Time : 5"
                }, {
                    "name": "Paraguay Daylight Time",
                    "id": "Paraguay Daylight Time : -239"
                }, {
                    "name": "Paraguay Standard Time",
                    "id": "Paraguay Standard Time : -4"
                }, {
                    "name": "Romance Daylight Time",
                    "id": "Romance Daylight Time : 61"
                }, {
                    "name": "Romance Standard Time",
                    "id": "Romance Standard Time : 1"
                }, {
                    "name": "Russian Daylight Time",
                    "id": "Russian Daylight Time : 241"
                }, {
                    "name": "Russian Standard Time",
                    "id": "Russian Standard Time : 4"
                }, {
                    "name": "SA Eastern Standard Time",
                    "id": "SA Eastern Standard Time : -3"
                }, {
                    "name": "SA Pacific Standard Time",
                    "id": "SA Pacific Standard Time : -5"
                }, {
                    "name": "SA Western Standard Time",
                    "id": "SA Western Standard Time : -4"
                }, {
                    "name": "Samoa Daylight Time",
                    "id": "Samoa Daylight Time : 781"
                }, {
                    "name": "Samoa Standard Time",
                    "id": "Samoa Standard Time : 13"
                }, {
                    "name": "SE Asia Standard Time",
                    "id": "SE Asia Standard Time : 7"
                }, {
                    "name": "South Africa Standard Time",
                    "id": "South Africa Standard Time : 2"
                }, {
                    "name": "Sri Lanka Standard Time",
                    "id": "Sri Lanka Standard Time : 6"
                }, {
                    "name": "Syria Daylight Time",
                    "id": "Syria Daylight Time : 121"
                }, {
                    "name": "Syria Standard Time",
                    "id": "Syria Standard Time : 2"
                }, {
                    "name": "Taipei Standard Time",
                    "id": "Taipei Standard Time : 8"
                }, {
                    "name": "Tasmania Daylight Time",
                    "id": "Tasmania Daylight Time : 601"
                }, {
                    "name": "Tasmania Standard Time",
                    "id": "Tasmania Standard Time : 10"
                }, {
                    "name": "Tokyo Standard Time",
                    "id": "Tokyo Standard Time : 9"
                }, {
                    "name": "Tonga Standard Time",
                    "id": "Tonga Standard Time : 13"
                }, {
                    "name": "Turkey Daylight Time",
                    "id": "Turkey Daylight Time : 121"
                }, {
                    "name": "Turkey Standard Time",
                    "id": "Turkey Standard Time : 2"
                }, {
                    "name": "Ulaanbaatar Standard Time",
                    "id": "Ulaanbaatar Standard Time : 8"
                }, {
                    "name": "US Eastern Daylight Time",
                    "id": "US Eastern Daylight Time : -299"
                }, {
                    "name": "US Eastern Standard Time",
                    "id": "US Eastern Standard Time : -5"
                }, {
                    "name": "US Mountain Standard Time",
                    "id": "US Mountain Standard Time : -7"
                }, {
                    "name": "UTC+12",
                    "id": "UTC+12 : 12"
                }, {
                    "name": "UTC-02",
                    "id": "UTC-02 : -2"
                }, {
                    "name": "UTC-11",
                    "id": "UTC-11 : -11"
                }, {
                    "name": "Venezuela Standard Time",
                    "id": "Venezuela Standard Time : -4"
                }, {
                    "name": "Vladivostok Daylight Time",
                    "id": "Vladivostok Daylight Time : 661"
                }, {
                    "name": "Vladivostok Standard Time",
                    "id": "Vladivostok Standard Time : 11"
                }, {
                    "name": "W. Australia Daylight Time",
                    "id": "W. Australia Daylight Time : 481"
                }, {
                    "name": "W. Australia Standard Time",
                    "id": "W. Australia Standard Time : 8"
                }, {
                    "name": "W. Central Africa Standard Time",
                    "id": "W. Central Africa Standard Time : 1"
                }, {
                    "name": "W. Europe Daylight Time",
                    "id": "W. Europe Daylight Time : 61"
                }, {
                    "name": "W. Europe Standard Time",
                    "id": "W. Europe Standard Time : 1"
                }, {
                    "name": "West Asia Standard Time",
                    "id": "West Asia Standard Time : 5"
                }, {
                    "name": "West Pacific Standard Time",
                    "id": "West Pacific Standard Time : 10"
                }, {
                    "name": "Yakutsk Daylight Time",
                    "id": "Yakutsk Daylight Time : 601"
                }, {
                    "name": "Yakutsk Standard Time",
                    "id": "Yakutsk Standard Time : 10"
                }]
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.SystemOptionsServices.RemoveDictionary(IngeniuxCMService.RemoveDictionaryInput)">
            <summary>
            Removes a Spell check dictionary dictionary for a specific locale
            </summary>
            <param name="data">
            <para>Object containing the locale name for the dictionary to be removed</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "data": "fr-ca"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Object containing the dictionary and affix files that were deleted for the given locale. The file paths are relative to "xml" folder</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "afffixFile": "custom/SpellCheckDictionaries/fr_ca.aff",
                    "dictionaryFile": "custom/SpellCheckDictionaries/fr_ca.dic"
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.SystemOptionsServices.GetGroupsForTinyMCESettings(IngeniuxCMService.SettingGetParam)">
            <summary>
            Retrieves the User Groups that have a XHTML editor specific settings defined for it
            </summary>
            <param name="data">
            <para>Object containing the settings name to retrieve the User Groups, that have the specific settings defined</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "settingName": "Fonts"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>The collection of User Groups basic information. These Groups that specific override defined for the given settings name</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "groups": [{
                        "name": "Administrators",
                        "id": "UserGroup\/1",
                        "_checked": false,
                        "active": true,
                        "groupId": "UserGroup\/1",
                        "userRights": [32, 0]
                    }, {
                        "name": "Authors",
                        "id": "UserGroups\/1",
                        "_checked": false,
                        "active": false,
                        "groupId": "UserGroups\/1",
                        "userRights": [1355393, 511]
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>XHTML editor has a default setting for every User Group out of box.  However, administrators can create Group Profiles that will override the default settings in a specific area.</para>
            <para>There are following settings name that are allowed:</para>
            <para>Default, Plugins, BlockFormats, Fonts, FontSizes, TableCssClass, ImageCssClass, LinkCssClass, RemoveButtons, CommandRow, ContentCssFile</para>
            <para>Any other settings name will be invalid, and causes return of error status.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SystemOptionsServices.RemoveGroupProfileForTinyMCESettings(IngeniuxCMService.GroupProfileRemovalParam)">
            <summary>
            Removes a User Group override on a specific XHTML editor setting.
            </summary>
            <param name="data">
            <para>Object containg the settings name and the User Group to remove the profile for.</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "groupId": "UserGroups/1",
                    "settingName": "Fonts"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Object containing the settings name and User Group Id to remove the profile on. Also, whether the profile was removed or not.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "settingName": "Fonts",
                    "groupId": "UserGroups\/1",
                    "removed": false
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If override profile doesn't exist for the given User Group, returns false</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SystemOptionsServices.RemoveGroupProfileForTreeMenu(IngeniuxCMService.GroupProfileRemovalParam)">
            <summary>
            Removes the User Group override on Tree Menu items listing setting
            </summary>
            <param name="data">
            <para>Object containing User Group Id for remove the profile for</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "groupId": "UserGroups/1"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Object containing the User Group Id to remove the profile for and whether the removal was successful</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "settingName": null,
                    "groupId": "UserGroups\/1",
                    "removed": true
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If override profile doesn't exist for the given User Group, returns false</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SystemOptionsServices.RemoveGroupProfileForToolbar(IngeniuxCMService.GroupProfileRemovalParam)">
            <summary>
            Removes the User Group override on Toolbar buttons listing setting
            </summary>
            <param name="data">
            <para>Object containing User Group Id for remove the profile for</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "groupId": "UserGroups/1"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Object containing the User Group Id to remove the profile for and whether the removal was successful</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "settingName": null,
                    "groupId": "UserGroups\/1",
                    "removed": true
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If override profile doesn't exist for the given User Group, returns false</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SystemOptionsServices.GetGroupsForToolbarSettings">
            <summary>
            Retrieves complete list of User Groups for Toolbar settings. Each Group item indicates if override profiles exists for this Group.
            </summary>
            <returns>
            <para>List of User Groups. Each item contains also User Rights compond numbers and whether there is a override profile for this Group in the "_checked" property.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "groups": [{
                        "name": "Administrators",
                        "id": "UserGroup\/1",
                        "_checked": false,
                        "active": true,
                        "groupId": "UserGroup\/1",
                        "userRights": [32, 0]
                    }, {
                        "name": "Authors",
                        "id": "UserGroups\/1",
                        "_checked": true,
                        "active": false,
                        "groupId": "UserGroups\/1",
                        "userRights": [1355393, 511]
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.SystemOptionsServices.GetGroupsForTreeMenu">
            <summary>
            Retrieves complete list of User Groups for Site Tree Context Menu items settings. Each Group item indicates if override profiles exists for this Group.
            </summary>
            <returns>
            <para>List of User Groups. Each item contains also User Rights compond numbers and whether there is a override profile for this Group in the "_checked" property.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "groups": [{
                        "name": "Administrators",
                        "id": "UserGroup\/1",
                        "_checked": false,
                        "active": true,
                        "groupId": "UserGroup\/1",
                        "userRights": [32, 0]
                    }, {
                        "name": "Authors",
                        "id": "UserGroups\/1",
                        "_checked": true,
                        "active": false,
                        "groupId": "UserGroups\/1",
                        "userRights": [1355393, 511]
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.SystemOptionsServices.CreateCustomLocale(System.String,System.String,System.String)">
            <summary>
            Creates a custom Locale entry. Custom locales are language defined for very specific region, that are not covered by the built-in list of locales.
            <example>
            We could create a custom locale "en-us-tx", named "Texas English", but a site that is targetted to audiences in Texas.
            </example>
            </summary>
            <param name="locale">Name of the custom locale, cannot be a duplicate of a built-in locale or another custom locale</param>
            <param name="baseLocale">
            <para>
            The built-in locale this custom locale is based on
            </para>
            <example>
            "Texas English (en-us-tx)" is created based on "English United States (en-us)";
            </example>
            <remarks>Custom locales must be on a built-in locale, or returns error status</remarks>
            </param>
            <param name="englishName">The descriptive name of the custom locale in English</param>
            <returns>
            <para>The information for created custom locale</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "BaseLocale": "en-US",
                    "EnglishName": "Texas English",
                    "Locale": "en-us-tx",
                    "Name": "en-US"
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If base locale doesn't exist as a built-in locale, returns error status</para>
            <para>If locale name or English name is not provided, returns error status</para>
            <para>If another built-in for custom locale already using the same locale name (not English name), returns error status</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SystemOptionsServices.RemoveCustomLocale(System.String,System.Boolean)">
            <summary>
            Removes a custom locale by its locale name.
            </summary>
            <param name="locale">Locale name of the custom locale
            <example>"en-us-tx"</example>
            </param>
            <returns>True if custom locale with given name exists and removed, false otherwise.</returns>
            <remarks>
            <para>If there are any Pages still using the custom locale, then the locale cannot be removed. Returns error status.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.IUserManagerServices.GetUsersAndGroupsSimple">
            <remarks>User by ad import dialog</remarks>
        </member>
        <member name="T:IngeniuxCMService.IUserManagerExportService">
            <remarks>
            This is a file download service, so it needs special stream binding in the config file.
            </remarks>
        </member>
        <member name="T:IngeniuxCMService.AssignedPageInfo">
            <remarks>Name needs to be uri encoded</remarks>
        </member>
        <member name="T:IngeniuxCMService.UserManagerServices">
            <summary>
            Provides the functionality to manage users and groups in the Ingeniux CMS.
            </summary>
        </member>
        <member name="M:IngeniuxCMService.UserManagerServices.GetGroupRoles">
            <summary>
            Retrieves the collection of Group Roles. Group Roles are specific combination of User Rights.
            Their purpose is to offer fast and more convenient way to apply and finalize permission to a new User Group.
            </summary>
            <returns>
            <para>Array of information on existing Group Roles</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "name": "Basic Editing",
                    "id": "GroupRoles\/1",
                    "permissions": [1879681, 1879681]
                }, {
                    "name": "Editing and Publishing",
                    "id": "GroupRoles\/2",
                    "permissions": [1879689, 1879689]
                }]
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.UserManagerServices.RemoveGroupRole(IngeniuxCMService.RemoveGroupRoleInput)">
            <summary>
            Removes a single Group Role
            </summary>
            <param name="data">
            <para>Object containing the Id of the Group Role to remove</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "roleId": "GroupRoles/65"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>The collection of existing Group Roles after the removal, sorted alphabetically</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "name": "Edit",
                    "id": "GroupRoles\/34",
                    "permissions": [1879681, 1879681]
                }, {
                    "name": "Edit and Delete",
                    "id": "GroupRoles\/33",
                    "permissions": [1896069, 1896069]
                }, {
                    "name": "Editing and Publishing",
                    "id": "GroupRoles\/2",
                    "permissions": [1879689, 1879689]
                }] 
            }
            ]]>
            </code>
            </example>
            </returns>
            <seealso cref="M:IngeniuxCMService.UserManagerServices.GetGroupRoles"/>
            <seealso cref="M:IngeniuxCMService.UserManagerServices.SaveGroupRole(IngeniuxCMService.GroupRoleData)"/>
        </member>
        <member name="M:IngeniuxCMService.UserManagerServices.SaveGroupRole(IngeniuxCMService.GroupRoleData)">
            <summary>
            Creates or Updates a Group Role. If a Group Role with given name exists, its permissions are updated; Otherwise, new Group Role is created.
            </summary>
            <param name="data">
            <para>Object containing the Role name and its User Permissions.</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "roleName": "Check in",
                    "permissions": [1879683, 1669]
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>The collection of existing Group Roles after the removal, sorted alphabetically</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "name": "Edit",
                    "id": "GroupRoles\/34",
                    "permissions": [1879681, 1879681]
                }, {
                    "name": "Edit and Delete",
                    "id": "GroupRoles\/33",
                    "permissions": [1896069, 1896069]
                }, {
                    "name": "Editing and Publishing",
                    "id": "GroupRoles\/2",
                    "permissions": [1879689, 1879689]
                }] 
            }
            ]]>
            </code>
            </example>
            </returns>
            <seealso cref="M:IngeniuxCMService.UserManagerServices.GetGroupRoles"/>
            <seealso cref="M:IngeniuxCMService.UserManagerServices.RemoveGroupRole(IngeniuxCMService.RemoveGroupRoleInput)"/>
        </member>
        <member name="M:IngeniuxCMService.UserManagerServices.GetUsersAndGroupsSimple">
            <summary>
            Retrieves collection basic information of all Users and User Groups.
            User information is just Id and Name, Group information is Id, Name and collection of User's Ids
            </summary>
            <returns>
            <para>Object containing collections of Users and Groups</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "groups": [{
                        "name": "Administrators",
                        "id": "UserGroup\/1",
                        "users": []
                    }, {
                        "name": "Authors",
                        "id": "UserGroups\/1",
                        "users": []
                    }],
                    "users": [{
                        "name": "abusbin",
                        "id": "User\/INGENIUX___abusbin"
                    }, {
                        "name": "author",
                        "id": "User\/ingeniux___author"
                    }, {
                        "name": "t",
                        "id": "User\/t"
                    }, {
                        "name": "Turtle Master",
                        "id": "User\/INGENIUX___awang"
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.UserManagerServices.GetSettings">
            <summary>
            Retrieves the settings of Users email notifications settings
            </summary>
            <returns>
            <para>Information on Users email notifications settings</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "ntDomain": "ingeniux",
                    "sendWorkflowNotifications": false,
                    "smtpDomain": "smtp.ingeniux.com"
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <seealso cref="M:IngeniuxCMService.UserManagerServices.SetSettings(IngeniuxCMService.UserManagerSettings)"/>
        </member>
        <member name="M:IngeniuxCMService.UserManagerServices.SetSettings(IngeniuxCMService.UserManagerSettings)">
            <summary>
            Updates the settings on Users email notifications
            </summary>
            <param name="data">
            <para>New settings on Users notifications</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "ntDomain": "ingeniux",
                    "smtpDomain": "smtp.ingeniux.com",
                    "sendWorkflowNotifications": true
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Information on updated User email notifications settings</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "ntDomain": "ingeniux",
                    "sendWorkflowNotifications": true,
                    "smtpDomain": "smtp.ingeniux.com"
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <seealso cref="M:IngeniuxCMService.UserManagerServices.GetSettings"/>
        </member>
        <member name="M:IngeniuxCMService.UserManagerServices.GetSingleUser(IngeniuxCMService.Admin.GetSingleItemParam)">
            <summary>
            Retrieves the full details of a single User by its User Id.
            </summary>
            <param name="data">
            <para>Object containing the User Id. Please note that is not the object Id of the User, but the User Name used for login.</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "itemId": "INGENIUX%5Cawang"
                }
            }
            ]]>
            </code>
            </example>
            <remarks>
            <para>The "itemId" field must be URI encoded.</para>
            </remarks>
            </param>
            <returns>
            <para>Full details of the User with matching User Id.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "assignedPages": [{
                        "name": "HomeSlider",
                        "id": "x69",
                        "checkedOut": true,
                        "icon": 99,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "asdfsdf",
                        "id": "x68",
                        "checkedOut": true,
                        "icon": 99,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "asdfsdf",
                        "id": "x64",
                        "checkedOut": true,
                        "icon": 99,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Email",
                        "id": "x93",
                        "checkedOut": true,
                        "icon": 11,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Sign Up",
                        "id": "x16",
                        "checkedOut": true,
                        "icon": 2,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "HomeSlider",
                        "id": "x31",
                        "checkedOut": true,
                        "icon": 99,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "asdfsdf",
                        "id": "x18",
                        "checkedOut": true,
                        "icon": 99,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Services",
                        "id": "x8",
                        "checkedOut": false,
                        "icon": 2,
                        "markedForPublish": true,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "asdfsdf",
                        "id": "x29",
                        "checkedOut": true,
                        "icon": 99,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "asdfsdf",
                        "id": "x24",
                        "checkedOut": true,
                        "icon": 99,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Forms",
                        "id": "x15",
                        "checkedOut": true,
                        "icon": 1,
                        "markedForPublish": true,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Emailer",
                        "id": "x92",
                        "checkedOut": true,
                        "icon": 11,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Poll",
                        "id": "x96",
                        "checkedOut": true,
                        "icon": 4,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Insert Test",
                        "id": "x86",
                        "checkedOut": true,
                        "icon": 4,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "dbquery",
                        "id": "x101",
                        "checkedOut": true,
                        "icon": 9,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Json - Post with Auth",
                        "id": "x98",
                        "checkedOut": true,
                        "icon": 4,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "DBQuery Test",
                        "id": "x90",
                        "checkedOut": true,
                        "icon": 4,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "What We Offer",
                        "id": "x12",
                        "checkedOut": true,
                        "icon": 1,
                        "markedForPublish": true,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "List",
                        "id": "x117",
                        "checkedOut": true,
                        "icon": 99,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "HomeSlider",
                        "id": "x17",
                        "checkedOut": true,
                        "icon": 99,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Emailer",
                        "id": "x94",
                        "checkedOut": true,
                        "icon": 11,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "DB Query",
                        "id": "x91",
                        "checkedOut": true,
                        "icon": 4,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "SiteControl",
                        "id": "x19",
                        "checkedOut": true,
                        "icon": 99,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Json",
                        "id": "x97",
                        "checkedOut": true,
                        "icon": 4,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Home",
                        "id": "x5",
                        "checkedOut": true,
                        "icon": 8,
                        "markedForPublish": true,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "CompTest2",
                        "id": "x111",
                        "checkedOut": true,
                        "icon": 9,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "CompTest",
                        "id": "x110",
                        "checkedOut": true,
                        "icon": 9,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "adsfdfs",
                        "id": "x88",
                        "checkedOut": true,
                        "icon": 99,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "SiteControl",
                        "id": "x38",
                        "checkedOut": true,
                        "icon": 99,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "asdfsdf",
                        "id": "x32",
                        "checkedOut": true,
                        "icon": 99,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "HomeSlider",
                        "id": "x33",
                        "checkedOut": true,
                        "icon": 99,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "zBrush",
                        "id": "x120",
                        "checkedOut": true,
                        "icon": 3,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "zBrush",
                        "id": "x121",
                        "checkedOut": true,
                        "icon": 3,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Emailer",
                        "id": "x105",
                        "checkedOut": true,
                        "icon": 9,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Json",
                        "id": "x104",
                        "checkedOut": true,
                        "icon": 9,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "asdfsdf",
                        "id": "x46",
                        "checkedOut": true,
                        "icon": 99,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "asdfsdf",
                        "id": "x43",
                        "checkedOut": true,
                        "icon": 99,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "asdfsdf",
                        "id": "x61",
                        "checkedOut": true,
                        "icon": 99,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "asdfsdf",
                        "id": "x50",
                        "checkedOut": true,
                        "icon": 99,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "HomeSlider",
                        "id": "x51",
                        "checkedOut": true,
                        "icon": 99,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Test",
                        "id": "x87",
                        "checkedOut": true,
                        "icon": 99,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Features",
                        "id": "x10",
                        "checkedOut": true,
                        "icon": 2,
                        "markedForPublish": true,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Terms",
                        "id": "x9",
                        "checkedOut": true,
                        "icon": 2,
                        "markedForPublish": true,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "asdfsdf",
                        "id": "x79",
                        "checkedOut": true,
                        "icon": 99,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "asdfsdf",
                        "id": "x82",
                        "checkedOut": true,
                        "icon": 99,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Soap",
                        "id": "x122",
                        "checkedOut": true,
                        "icon": 9,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "dbquery",
                        "id": "x102",
                        "checkedOut": true,
                        "icon": 9,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Soap",
                        "id": "x123",
                        "checkedOut": true,
                        "icon": 9,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Poll",
                        "id": "x103",
                        "checkedOut": true,
                        "icon": 9,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "zBrush",
                        "id": "x119",
                        "checkedOut": true,
                        "icon": 3,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Default Dynamic Schemas Test",
                        "id": "x100",
                        "checkedOut": true,
                        "icon": 1,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Soap",
                        "id": "x108",
                        "checkedOut": true,
                        "icon": 9,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "soap1.2",
                        "id": "x109",
                        "checkedOut": true,
                        "icon": 9,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Detail",
                        "id": "x124",
                        "checkedOut": true,
                        "icon": 2,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Json",
                        "id": "x126",
                        "checkedOut": true,
                        "icon": 4,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "SOAP",
                        "id": "x95",
                        "checkedOut": true,
                        "icon": 9,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Json - Post with Auth",
                        "id": "x125",
                        "checkedOut": true,
                        "icon": 4,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Comp",
                        "id": "x127",
                        "checkedOut": true,
                        "icon": 9,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Embedded Component",
                        "id": "x128",
                        "checkedOut": true,
                        "icon": 5,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Embedded Component",
                        "id": "x129",
                        "checkedOut": true,
                        "icon": 5,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Embedded Component",
                        "id": "x130",
                        "checkedOut": true,
                        "icon": 5,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Embedded Component",
                        "id": "x131",
                        "checkedOut": true,
                        "icon": 5,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Embedded Component",
                        "id": "x132",
                        "checkedOut": true,
                        "icon": 5,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Listing",
                        "id": "x112",
                        "checkedOut": true,
                        "icon": 99,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Embedded Component",
                        "id": "x133",
                        "checkedOut": true,
                        "icon": 3,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Site",
                        "id": "x2",
                        "checkedOut": true,
                        "icon": 1,
                        "markedForPublish": true,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "dbquery",
                        "id": "x99",
                        "checkedOut": true,
                        "icon": 4,
                        "markedForPublish": true,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "List of comps",
                        "id": "x134",
                        "checkedOut": true,
                        "icon": 99,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }, {
                        "name": "Tax",
                        "id": "x135",
                        "checkedOut": true,
                        "icon": 99,
                        "markedForPublish": false,
                        "workflow": "",
                        "workstate": ""
                    }],
                    "groups": [{
                        "name": "Administrators",
                        "active": false,
                        "groupId": "UserGroup\/1",
                        "id": "UserGroup\/1",
                        "userRights": [32, 0],
                        "pcrsCount": 2,
                        "usersCount": 2,
                        "wfDefsCount": 2
                    }],
                    "info": {
                        "name": "Turtle Master",
                        "email": "awang@ingeniux.com",
                        "receiveWorkFlowNotificationMail": false,
                        "id": "INGENIUX\\awang",
                        "integratedMembershipProvider": "",
                        "readLocales": [{
                            "BaseLocale": "en-us",
                            "EnglishName": "English (United States)",
                            "Locale": "en-us",
                            "Name": "English (United States)"
                        }, {
                            "BaseLocale": "zh-cn",
                            "EnglishName": "Chinese (Simplified, PRC)",
                            "Locale": "zh-cn",
                            "Name": "中文(中华人民共和国)"
                        }],
                        "writeLocales": [{
                            "BaseLocale": "en-us",
                            "EnglishName": "English (United States)",
                            "Locale": "en-us",
                            "Name": "English (United States)"
                        }, {
                            "BaseLocale": "zh-cn",
                            "EnglishName": "Chinese (Simplified, PRC)",
                            "Locale": "zh-cn",
                            "Name": "中文(中华人民共和国)"
                        }]
                    },
                    "permissions": [32, 32]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If User doesn't exist, returns error status</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.UserManagerServices.GetSingleGroup(IngeniuxCMService.Admin.GetSingleItemParam)">
            <summary>
            Retrieves the full details of a single User Group by its unique Id
            </summary>
            <param name="data">
            <para>Object containing the unique Id of the User Group</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "itemId": "UserGroups/1"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Full details of the User Group</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "info": {
                        "name": "Authors",
                        "id": "UserGroups\/1",
                        "permissions": [1879681, 1665]
                    },
                    "users": [{
                        "name": "author",
                        "email": "",
                        "groupsCount": 0,
                        "integratedMembershipProvider": "",
                        "lastLogin": "20140120T14:00:02",
                        "pagesCount": 0,
                        "readLanguages": "en-us",
                        "receiveWorkFlowNotificationMail": false,
                        "userId": "ingeniux\\author",
                        "writeLanguages": "en-us"
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If User Group doesn't exist, returns error status</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.UserManagerServices.DeleteUsers(IngeniuxCMService.UniqueObjectsDeleteParam)">
            <summary>
            Deletes a collection of Users. This will automatically remove their membership from their belonging User Groups too.
            </summary>
            <param name="data">
            <para>Object containing the User Id (login name) of Users to be deleted</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "selectedIds": ["t", "INGENIUX%5Cabusbin"]
                }
            }
            ]]>
            </code>
            </example>
            <remarks>
            <para>The items in "selectedIds" field are URI encoded User Ids</para>
            </remarks>
            </param>
            <returns>
            <para>Array of User Ids of the Users that has been removed</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": ["t", "INGENIUX%5Cabusbin"]
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>Non-existing Users will be ignored</para>
            <para>Note that this operation will not automatically remove the integrated Users from their Membership Providers store.</para>
            <para>The operation <see cref="M:IngeniuxCMService.MembershipProvidersServices.DeleteUsers(System.String)"/> performs that task.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.UserManagerServices.DeleteGroups(IngeniuxCMService.UniqueObjectsDeleteParam)">
            <summary>
            Deletes a collection of User Groups.
            </summary>
            <param name="data">
            <para>Object containing the Id of the User Groups to be deleted</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "selectedIds": ["UserGroups/100", "UserGroups/101", "UserGroups/102"]
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Array of Ids of User Groups that were actually deleted</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": ["UserGroups\/100", "UserGroups\/101", "UserGroups\/102"]
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.UserManagerServices.SaveSingleUser(IngeniuxCMService.SaveUserInput)">
            <summary>
            Updates an existing User with new data
            </summary>
            <param name="data">
            <para>Object containing updated details of the existing User</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "info": {
                        "name": "Turtle Master",
                        "email": "awang@ingeniux.com",
                        "receiveWorkFlowNotificationMail": true,
                        "id": "INGENIUX\\awang",
                        "integratedMembershipProvider": "",
                        "readLocales": [{
                            "BaseLocale": "en-us",
                            "EnglishName": "English (United States)",
                            "Locale": "en-us",
                            "Name": "English (United States)"
                        }, {
                            "BaseLocale": "zh-cn",
                            "EnglishName": "Chinese (Simplified, PRC)",
                            "Locale": "zh-cn",
                            "Name": "中文(中华人民共和国)"
                        }],
                        "writeLocales": [{
                            "BaseLocale": "en-us",
                            "EnglishName": "English (United States)",
                            "Locale": "en-us",
                            "Name": "English (United States)"
                        }, {
                            "BaseLocale": "zh-cn",
                            "EnglishName": "Chinese (Simplified, PRC)",
                            "Locale": "zh-cn",
                            "Name": "中文(中华人民共和国)"
                        }],
                        "newEntry": false,
                        "password": ""
                    },
                    "groups": ["UserGroups/97", "UserGroups/103", "UserGroups/116", "UserGroups/117", "UserGroup/1"]
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>The basic information of the update User, plus information of which User Groups were affected with this update.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "name": "Turtle%20Master",
                    "email": "awang%40ingeniux.com",
                    "receiveWorkFlowNotificationMail": true,
                    "groupsAffected": {
                        "added": [],
                        "removed": []
                    },
                    "integratedMembershipProvider": "",
                    "lastLoginDate": "20140127T14:21:58",
                    "pagesCount": 70,
                    "userId": "INGENIUX%5Cawang"
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If User doesn't exist, returns error status.</para>
            <para>The User's name, user Id, and email information are URI encoded in the return message.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.UserManagerServices.SaveSingleGroup(IngeniuxCMService.SaveGroupInput)">
            <summary>
            Updates an existing User Group with new data
            </summary>
            <param name="data">
            <para>Object containing updated details of existing User Group</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "info": {
                        "name": "Authors",
                        "id": "UserGroups/1",
                        "permissions": [1879685, 1665],
                        "newEntry": false
                    },
                    "users": ["ingeniux\\author", "ingeniux\\dhillis", "ingeniux\\shauns"]
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>The basic information of the update User Group, plus information of which Users were affected with this update.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "name": "Authors",
                    "groupId": "UserGroups\/1",
                    "pcrsCount": 1,
                    "secRootsCount": 0,
                    "usersAffected": {
                        "added": ["User\/ingeniux___dhillis", "User\/ingeniux___shauns"],
                        "removed": ["User\/ingeniux___dhillis", "User\/ingeniux___shauns"]
                    },
                    "usersCount": 3,
                    "wfDefsCount": 1
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.UserManagerServices.CreateNewUser(IngeniuxCMService.SaveUserInput)">
            <summary>
            Creates a new User
            </summary>
            <param name="data">
            <para>Object containing the details of new User, and the User Groups this User will belong to</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "info": {
                        "newEntry": true,
                        "id": "INGENIUX\\developer66",
                        "name": "Developer 66",
                        "email": "dev66@ingeniux.com",
                        "receiveWorkFlowNotificationMail": false,
                        "integratedMembershipProvider": "",
                        "password": "",
                        "readLocales": [],
                        "writeLocales": []
                    },
                    "groups": ["UserGroups/1"]
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Basic infomration of newly created User</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "name": "Developer 66",
                    "email": "dev66@ingeniux.com",
                    "receiveWorkFlowNotificationMail": false,
                    "groupsAffected": {
                        "added": ["UserGroups\/1"],
                        "removed": []
                    },
                    "integratedMembershipProvider": "",
                    "lastLoginDate": "",
                    "pagesCount": 0,
                    "userId": "INGENIUX\\developer66",
                    "existing": false
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.UserManagerServices.CreateNewGroup(IngeniuxCMService.SaveGroupInput)">
            <summary>
            Creates a new User Group
            </summary>
            <param name="data">
            <para>Object containing the data on the new User Group to be created</para>
            <example>
            Sample JSON input - Normal User Group Creation
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "info": {
                        "newEntry": true,
                        "name": "Reviewer",
                        "permissions": [1879689, 1673]
                    },
                    "users": [],
            		"ignoreExistingGroup": false
                }
            }
            ]]>
            </code>
            </example>
            <example>
            Sample JSON input - Updating existing User Group
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "info": {
                        "name": "netops",
                        "id": null,
                        "permissions": [1355393, 0]
                    },
                    "users": ["ingeniux\\aloescher", "ingeniux\\atzickler", "ingeniux\\jime", "ingeniux\\kmosier", "ingeniux\\neggen", "ingeniux\\rdonahue", "ingeniux\\rtaylor", "ingeniux\\slee", "ingeniux\\sriedel", "ingeniux\\shawns", "ingeniux\\sfelix"],
                    "ignoreExistingGroup": true
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Basic information of the newly created User Group</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "name": "Reviewer",
                    "groupId": "UserGroups\/33",
                    "pcrsCount": 0,
                    "secRootsCount": 0,
                    "usersAffected": {
                        "added": [],
                        "removed": []
                    },
                    "usersCount": 0,
                    "wfDefsCount": 0,
                    "existing": false
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If the "ignoreExistingGroup" field of the data parameter is true, and the "id" field of the "info" field of data parameter is provided, will update the existing User Group if exists.</para>
            <para>The uses listing of new Group is optional, but if provided, each User Id must be valid, or returns error status.</para>
            </remarks>
        </member>
        <member name="T:IngeniuxCMService.AdvancedWebScriptHostFactory">
            <summary>
            The host factory to create a JSON service host and endpoint, and configure it.
            </summary>
        </member>
        <member name="T:IngeniuxCMService.AssignmentListServices">
            <summary>
            Provides the list of pages assigned to currently logged-in user.
            </summary>
        </member>
        <member name="T:IngeniuxCMService.IAssignmentListServices">
            <summary>
            Functionalities of assignment list
            </summary>
            <remarks>Handler: getAssignmentsList</remarks>
        </member>
        <member name="M:IngeniuxCMService.IAssignmentListServices.GetAssignmentsList(System.Boolean)">
            <summary>
            Get assignment list
            </summary>
            <param name="securityToken"></param>
            <returns></returns>
            <remarks>Instead of XML response, IAssignmentListServices uses JSON format response, which closely matches the JSON structure needed to create
            a data store for grid initialization. Be sure to add formatter on the columns and change camel-case handling.</remarks>
        </member>
        <member name="M:IngeniuxCMService.AssignmentListServices.GetAssignmentsList(System.Boolean)">
             <summary>
             Retrieves the list of pages assigned to currently logged-in user
             </summary>
             <param name="includeGroups">Indicates whether or not to include pages assigned to the group the current user belongs to</param>
             <returns>
             <para>
             The collection of pages assigned to current user
             </para>
             <example>
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": {
            		"columns": [{
            			"name": " ",
            			"field": "Icon",
            			"igxType": "IgxIcon",
            			"width": "22px"
            		}, {
            			"name": "Name",
            			"field": "Name",
            			"igxType": "NoCase",
            			"width": "200px"
            		}, {
            			"name": "ID",
            			"field": "ID",
            			"igxType": "xID",
            			"width": "60px"
            		}, {
            			"name": "Date Modified",
            			"field": "Changed",
            			"igxType": "Date",
            			"width": "120px"
            		}, {
            			"name": "Comments",
            			"field": "LastComment",
            			"igxType": "Comment",
            			"width": "200px"
            		}],
            		"items": [{
            			"Changed": "20140107T13:56:36",
            			"CheckedOut": true,
            			"ID": "x61",
            			"Icon": 99,
            			"LastComment": "",
            			"Name": "asdfsdf"
            		}, {
            			"Changed": "20140107T13:56:37",
            			"CheckedOut": true,
            			"ID": "x64",
            			"Icon": 99,
            			"LastComment": "",
            			"Name": "asdfsdf"
            		}, {
            			"Changed": "20140107T13:56:39",
            			"CheckedOut": true,
            			"ID": "x69",
            			"Icon": 99,
            			"LastComment": "",
            			"Name": "HomeSlider"
            		}, {
            			"Changed": "20140107T13:56:39",
            			"CheckedOut": true,
            			"ID": "x68",
            			"Icon": 99,
            			"LastComment": "",
            			"Name": "asdfsdf"
            		}, {
            			"Changed": "20140121T14:50:04",
            			"CheckedOut": true,
            			"ID": "x87",
            			"Icon": 99,
            			"LastComment": "",
            			"Name": "Test"
            		}, {
            			"Changed": "20140121T14:51:37",
            			"CheckedOut": true,
            			"ID": "x111",
            			"Icon": 9,
            			"LastComment": "",
            			"Name": "CompTest2"
            		}, {
            			"Changed": "20140121T14:53:23",
            			"CheckedOut": true,
            			"ID": "x2",
            			"Icon": 1,
            			"LastComment": "",
            			"Name": "Site"
            		}, {
            			"Changed": "20140121T14:53:24",
            			"CheckedOut": true,
            			"ID": "x112",
            			"Icon": 99,
            			"LastComment": "",
            			"Name": "List"
            		}]
            	}
            }
             ]]>
             </code>
             </example>
             </returns>
        </member>
        <member name="F:IngeniuxCMService.AssignmentListRowInfo.Changed">
            <summary>
            An Ingeniux date string
            </summary>
        </member>
        <member name="T:IngeniuxCMService.EnableCorsEndpointBehavior">
            <summary>
            The endpoint behavior to include the inspector for checking whether to enable CORS (cross origin resource sharing)
            </summary>
        </member>
        <member name="T:IngeniuxCMService.IComponentPickerServices">
            <summary>
            Component picker services. Not recommended to expose for public consumption.
            </summary>
        </member>
        <member name="M:IngeniuxCMService.IComponentPickerServices.GetComponents(System.Int32,System.Int32,System.String,System.String,System.String,System.String)">
            <summary>
            Gets a paginated list of components of a specific type.
            </summary>
            <param name="start"></param>
            <param name="count"></param>
            <param name="sort"></param>
            <param name="type">Semicolon-delimited list</param>
            <returns></returns>
        </member>
        <member name="M:IngeniuxCMService.IComponentPickerServices.GetSingleComponentInfo(System.String)">
            <summary>
            Gets information for one component.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:IngeniuxCMService.ComponentPickerServices.GetComponentTypes">
            <summary>
            Provider a list of component schema root name and friendly names
            </summary>
            <returns></returns>
        </member>
        <member name="M:IngeniuxCMService.ComponentPickerServices.getSortValue(IngeniuxCMService.ComponentItemInfo)">
            <summary>
            Reflective way to locate a sorting field
            </summary>
            <param name="info"></param>
            <returns></returns>
        </member>
        <member name="T:IngeniuxCMService.FileBrowserServices">
            <summary>
            Provides the ability to work with Ingeniux CMS binary assets.
            </summary>
        </member>
        <member name="T:IngeniuxCMService.IFileBrowserServices">
            <summary>
            Services for File Browser dialog. Not recommended for public exposure.
            </summary>
        </member>
        <member name="M:IngeniuxCMService.IFileBrowserServices.GetFileList(System.String,System.String)">
            <remarks>From handler: getFileList</remarks>
        </member>
        <member name="M:IngeniuxCMService.IFileBrowserServices.GetThumbnails(System.String,System.String[],System.String)">
            <remarks>From handler: getThumbnails</remarks>
        </member>
        <member name="M:IngeniuxCMService.FileBrowserServices.GetChildren(IngeniuxCMService.FileBrowserGetChildrenInput)">
             <summary>
             Gets the child folders of a given asset folder
             </summary>
             <param name="data">
             <para>The request parameter</para>
             <example>
             Sample JSON request parameter
             <code language="javascript">
             <![CDATA[
            {
            	"data": {
            		"action": "GetChildren",
            		"type": "Image",
            		"node": {
            			"widgetId": "igxdialogs_DialogWrapper_15_Dialog_Image_root",
            			"objectId": "",
            			"index": 1,
            			"isFolder": true,
            			"fileType": "Image",
            			"relativePath": "Images",
            			"rootPath": "Images"
            		},
            		"tree": {
            			"widgetId": "dojo_Tree_0",
            			"objectId": ""
            		}
            	}
            }
             ]]>
             </code>
             </example>
             </param>
             <returns>
             <para>
             Array of FileBrowserTreeNodeInfo
             </para>
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": [{
            		"objectId": null,
            		"widgetId": "Documents~~test",
            		"fileType": "File",
            		"index": 0,
            		"isFolder": false,
            		"relativePath": "Documents\/test",
            		"rootPath": "Documents",
            		"assetPermission": 2,
            		"checkedOut": true,
            		"childIconSrc": "\/images\/icons\/filebrowser\/folderClose.gif",
            		"markedForPub": false,
            		"title": "&#160;test"
            	}]
            }
             ]]>
             </code>
             </returns>
        </member>
        <member name="M:IngeniuxCMService.FileBrowserServices.NewFolder(IngeniuxCMService.NewFolderInput)">
             <summary>
             Create a new folder under the specified folder for binary assets locations
             </summary>
             <param name="data">
             <para>
             The information on the folder creation
             </para>
             <example>
             Sample JSON request
             <code language="javascript">
             <![CDATA[
            {
            	"data": {
            		"type": "File",
            		"parentDir": "Images/bg",
            		"folderName": "TestFolder"
            	}
            }
             ]]>
             </code>
             </example>
             </param>
             <returns>True of folder created. Otherwise false.</returns>
        </member>
        <member name="M:IngeniuxCMService.FileBrowserServices.Delete(IngeniuxCMService.DeleteInput)">
             <summary>
             Delete a Asset file or folder. Note that deleting a folder will remove all files below, so use with caution.
             </summary>
             <param name="data">
             <para>The information on the deletion</para>
             <example>
             Sample JSON request deleting folder
             <code language="javascript">
             <![CDATA[
            {
            	"data": {
            		"type": "File",
            		"relativePath": "Documents/Testfolder",
            		"folderPath": "Documents/Testfolder",
            		"pickedNames": [],
            		"isFolder": true
            	}
            }
             ]]>
             </code>
             </example>
             <example>
             Sample JSON request deleting file
             <code language="javascript">
             <![CDATA[
            {
            	"data": {
            		"type": "File",
            		"relativePath": "Documents",
            		"folderPath": "Documents",
            		"pickedNames": ["free-infamous-second-son-hd-desktop-wallpaper (17).jpg"],
            		"isFolder": false
            	}
            }
             ]]>
             </code>
             </example>
             </param>
             <returns>
             <para>The information of actual deletion</para>
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": {
            		"fileNames": ["free-infamous-second-son-hd-desktop-wallpaper%20(17).jpg"]
            	}
            }
             ]]>
             </code>
             </returns>
        </member>
        <member name="M:IngeniuxCMService.FileBrowserServices.GetRootPermissions(IngeniuxCMService.GetRootPermissionsInput)">
             <summary>
             Get the security information on provided root folders
             </summary>
             <param name="data">
             <para>The list of root folder name to request security information for</para>
             <example>
             Sample JSON request
             <code language="javascript">
             <![CDATA[
            {
            	"data": {
            		"File": "Documents",
            		"Image": "Images",
            		"Media": "Media",
            		"Stylesheet": "Stylesheets",
            		"Prebuilt": "PreBuilt"
            	}
            }
             ]]>
             </code>
             </example>
             </param>
             <returns>
             <para>The permission information on the provided root folder names</para>
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": {
            		"File": {
            			"absolutePath": "",
            			"assetPermission": 2,
            			"path": "Documents"
            		},
            		"Image": {
            			"absolutePath": "",
            			"assetPermission": 2,
            			"path": "Images"
            		},
            		"Media": {
            			"absolutePath": "",
            			"assetPermission": 2,
            			"path": "Media"
            		},
            		"Prebuilt": {
            			"absolutePath": "",
            			"assetPermission": 2,
            			"path": "PreBuilt"
            		},
            		"Stylesheet": {
            			"absolutePath": "",
            			"assetPermission": 2,
            			"path": "Stylesheets"
            		}
            	}
            }
             ]]>
             </code>
             </returns>
        </member>
        <member name="M:IngeniuxCMService.FileBrowserServices.GetPermissions(IngeniuxCMService.GetPermissionInput)">
             <summary>
             Retrieves the security information for a given asset file or folder
             </summary>
             <param name="data">
             <para>The information of asset item to get security information for</para>
             <example>
             <code language="javascript">
             <![CDATA[
            {
            	"data": {
            		"relativePath": "Images/icons",
            		"assetType": 1 //0 for file, 1 for folder
            	}
            }
             ]]>
             </code>
             </example>
             </param>
             <returns>
             <para>The security information for given asset item</para>
             <example>
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": {
            		"isInherited": true,
            		"permissions": [{
            			"groupId": "0",
            			"groupName": "Everyone",
            			"permission": 2
            		}]
            	}
            }
             ]]>
             </code>
             </example>
             </returns>
        </member>
        <member name="M:IngeniuxCMService.FileBrowserServices.SetPermissions(IngeniuxCMService.SetPermissionInput)">
             <summary>
             Change security information of a given asset file or folder
             </summary>
             <param name="data">
             <para>
             The new security information for given asset file or folder
             </para>
             <example>
             The example before sets the folder to allow everyone read-only, authors to upload, and administrator full control
             <code language="javascript">
             <![CDATA[
            {
            	"data": {
            		"relativePath": "Images/icons",
            		"assetType": 1,
            		"permissions": {
            			"isInherited": false,
            			"permissions": [{
            				"Id": "0",
            				"Name": "Everyone",
            				"Access": "0"
            			}, {
            				"Id": "UserGroup/1",
            				"Name": "Administrators",
            				"Access": "2"
            			}, {
            				"Id": "UserGroups/1",
            				"Name": "Authors",
            				"Access": "1"
            			}]
            		}
            	}
            }
             ]]>
             </code>
             </example>
             </param>
             <returns>
             <para>
             The permission level of set asset item for current user: 0 for read-only, 1 for upload, 2 for full control
             </para>
             <example>
             Sample JSON return
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": {
            		"newPermission": 2
            	}
            }
             ]]>
             </code>
             </example>
             </returns>
        </member>
        <member name="M:IngeniuxCMService.FileBrowserServices.GetFileList(System.String,System.String)">
             <summary>
             Retrieve the list of file in specified folder
             </summary>
             <param name="dir">
             <para>The folder to get files listing for</para>
             <example>"Images/homeslider"</example>
             </param>
             <param name="type">
             <para>The type of asset this folder is folder. The choices are "File", "Image", "Media", "Prebuilt", "Stylesheet"</para>
             </param>
             <returns>
             <para>List of files in the specified folder</para>
             <example>
             Sample JSON return
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": {
            		"headers": [{
            			"bodyTextAlign": "left",
            			"label": "#",
            			"minWidth": "30px",
            			"type": "fileType"
            		}, {
            			"bodyTextAlign": "left",
            			"label": "Name",
            			"minWidth": "120px",
            			"type": "string"
            		}, {
            			"bodyTextAlign": "left",
            			"label": "Size (KB)",
            			"minWidth": "90px",
            			"type": "float"
            		}, {
            			"bodyTextAlign": "left",
            			"label": "Type",
            			"minWidth": "90px",
            			"type": "string"
            		}, {
            			"bodyTextAlign": "left",
            			"label": "Date Modified",
            			"minWidth": "100px",
            			"type": "xmldate"
            		}],
            		"rows": [{
            			"attributes": [{
            				"Key": "filePath",
            				"Value": "aeroplane.png"
            			}],
            			"elements": ["png", "aeroplane.png", "137.25", "PNG image", "20130122T12:07:28"]
            		}, {
            			"attributes": [{
            				"Key": "filePath",
            				"Value": "balloon.png"
            			}],
            			"elements": ["png", "balloon.png", "134.92", "PNG image", "20130122T12:07:28"]
            		}, {
            			"attributes": [{
            				"Key": "filePath",
            				"Value": "bg-green.png"
            			}],
            			"elements": ["png", "bg-green.png", "0.95", "PNG image", "20130215T01:55:28"]
            		}, {
            			"attributes": [{
            				"Key": "filePath",
            				"Value": "bg-heading.png"
            			}],
            			"elements": ["png", "bg-heading.png", "0.93", "PNG image", "20130104T19:06:54"]
            		}, {
            			"attributes": [{
            				"Key": "filePath",
            				"Value": "bg-sky.png"
            			}],
            			"elements": ["png", "bg-sky.png", "0.54", "PNG image", "20130122T12:07:28"]
            		}, {
            			"attributes": [{
            				"Key": "filePath",
            				"Value": "bg-text.png"
            			}],
            			"elements": ["png", "bg-text.png", "0.92", "PNG image", "20130202T17:55:54"]
            		}, {
            			"attributes": [{
            				"Key": "filePath",
            				"Value": "sequence-logo.png"
            			}],
            			"elements": ["png", "sequence-logo.png", "2.59", "PNG image", "20130122T12:07:28"]
            		}]
            	}
            }		
             ]]>
             </code>
             </example>
             </returns>
        </member>
        <member name="M:IngeniuxCMService.FileBrowserServices.GetThumbnails(System.String,System.String[],System.String)">
             <summary>
             Retrieves the thumb nails of given file names under specified folder
             </summary>
             <param name="folderPath">
             <para>The folder to get files listing for</para>
             <example>"Images/homeslider"</example>
             </param>
             <param name="fileNames">
             <para>The array of file names.</para>
             <example>
             Sample JSON
             <code language="javascript">
             <![CDATA[
             ["aeroplane.png", "balloon.png", "bg-green.png", "bg-heading.png", "bg-sky.png"]
             ]]>
             </code>
             </example>
             </param>
             <param name="type">
             <para>The type of asset this folder is folder. The choices are "File", "Image", "Media", "Prebuilt", "Stylesheet"</para>
             </param>
             <returns>
             <para>The thumbnail information of given files.</para>
             <example>
             Sample JSON return
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": {
            		"list": [{
            			"basePath": "Images\/homeslider",
            			"extension": "png",
            			"fileName": "aeroplane.png",
            			"height": 397,
            			"imageSrc": "xml\/Images\/homeslider\/aeroplane.png",
            			"randomizer": "2f5979cbc25f4ac7b1d77aa221faa726",
            			"size": "137.25 KB",
            			"width": 600
            		}, {
            			"basePath": "Images\/homeslider",
            			"extension": "png",
            			"fileName": "balloon.png",
            			"height": 512,
            			"imageSrc": "xml\/Images\/homeslider\/balloon.png",
            			"randomizer": "2f5979cbc25f4ac7b1d77aa221faa726",
            			"size": "134.92 KB",
            			"width": 384
            		}, {
            			"basePath": "Images\/homeslider",
            			"extension": "png",
            			"fileName": "bg-green.png",
            			"height": 20,
            			"imageSrc": "xml\/Images\/homeslider\/bg-green.png",
            			"randomizer": "2f5979cbc25f4ac7b1d77aa221faa726",
            			"size": "0.95 KB",
            			"width": 20
            		}, {
            			"basePath": "Images\/homeslider",
            			"extension": "png",
            			"fileName": "bg-heading.png",
            			"height": 23,
            			"imageSrc": "xml\/Images\/homeslider\/bg-heading.png",
            			"randomizer": "2f5979cbc25f4ac7b1d77aa221faa726",
            			"size": "0.93 KB",
            			"width": 30
            		}, {
            			"basePath": "Images\/homeslider",
            			"extension": "png",
            			"fileName": "bg-sky.png",
            			"height": 1600,
            			"imageSrc": "xml\/Images\/homeslider\/bg-sky.png",
            			"randomizer": "2f5979cbc25f4ac7b1d77aa221faa726",
            			"size": "0.54 KB",
            			"width": 5
            		}]
            	}
            }
             ]]>
             </code>
             </example>
             </returns>
             <remarks>
             <para>Retrieving thumbnails is an expensive operation for image files, since we need to dig into each image file to grab the sizing information. </para>
             <para>To make sure the response time is reasonable for this operation, do not input too many files.</para>
             <para>Generally, to make sure the response is less than 5 seconds, no more than 100 files.</para>
             </remarks>
        </member>
        <member name="M:IngeniuxCMService.FileBrowserServices.CreateComponent(IngeniuxCMService.FileBrowserCreateComponentInput)">
             <summary>
             Create a component for a binary asset file. This operation will create a reference for the asset in CMS content
             </summary>
             <param name="info">
             <para>The instructions on how to create the component, which include whether or not to create a thumbnail for image asset</para>
             <example>
             Sample JSON input
             <code language="javascript">
             <![CDATA[
            {
            	"info": {
            		"basePath": "icons",
            		"thumb": {
            			"createThumbnail": false,
            			"width": "100",
            			"height": "21"
            		},
            		"metaData": {
            			"createComponent": true,
            			"src": "Images/icons/zBrush.gif",
            			"fileName": "zBrush.gif",
            			"alt": "Test",
            			"keywords": "Test ",
            			"hspace": "",
            			"vspace": "",
            			"align": "",
            			"border": ""
            		}
            	}
            }
             ]]>
             </code>
             </example>
             </param>
             <returns>
             <para>The information of component that was created, include the component page id and thumb nail information for image asset</para>
             <example>
             Sample JSON return
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": {
            		"newComponent": {
            			"id": "x116",
            			"thumb": null
            		}
            	}
            }
             ]]>
             </code>
             </example>
             </returns>
        </member>
        <member name="T:IngeniuxCMService.MarkForPublishServices">
            <summary>
            Provides functionality related to Mark for Publish and Unmark for Publish actions.
            </summary>
        </member>
        <member name="M:IngeniuxCMService.MarkForPublishServices.GetPageMarks(IngeniuxCMService.GetPageMarksInput)">
             <summary>
             Retrieves the Mark-for-publish information on given page(s)
             </summary>
             <param name="data">
             <para>
             The information on the page(s) to request mark-for-publish information for
             </para>
             <example>
             Sample JSON request
             <code language="javascript">
             <![CDATA[
            {
            	"pageIds": ["x11"],
            	"recursive": false
            }
             ]]>
             </code>
             </example>
             </param>
             <returns>
             <para>Collection of Publishing Targets information, also indication on each target on whether or not the given pages are marked for the target, and which version of this page was marked for the given target.</para>
             <para>Also, the collection of information on all available previous versions of the pages and the mark-for-publish information on each version.</para>
             <example>
             Sample JSON return
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": {
            		"pubTargets": [{
            			"allowCurrentUser": true,
            			"markedVersion": 4,
            			"pubTargetId": "PublishingTargets\/1",
            			"pubTargetName": "Live",
            			"structuredUrlEnabled": true
            		}, {
            			"allowCurrentUser": true,
            			"markedVersion": -1,
            			"pubTargetId": "PublishingTargets\/33",
            			"pubTargetName": "Staging",
            			"structuredUrlEnabled": true
            		}, {
            			"allowCurrentUser": true,
            			"markedVersion": -1,
            			"pubTargetId": "PublishingTargets\/34",
            			"pubTargetName": "Staging 2",
            			"structuredUrlEnabled": true
            		}],
            		"versions": [{
            			"CurrentVersion": true,
            			"Date": "20140120T14:20:58",
            			"MasterVersion": -1,
            			"Name": "About Us",
            			"PubTargets": "{\"version\":4,\"targets\":[{\"id\":\"PublishingTargets\/1\",\"name\":\"Live\"}]}",
            			"User": "Turtle Master [INGENIUX\\awang]",
            			"Version": 4
            		}, {
            			"CurrentVersion": false,
            			"Date": "20131211T22:06:39",
            			"MasterVersion": -1,
            			"Name": "About Us",
            			"PubTargets": "{\"version\":3,\"targets\":[]}",
            			"User": "Turtle Master [INGENIUX\\awang]",
            			"Version": 3
            		}, {
            			"CurrentVersion": false,
            			"Date": "20131211T18:57:18",
            			"MasterVersion": -1,
            			"Name": "About Us",
            			"PubTargets": "{\"version\":2,\"targets\":[]}",
            			"User": "Turtle Master [INGENIUX\\awang]",
            			"Version": 2
            		}, {
            			"CurrentVersion": false,
            			"Date": "20131211T18:19:42",
            			"MasterVersion": -1,
            			"Name": "About Us",
            			"PubTargets": "{\"version\":1,\"targets\":[]}",
            			"User": "Turtle Master [INGENIUX\\awang]",
            			"Version": 1
            		}]
            	}
            }
             ]]>
             </code>
             </example>
             </returns>
             <remarks>
             <para>For each item in "pubTargets" collection: the "markedVersion" property indicating which version was marked for that target. If value is -1, then it is not marked for that target.</para>
             <para>If multiple page ids are provided, the return marking information will be the first page in the selection. However, because it is on multiple pages, the "versions" collection will only list current version.</para>
             </remarks>
        </member>
        <member name="M:IngeniuxCMService.MarkForPublishServices.MarkPages(IngeniuxCMService.MarkPageInput,System.String)">
             <summary>
             Mark/unmark the given Pages for publish on provided Publishing Targets. All Pages will be marked the same way.
             </summary>
             <param name="data">
             <para>The instructions on Page's publish marking</para>
             <example>
             Sample JSON input
             <code language="javascript">
             <![CDATA[
            {
            		"pageIds": ["x89"],
            		"markForPublish": [{
            			"pubTarget": {
            				"id": "PublishingTargets/1",
            				"name": "Live"
            			},
            			"version": "1",
            			"marked": true,
            			"isCurrent": false
            		}, {
            			"pubTarget": {
            				"id": "PublishingTargets/33",
            				"name": "Staging"
            			},
            			"version": "1",
            			"marked": true,
            			"isCurrent": false
            		}],
            		"unmarkForPublish": [],
            		"recursive": false
            	}
             ]]>
             </code>
             </example>
             </param>
             <param name="pubTarget">The id of current Publishing Target. It is used to construct Page properties information on the result object.</param>
             <returns>
             <para>The information of affected Page(s) after mark for publishing is done.</para>
             <example>
             Sample JSON return
             <code language="javascript">
             <![CDATA[
             {
            	"code": 0,
            	"error": null,
            	"message": {
            		"contentChanged": false,
            		"pageAction": "markforpublish",
            		"pageProperties": {
            			"name": "DynamicExecutes",
            			"allowedCategoryRoots": [],
            			"ancestors": ["x1", "x2"],
            			"assignedGroup": null,
            			"assignedUser": {
            				"name": "Turtle Master",
            				"email": "",
            				"userId": "INGENIUX\\awang"
            			},
            			"canClaimPage": false,
            			"canTranslate": false,
            			"checkedOut": true,
            			"error": null,
            			"icon": 1,
            			"isAssignedToOtherUser": false,
            			"isEditable": true,
            			"isInWorkflow": false,
            			"justRecycled": false,
            			"languageRootId": "",
            			"lingualMaps": {
            				"clones": [],
            				"master": null
            			},
            			"locale": "",
            			"localeInherited": true,
            			"markedForPublish": true,
            			"markedForPublishAny": false,
            			"markedForPublishPropagated": false,
            			"nextPageId": null,
            			"nextPageIndex": 0,
            			"noDnd": false,
            			"numChildPages": 6,
            			"pageId": "x89",
            			"parentId": null,
            			"pendingMasterVersion": 0,
            			"referenceProps": {
            				"created": "20140107T21:57:04",
            				"createdBy": "INGENIUX\\awang",
            				"endDate": "00010101T00:00:00",
            				"lastModified": "20140122T19:31:54",
            				"lastModifiedBy": "User\/INGENIUX___awang",
            				"publishAs": "",
            				"startDate": "00010101T00:00:00"
            			},
            			"remoteServer": "",
            			"schemaFriendlyName": "Folder",
            			"schemaName": "Folder",
            			"schemaOnLatestVersion": true,
            			"securityLevel": 2,
            			"userCanCopyPage": true,
            			"workflow": null
            		},
            		"pages": [{
            			"id": "x89",
            			"props": {
            				"name": "DynamicExecutes",
            				"allowedCategoryRoots": [],
            				"ancestors": ["x1", "x2"],
            				"assignedGroup": null,
            				"assignedUser": {
            					"name": "Turtle Master",
            					"email": "",
            					"userId": "INGENIUX\\awang"
            				},
            				"canClaimPage": false,
            				"canTranslate": false,
            				"checkedOut": true,
            				"error": null,
            				"icon": 1,
            				"isAssignedToOtherUser": false,
            				"isEditable": true,
            				"isInWorkflow": false,
            				"justRecycled": false,
            				"languageRootId": "",
            				"lingualMaps": {
            					"clones": [],
            					"master": null
            				},
            				"locale": "",
            				"localeInherited": true,
            				"markedForPublish": true,
            				"markedForPublishAny": false,
            				"markedForPublishPropagated": false,
            				"nextPageId": null,
            				"nextPageIndex": 0,
            				"noDnd": false,
            				"numChildPages": 6,
            				"pageId": "x89",
            				"parentId": null,
            				"pendingMasterVersion": 0,
            				"referenceProps": {
            					"created": "20140107T21:57:04",
            					"createdBy": "INGENIUX\\awang",
            					"endDate": "00010101T00:00:00",
            					"lastModified": "20140122T19:31:54",
            					"lastModifiedBy": "User\/INGENIUX___awang",
            					"publishAs": "",
            					"startDate": "00010101T00:00:00"
            				},
            				"remoteServer": "",
            				"schemaFriendlyName": null,
            				"schemaName": "Folder",
            				"schemaOnLatestVersion": false,
            				"securityLevel": 2,
            				"userCanCopyPage": true,
            				"workflow": null
            			}
            		}],
            		"queryString": {
            			"assignTargetId": null,
            			"assignToGroup": null,
            			"comment": null,
            			"includeChildren": false,
            			"newPageName": null,
            			"pageAction": null,
            			"pageId": null,
            			"pageIds": null,
            			"transitionId": null
            		},
            		"returnMessage": null
            	}
            }
             ]]>
             </code>
             </example>
             </returns>
             <remarks>
             <para>If we are marking on multiple pages, we can only mark/unmark each page on its current version. Otherwise, we can mark page on any of its available previous versions.</para>
             </remarks>
        </member>
        <member name="M:IngeniuxCMService.MarkForPublishServices.CheckPagesMarkedForTarget(IngeniuxCMService.GetPageMarksInput,System.String)">
             <summary>
             Similar to the operation "GetPageMarks". However, this operation is geared towards returning mark for publishing information on a perticular Publishing Target.
             Also, it's return information is a lot simpler.
             </summary>
             <param name="data">
             <para>The information on what pages to check whether or not they are marked for given Publishing Target</para>
             <example>
             Sample JSON input
             <code language="javascript">
             <![CDATA[
            {
            	"pubTargetName": "Live",
            	"pageIds": ["x1", "x2", "RecycleBin", "x112", "x111", "x110", "x100", "x99", "x89", "x5", "x3", "x11", "x12", "x15", "x9"]
            }
             ]]>
             </code>
             </example>
             </param>
             <param name="pubTarget">The Id of the Publishing Target</param>
             <returns>
             <para>Collection of page marking information</para>
             <example>
             Sample JSON return
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": [{
            		"markedForPublish": false,
            		"pageId": "x1"
            	}, {
            		"markedForPublish": false,
            		"pageId": "RecycleBin"
            	}, {
            		"markedForPublish": true,
            		"pageId": "x2"
            	}, {
            		"markedForPublish": false,
            		"pageId": "x112"
            	}, {
            		"markedForPublish": false,
            		"pageId": "x111"
            	}, {
            		"markedForPublish": false,
            		"pageId": "x110"
            	}, {
            		"markedForPublish": false,
            		"pageId": "x100"
            	}, {
            		"markedForPublish": false,
            		"pageId": "x99"
            	}, {
            		"markedForPublish": true,
            		"pageId": "x89"
            	}, {
            		"markedForPublish": true,
            		"pageId": "x5"
            	}, {
            		"markedForPublish": true,
            		"pageId": "x3"
            	}, {
            		"markedForPublish": true,
            		"pageId": "x11"
            	}, {
            		"markedForPublish": true,
            		"pageId": "x12"
            	}, {
            		"markedForPublish": false,
            		"pageId": "x15"
            	}, {
            		"markedForPublish": true,
            		"pageId": "x9"
            	}]
            }
             ]]>
             </code>
             </example>
             </returns>
             <remarks>This operation is used on Ingeniux CMS client to found if Pages show on Site Tree are marked for given Publishing Target or not</remarks>
        </member>
        <member name="M:IngeniuxCMService.MarkForPublishServices.GetPublishingSystemObjects(IngeniuxCMService.GetProfilesListingInput)">
             <summary>
             Retrieves either list of Publishing Targets a given page is marked for; Or list of Publishing Profiles that contains marked Publishing Targets in each profile.
             </summary>
             <param name="data">
             <para>The information of whether to return Publishing Profiles or Publishing Targets, and which page we are pulling information for.</para>
             <example>
             Sample JSON input - get publishing profiles
             <code language="javascript">
             <![CDATA[
            {
            		"url": "",
            		"handleAs": "json-comment-optional",
            		"content": {
            			"start": 0,
            			"count": 100,
            			"sort": "label"
            		},
            		"method": "getPublishingProfiles",
            		"pageId": "x11"
            }
             ]]>
             </code>
             </example>
             <example>
             Sample JSON input - get publishing targets
             <code language="javascript">
             <![CDATA[
            {
            		"url": "",
            		"handleAs": "json-comment-optional",
            		"content": {
            			"start": 0,
            			"count": 100,
            			"sort": "name"
            		},
            		"method": "getPublishingTargets",
            		"pageId": "x11"
            }
             ]]>
             </code>
             </example>
             </param>
             <returns>
             <para>The list of Publishing Target that the given page is marked on;</para>
             <para>Or the list of all Publishing Profile, each contains the Publishing Targets that belong to it, and marked on given page</para>
             <example>
             Sample JSON return - get publishing profiles
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": {
            		"identifier": "id",
            		"items": [{
            			"name": "Live",
            			"id": "PublishingProfiles\/2",
            			"label": "Live (1)",
            			"targets": [{
            				"name": "Live",
            				"id": "PublishingTargets\/1"
            			}],
            			"targetsCount": 1
            		}, {
            			"name": "Staging",
            			"id": "PublishingProfiles\/1",
            			"label": "Staging (2)",
            			"targets": [{
            				"name": "Staging",
            				"id": "PublishingTargets\/33"
            			}],
            			"targetsCount": 2
            		}, {
            			"name": "",
            			"id": "custom",
            			"label": "-- Custom picks of Publishing Targets --",
            			"targets": [],
            			"targetsCount": 0
            		}],
            		"label": "name",
            		"numRows": 3
            	}
            }
             ]]>
             </code>
             <remarks>Note that for each profile, "targets" and "targetsCount" may not match, since "targetsCount" is count of all publishing targets in profile, "targets" will only list publishing targets the page is marked on.</remarks>
             </example>
             <example>
             Sample JSON return - get publishing targets (marked for given page)
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": {
            		"identifier": "id",
            		"items": [{
            			"name": "Live",
            			"id": "PublishingTargets\/1"
            		}, {
            			"name": "Staging",
            			"id": "PublishingTargets\/33"
            		}],
            		"label": "name",
            		"numRows": 2
            	}
            }
             ]]>
             </code>
             </example>
             </returns>
             <remarks>On Ingeniux CMS Client, this method is called to for selection of Publishing Target to check a Page in for.</remarks>
        </member>
        <member name="M:IngeniuxCMService.INewPageDialogServices.GetPageCreationData(System.Boolean,System.String)">
            <remarks>From handler: getPageCreationData</remarks>
        </member>
        <member name="M:IngeniuxCMService.INewPageDialogServices.GetParentPagesForRule(System.String,System.String)">
            <remarks>From handler: getParentPagesForRule</remarks>
        </member>
        <member name="T:IngeniuxCMService.IPagePropertiesDialogServices">
            <summary>
            Page Properties Dialog service. Not recommended to be exposed for publish comsumption.
            </summary>
            <remarks>From handlers: getPagePropertiesData and urlmap.igx</remarks>
        </member>
        <member name="M:IngeniuxCMService.IPagePropertiesDialogServices.GetPagePropertiesData(System.String,System.String)">
            <summary>
            Gets page properties data for page properties dialog.
            </summary>
            <param name="pageId"></param>
            <param name="pubTargetId">New parameter to be included on client side to retrieve page properties and URL map information.</param>
            <returns></returns>
        </member>
        <member name="M:IngeniuxCMService.IPagePropertiesDialogServices.SetPageProperties(IngeniuxCMService.PagePropertiesDialogInput,System.String)">
            <summary>
            Sets page properties by page properties dialog.
            </summary>
            <param name="pageProps"></param>
            <param name="pubTarget">Name of pub target</param>
            <returns></returns>
            <remarks>Sets URL maps together with normal page properties.</remarks>
        </member>
        <member name="T:IngeniuxCMService.PagePropertiesDialogData">
            <summary>
            Merging url maps data in this service too, since now it doesn't have to be 2 requests
            </summary>
        </member>
        <member name="F:IngeniuxCMService.PagePropertiesSecurityInputItem.Access">
            <remarks>Need to change client script to send int</remarks>
        </member>
        <member name="T:IngeniuxCMService.IPickListServices">
            <summary>
            Services for pick list dialog
            </summary>
        </member>
        <member name="M:IngeniuxCMService.IPickListServices.PageCreationRules(System.String,System.String[])">
            <summary>
            Gets page creation rule choices.
            </summary>
            <param name="idFieldName"></param>
            <param name="excludeIds">Pipe-delimited list of PCR IDs</param>
            <returns></returns>
        </member>
        <member name="M:IngeniuxCMService.IPickListServices.PageSecurities(System.String,System.String[])">
            <summary>
            Gets page security choices.
            </summary>
            <param name="idFieldName"></param>
            <param name="excludeIds">Pipe-delimited list of PCR IDs</param>
            <returns></returns>
        </member>
        <member name="M:IngeniuxCMService.IPublishingDialogsServices.GetPublishingTargets(System.String,System.String,System.String)">
            <remarks>From handler: getPublishingTargets</remarks>
        </member>
        <member name="M:IngeniuxCMService.IPublishingDialogsServices.GetPublishingProfiles">
            <remarks>From handler: pageMarkForPublish</remarks>
        </member>
        <member name="M:IngeniuxCMService.IPublishingDialogsServices.CheckPublishingDuplicate(System.Boolean,System.String,System.String)">
            <remarks>From handler: checkPublishingDuplicate</remarks>
        </member>
        <member name="T:IngeniuxCMService.IUserGroupSelectionServices">
            <summary>
            SelectUser dialog services. Don't expose for public consumption.
            </summary>
            <remarks>From handler: getUserList</remarks>
        </member>
        <member name="M:IngeniuxCMService.IUserGroupSelectionServices.GetUserGroupsForPages(System.String,System.String,System.Boolean)">
            <summary>
            Gets users and groups for pages facing a specific transition.
            </summary>
            <param name="pageIds">Pipe-delimited list of page IDs</param>
            <param name="transitionId"></param>
            <returns></returns>
        </member>
        <member name="M:IngeniuxCMService.IUserGroupSelectionServices.GetUserGroupsForWorkflowAdd(System.String,System.String,System.Boolean)">
            <summary>
            Gets users and groups for a single page in workflow.
            </summary>
            <param name="pageId"></param>
            <param name="workflowId"></param>
            <returns></returns>
        </member>
        <member name="M:IngeniuxCMService.IUserGroupSelectionServices.GetUsersAndGroups(System.Boolean,System.String)">
            <remarks>From handler: getUsersAndGroups</remarks>
        </member>
        <member name="T:IngeniuxCMService.UserGroupSelectionServices">
            <summary>
            Provides the ability to retrieve a collection of users and groups.
            </summary>
        </member>
        <member name="M:IngeniuxCMService.UserGroupSelectionServices.GetUserGroupsForPages(System.String,System.String,System.Boolean)">
            <summary>
            <para>
            Retrieves the collection of Users or User Groups based on the given Pages and Transition
            </para>
            <para>This operations is mainly used for retrieving the list of Users or Group for Page assignment, inside or outside of Workflow transition.</para>
            <para>For User Groups retrieval scenario: </para>
            <para>If Page is not in Workflow, it can be assigned to any User Groups, therefore all User Groups are returned.</para>
            <para>If Page is in Workflow, and the assignment is happening through Transition (trantionId provided), then the Transition's Target Group is returned.</para>
            <para>If Page is in Workflow, and the assignment is not through Transition (transitionId not provided), then the Current Group of the Workflow State is returned.</para>
            <para>For Users retrieval scenario:</para>
            <para>If Page is not in Workflow, it can be assigned to any Users, therefore all Users are returned.</para>
            <para>If Page is in Workflow, and the assignment is happening through Transition (transitionId provided), then the Users that belong to the Transition's Target Group are returned.</para>
            <para>If Page is in Workflow, and the assignment is not through Transition (transitionId not provided), then the Users that belong to the Current Group of the Workflow State are returned.</para>
            <para>The result is combination of all Users/Users Groups each Page allows.</para>
            </summary>
            <param name="pageId">Id of the Pages to retrieve Users/User Groups for. "|" delimited to multiple Pages.</param>
            <param name="transitionId">Id of the Transition to that be used to advance and assign the Page</param>
            <param name="getGroups">Whether to retrieve list of User Groups or Users</param>
            <returns>
            <para>Collection of basic information of either Users and User Groups</para>
            <example>
            Sample JSON return - Users
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "groupName": "",
                    "groups": [],
                    "users": [{
                        "name": "abusbin",
                        "active": false,
                        "email": "",
                        "lastLogin": null,
                        "userId": "INGENIUX\\abusbin"
                    }, {
                        "name": "author",
                        "active": false,
                        "email": "",
                        "lastLogin": "2014-01-20",
                        "userId": "ingeniux\\author"
                    }, {
                        "name": "t",
                        "active": false,
                        "email": "t@i.com",
                        "lastLogin": null,
                        "userId": "t"
                    }, {
                        "name": "Turtle Master",
                        "active": false,
                        "email": "awang@ingeniux.com",
                        "lastLogin": "2014-01-27",
                        "userId": "INGENIUX\\awang"
                    }]
                }
            }
            ]]>
            </code>
            </example>
            <example>
            Sample JSON return - User Groups
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "groupName": null,
                    "groups": [{
                        "name": "Administrators",
                        "active": true,
                        "groupId": "UserGroup\/1",
                        "id": "UserGroup\/1",
                        "userRights": [32, 0]
                    }, {
                        "name": "Authors",
                        "active": true,
                        "groupId": "UserGroups\/1",
                        "id": "UserGroups\/1",
                        "userRights": [1355393, 511]
                    }],
                    "users": []
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If any Page with the provided Ids doesn't exists, returns error status, that contains all invalid Page Ids</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.UserGroupSelectionServices.GetUserGroupsForWorkflowAdd(System.String,System.String,System.Boolean)">
            <summary>
            Retrieves the collection of Users or User Groups available to assign the Page to, when Page is added to Workflow.
            </summary>
            <param name="pageId">Id of the Page that will be added to Workflow</param>
            <param name="workflowId">Id of the Workflow Definition the Page will be added to</param>
            <param name="getGroups">Whether to retrieve Users or User Groups</param>
            <returns>
            <para>Collection of basic information of either Users and User Groups</para>
            <example>
            Sample JSON return - Users
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "groupName": "",
                    "groups": [],
                    "users": [{
                        "name": "abusbin",
                        "active": false,
                        "email": "",
                        "lastLogin": null,
                        "userId": "INGENIUX\\abusbin"
                    }, {
                        "name": "author",
                        "active": false,
                        "email": "",
                        "lastLogin": "2014-01-20",
                        "userId": "ingeniux\\author"
                    }, {
                        "name": "t",
                        "active": false,
                        "email": "t@i.com",
                        "lastLogin": null,
                        "userId": "t"
                    }, {
                        "name": "Turtle Master",
                        "active": false,
                        "email": "awang@ingeniux.com",
                        "lastLogin": "2014-01-27",
                        "userId": "INGENIUX\\awang"
                    }]
                }
            }
            ]]>
            </code>
            </example>
            <example>
            Sample JSON return - User Groups
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "groupName": null,
                    "groups": [{
                        "name": "Administrators",
                        "active": true,
                        "groupId": "UserGroup\/1",
                        "id": "UserGroup\/1",
                        "userRights": [32, 0]
                    }, {
                        "name": "Authors",
                        "active": true,
                        "groupId": "UserGroups\/1",
                        "id": "UserGroups\/1",
                        "userRights": [1355393, 511]
                    }],
                    "users": []
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Page or Workflow Defintion doesn't exist, returns error status</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.UserGroupSelectionServices.GetUsersAndGroups(System.Boolean,System.String)">
            <summary>
            Retrieves collection of Users and UserGroups.
            </summary>
            <param name="extended">Whether to produce extended information or basic information on each User/User Group</param>
            <param name="groupId">Id of the User Group to filter User with. If provided, only Users belong to the Group are returned.</param>
            <returns>
            <para>Object containing collection of Users and User Groups</para>
            <example>
            Sample JSON return - extended is false
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "groups": [{
                        "name": "Administrators",
                        "active": true,
                        "groupId": "UserGroup\/1",
                        "id": "UserGroup\/1",
                        "userRights": [32, 0],
                        "pcrsCount": 0,
                        "usersCount": 0,
                        "wfDefsCount": 0
                    }, {
                        "name": "Authors",
                        "active": true,
                        "groupId": "UserGroups\/1",
                        "id": "UserGroups\/1",
                        "userRights": [1355393, 511],
                        "pcrsCount": 0,
                        "usersCount": 0,
                        "wfDefsCount": 0
                    }],
                    "users": [{
                        "name": "abusbin",
                        "active": false,
                        "email": "",
                        "lastLogin": "",
                        "userId": "INGENIUX%5Cabusbin",
                        "groupsCount": 0,
                        "integratedMembershipProvider": null,
                        "readLanguages": null,
                        "receiveWorkFlowNotificationMail": false,
                        "writeLanguages": null
                    }, {
                        "name": "author",
                        "active": false,
                        "email": "",
                        "lastLogin": "2014-01-20",
                        "userId": "ingeniux%5Cauthor",
                        "groupsCount": 0,
                        "integratedMembershipProvider": null,
                        "readLanguages": null,
                        "receiveWorkFlowNotificationMail": false,
                        "writeLanguages": null
                    }, {
                        "name": "t",
                        "active": false,
                        "email": "t%40i.com",
                        "lastLogin": "",
                        "userId": "t",
                        "groupsCount": 0,
                        "integratedMembershipProvider": null,
                        "readLanguages": null,
                        "receiveWorkFlowNotificationMail": false,
                        "writeLanguages": null
                    }, {
                        "name": "Turtle%20Master",
                        "active": false,
                        "email": "awang%40ingeniux.com",
                        "lastLogin": "2014-01-27",
                        "userId": "INGENIUX%5Cawang",
                        "groupsCount": 0,
                        "integratedMembershipProvider": null,
                        "readLanguages": null,
                        "receiveWorkFlowNotificationMail": false,
                        "writeLanguages": null
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If groupId is provided, but the Group doesn't exist, returns empty Users list.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.IEnumerationFieldChoicesServices.GetEnumerationElementChoices(System.String,System.String,System.String)">
            <remarks>From handler: getElementValues</remarks>
        </member>
        <member name="M:IngeniuxCMService.IEnumerationFieldChoicesServices.GetMultiSelectElementChoices(System.String,System.String,System.String,System.Boolean,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <remarks>From handler: getMultiselectChoices</remarks>
        </member>
        <member name="M:IngeniuxCMService.IEnumerationFieldChoicesServices.GetLinkSetListing(System.String)">
            <summary>
            Gets LinkSet information for select pages via their IDs.
            </summary>
            <param name="pageIds">pipe-delimited page ids</param>
            <returns></returns>
        </member>
        <member name="M:IngeniuxCMService.IEnumerationFieldChoicesServices.GetReferencesElementChoices(IngeniuxCMService.Fields.GetReferenceChoicesParams)">
            <remarks>From handler: cmsReferences</remarks>
        </member>
        <member name="M:IngeniuxCMService.IEnumerationFieldChoicesServices.GetReferences(IngeniuxCMService.Fields.GetReferencesParams)">
            <remarks>From handler: cmsReferences</remarks>
        </member>
        <member name="F:IngeniuxCMService.Fields.GetReferenceChoicesParams.querySchemas">
            <summary>
            pipe-delimited list
            </summary>
        </member>
        <member name="F:IngeniuxCMService.Fields.GetReferenceChoicesParams.queryLocationRoots">
            <summary>
            pipe-delimited list
            </summary>
        </member>
        <member name="T:IngeniuxCMService.IPasswordServices">
            <summary>
            Services for getting encoded passwords
            </summary>
        </member>
        <member name="M:IngeniuxCMService.IPasswordServices.GetPasswordEncoding(System.String)">
            <remarks>Both input and output are escaped. DO NOT EXPOSE THIS SERVICE!!!</remarks>
        </member>
        <member name="T:IngeniuxCMService.IFindReplaceServices">
            <summary>
            Gets configuration data needed for site start-up.
            </summary>
            <remarks>Includes handlers: getGlobalCustomTabs, getHelpText, getTreeMenuConfig, getToolbarConfig</remarks>
        </member>
        <member name="M:IngeniuxCMService.IFindReplaceServices.Progress(IngeniuxCMService.SearchStartResponse)">
            <summary>
            Checks search progress. If search is ongoing, returns percentage. If finished, returns result.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:IngeniuxCMService.IFindReplaceServices.Cancel(IngeniuxCMService.SearchStartResponse)">
            <summary>
            Cancels a search by ID. If search is cancelled, returns empty listing. If search is already done, returns result.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="M:IngeniuxCMService.IFindReplaceServices.Fix(IngeniuxCMService.FixActionInput)">
            <summary>
            Fixes selected found entries on a given session. If session doesn't exist anymore, throws error.
            Any failed entries have their IDs returned.
            </summary>
            <param name="data"></param>
            <returns></returns>
        </member>
        <member name="T:IngeniuxCMService.GlobalConfigurationsServices">
            <summary>
            Provides the functionality to work with CMS application configurations.
            </summary>
        </member>
        <member name="T:IngeniuxCMService.IGlobalConfigurationsServices">
            <summary>
            Gets configuration data need for site startup.
            </summary>
            <remarks>Includes handlers: getGlobalCustomTabs, getHelpText, getTreeMenuConfig, getToolbarConfig</remarks>
        </member>
        <member name="M:IngeniuxCMService.IGlobalConfigurationsServices.GetGlobalCustomTabs">
            <summary>
            Gets global custom tabs (custom tabs for Apps pane) for current user. It uses ASP.NET session to retrieve user IDs.
            </summary>
            <param name="securityToken"></param>
            <returns></returns>
        </member>
        <member name="M:IngeniuxCMService.IGlobalConfigurationsServices.GetHelpText(System.String)">
            <summary>
            Gets help text for all schemas.
            </summary>
            <param name="securityToken"></param>
            <returns></returns>
        </member>
        <member name="M:IngeniuxCMService.IGlobalConfigurationsServices.GetTreeMenuConfig">
            <summary>
            Gets tree menu configuration for current user. It uses an ASP.NET session to retrieve the user's ID.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IngeniuxCMService.IGlobalConfigurationsServices.GetToolbarConfig">
            <summary>
            Gets toolbar configuration for current user. It uses an ASP.NET session to retrieve the user's ID.
            </summary>
            <param name="securityToken"></param>
            <returns></returns>
        </member>
        <member name="M:IngeniuxCMService.IGlobalConfigurationsServices.GetGlobalExportNames">
            <remarks>Called when adding new local exports on navigation elements.
            The old one returns an XML document with extra information.
            The new one returns a list of global export names. Need to change client script to fit
            this change. From Handler: optionsXml</remarks>
        </member>
        <member name="M:IngeniuxCMService.GlobalConfigurationsServices.GetGlobalCustomTabs">
             <summary>
             Retrieves the list of all global available custom tabs. These tabs will show in "Apps" pane on Ingeniux CMS Client UI.
             </summary>
             <returns>
             <para>
             The array of Custom tabs information entries
             </para>
             <example>
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": [{
            		"name": "Analytics",
            		"id": "CustomTabSettings\/1",
            		"allowPinning": false,
            		"appendPageId": true,
            		"autoSelect": false,
            		"icon": "http:\/\/[your site]\/images\/icons\/default\/analytic16.png",
            		"isGlobal": true,
            		"resourceId": null,
            		"show": false,
            		"url": "http:\/\/[your site]\/analytics\/default.aspx"
            	}]
            }
             ]]>
             </code>
             </example>
             </returns>
        </member>
        <member name="M:IngeniuxCMService.GlobalConfigurationsServices.GetHelpText(System.String)">
             <summary>
             Retrieves the help text index for fields of given schema, or all schemas
             </summary>
             <param name="schemaName">
             <para>Root name of schema. If left empty, will retrieve help text for all field from all schemas</para></param>
             <returns>
             <para>Help text index</para>
             <example>
             Sample JSON return
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": [{
            		"Key": "Folder",
            		"Value": {
            			"attributes": [],
            			"elements": [],
            			"schemaName": "Folder"
            		}
            	}, {
            		"Key": "Image",
            		"Value": {
            			"attributes": [],
            			"elements": [{
            				"Key": "File",
            				"Value": ""
            			}, {
            				"Key": "Thumbnail",
            				"Value": ""
            			}, {
            				"Key": "Height",
            				"Value": ""
            			}, {
            				"Key": "Width",
            				"Value": ""
            			}, {
            				"Key": "AlternateText",
            				"Value": ""
            			}, {
            				"Key": "Alignment",
            				"Value": ""
            			}, {
            				"Key": "Border",
            				"Value": ""
            			}, {
            				"Key": "HSpace",
            				"Value": ""
            			}, {
            				"Key": "VSpace",
            				"Value": ""
            			}, {
            				"Key": "UseMap",
            				"Value": ""
            			}, {
            				"Key": "HREF",
            				"Value": ""
            			}, {
            				"Key": "Target",
            				"Value": ""
            			}, {
            				"Key": "Keywords",
            				"Value": ""
            			}],
            			"schemaName": "Image"
            		}
            	}, {
            		"Key": "Media",
            		"Value": {
            			"attributes": [],
            			"elements": [{
            				"Key": "File",
            				"Value": ""
            			}, {
            				"Key": "URL",
            				"Value": ""
            			}, {
            				"Key": "Description",
            				"Value": ""
            			}],
            			"schemaName": "Media"
            		}
            	}, {
            		"Key": "Navigation",
            		"Value": {
            			"attributes": [],
            			"elements": [{
            				"Key": "xpower",
            				"Value": ""
            			}, {
            				"Key": "Type",
            				"Value": ""
            			}, {
            				"Key": "StartPage",
            				"Value": ""
            			}, {
            				"Key": "MaxDepth",
            				"Value": ""
            			}, {
            				"Key": "MaxNodes",
            				"Value": ""
            			}, {
            				"Key": "GenerationOrder",
            				"Value": ""
            			}, {
            				"Key": "Navigation",
            				"Value": ""
            			}, {
            				"Key": "Exports",
            				"Value": ""
            			}],
            			"schemaName": "Navigation"
            		}
            	}, {
            		"Key": "Home",
            		"Value": {
            			"attributes": [],
            			"elements": [{
            				"Key": "Title",
            				"Value": "网页标题"
            			}, {
            				"Key": "BodyCopy",
            				"Value": "主要内容"
            			}, {
            				"Key": "FeatureImage",
            				"Value": "头条图片"
            			}, {
            				"Key": "SiteControl",
            				"Value": "网站通用内容"
            			}],
            			"schemaName": "Home"
            		}
            	}, {
            		"Key": "BinaryDocument",
            		"Value": {
            			"attributes": [],
            			"elements": [{
            				"Key": "DocumentURL",
            				"Value": ""
            			}, {
            				"Key": "Description",
            				"Value": "Description of the binary file"
            			}, {
            				"Key": "ContentType",
            				"Value": "Mime type of the binary file"
            			}, {
            				"Key": "Keywords",
            				"Value": "Keywords of the binary file for search purpose"
            			}, {
            				"Key": "ContentHash",
            				"Value": ""
            			}],
            			"schemaName": "BinaryDocument"
            		}
            	}]
            }
             ]]>
             </code>
             </example>
             </returns>
             <remarks>
             <para>If there are translations for schemas, the help text will be the translated help text for given schemas, instead of their original help text.</para>
             </remarks>
        </member>
        <member name="M:IngeniuxCMService.GlobalConfigurationsServices.GetTreeMenuConfig">
             <summary>
             Retrieves the configuration for Site Tree context menu. It indicates what commands are available for current user on the Site Tree.
             </summary>
             <returns>
             <para>The collection of commands that current user is allow to carry out. Note that they are available commands. The actual command on specific page node may vary.</para>
             <example>
             Sample JSON return
             <code language="javascript">
             <![CDATA[
            		{
            	"code": 0,
            	"error": null,
            	"message": [{
            		"Caption": "Empty Recycle Folder",
            		"Children": [],
            		"HasSubMenu": false,
            		"Icon": "delete16.png",
            		"IsDisplayed": true,
            		"IsSeparator": false,
            		"Name": "EmptyRecycleFolder"
            	}, {
            		"Caption": "New",
            		"Children": [{
            			"Caption": "Folder",
            			"Children": [],
            			"HasSubMenu": false,
            			"Icon": "folder16.png",
            			"IsDisplayed": true,
            			"IsSeparator": false,
            			"Name": "Folder"
            		}, {
            			"Caption": "",
            			"Children": [],
            			"HasSubMenu": false,
            			"Icon": "",
            			"IsDisplayed": true,
            			"IsSeparator": true,
            			"Name": "Seperator1"
            		}, {
            			"Caption": "Page",
            			"Children": [],
            			"HasSubMenu": false,
            			"Icon": "page16.png",
            			"IsDisplayed": true,
            			"IsSeparator": false,
            			"Name": "Page"
            		}, {
            			"Caption": "Component",
            			"Children": [],
            			"HasSubMenu": false,
            			"Icon": "component16.png",
            			"IsDisplayed": true,
            			"IsSeparator": false,
            			"Name": "Component"
            		}],
            		"HasSubMenu": true,
            		"Icon": "new16.png",
            		"IsDisplayed": true,
            		"IsSeparator": false,
            		"Name": "New"
            	}, {
            		"Caption": "Rename",
            		"Children": [],
            		"HasSubMenu": false,
            		"Icon": "rename16.png",
            		"IsDisplayed": true,
            		"IsSeparator": false,
            		"Name": "Rename"
            	}, {
            		"Caption": "Refresh",
            		"Children": [],
            		"HasSubMenu": false,
            		"Icon": "refresh16.png",
            		"IsDisplayed": true,
            		"IsSeparator": false,
            		"Name": "Refresh"
            	}, {
            		"Caption": "",
            		"Children": [],
            		"HasSubMenu": false,
            		"Icon": "",
            		"IsDisplayed": true,
            		"IsSeparator": true,
            		"Name": "Seperator2"
            	}, {
            		"Caption": "Cut",
            		"Children": [],
            		"HasSubMenu": false,
            		"Icon": "cut16.png",
            		"IsDisplayed": true,
            		"IsSeparator": false,
            		"Name": "Cut"
            	}, {
            		"Caption": "Copy",
            		"Children": [],
            		"HasSubMenu": false,
            		"Icon": "copy16.png",
            		"IsDisplayed": true,
            		"IsSeparator": false,
            		"Name": "Copy"
            	}, {
            		"Caption": "Paste",
            		"Children": [],
            		"HasSubMenu": false,
            		"Icon": "paste16.png",
            		"IsDisplayed": true,
            		"IsSeparator": false,
            		"Name": "Paste"
            	}, {
            		"Caption": "Delete",
            		"Children": [],
            		"HasSubMenu": false,
            		"Icon": "delete16.png",
            		"IsDisplayed": true,
            		"IsSeparator": false,
            		"Name": "Delete"
            	}, {
            		"Caption": "",
            		"Children": [],
            		"HasSubMenu": false,
            		"Icon": "",
            		"IsDisplayed": true,
            		"IsSeparator": true,
            		"Name": "Seperator3"
            	}, {
            		"Caption": "Add to Workflow",
            		"Children": [],
            		"HasSubMenu": false,
            		"Icon": "advance16.png",
            		"IsDisplayed": true,
            		"IsSeparator": false,
            		"Name": "AddToWorkflow"
            	}, {
            		"Caption": "Remove from Workflow",
            		"Children": [],
            		"HasSubMenu": false,
            		"Icon": "revert16.png",
            		"IsDisplayed": true,
            		"IsSeparator": false,
            		"Name": "RemoveFromWorkflow"
            	}, {
            		"Caption": "Assign To...",
            		"Children": [{
            			"Caption": "Me",
            			"Children": [],
            			"HasSubMenu": false,
            			"Icon": "user16.png",
            			"IsDisplayed": true,
            			"IsSeparator": false,
            			"Name": "AssignToMe"
            		}, {
            			"Caption": "User",
            			"Children": [],
            			"HasSubMenu": false,
            			"Icon": "user16.png",
            			"IsDisplayed": true,
            			"IsSeparator": false,
            			"Name": "AssignToUser"
            		}, {
            			"Caption": "Group",
            			"Children": [],
            			"HasSubMenu": false,
            			"Icon": "usergroup16.png",
            			"IsDisplayed": true,
            			"IsSeparator": false,
            			"Name": "AssignToGroup"
            		}],
            		"HasSubMenu": true,
            		"Icon": "assignto16.png",
            		"IsDisplayed": true,
            		"IsSeparator": false,
            		"Name": "AssignTo"
            	}, {
            		"Caption": "Advance",
            		"Children": [],
            		"HasSubMenu": false,
            		"Icon": "advance16.png",
            		"IsDisplayed": true,
            		"IsSeparator": false,
            		"Name": "Advance"
            	}, {
            		"Caption": "Show History",
            		"Children": [],
            		"HasSubMenu": false,
            		"Icon": "differences16.png",
            		"IsDisplayed": true,
            		"IsSeparator": false,
            		"Name": "ShowHistory"
            	}, {
            		"Caption": "Send Mail",
            		"Children": [],
            		"HasSubMenu": false,
            		"Icon": "mailto16.png",
            		"IsDisplayed": true,
            		"IsSeparator": false,
            		"Name": "SendMail"
            	}, {
            		"Caption": "",
            		"Children": [],
            		"HasSubMenu": false,
            		"Icon": "",
            		"IsDisplayed": true,
            		"IsSeparator": true,
            		"Name": "Seperator4"
            	}, {
            		"Caption": "Check Out",
            		"Children": [{
            			"Caption": "Page",
            			"Children": [],
            			"HasSubMenu": false,
            			"Icon": "document16.png",
            			"IsDisplayed": true,
            			"IsSeparator": false,
            			"Name": "CheckOutPage"
            		}, {
            			"Caption": "Page and Children",
            			"Children": [],
            			"HasSubMenu": false,
            			"Icon": "revision16.png",
            			"IsDisplayed": true,
            			"IsSeparator": false,
            			"Name": "CheckOutPageAndChildren"
            		}],
            		"HasSubMenu": true,
            		"Icon": "checkout16.png",
            		"IsDisplayed": true,
            		"IsSeparator": false,
            		"Name": "CheckOut"
            	}, {
            		"Caption": "Check In",
            		"Children": [{
            			"Caption": "Page",
            			"Children": [],
            			"HasSubMenu": false,
            			"Icon": "document16.png",
            			"IsDisplayed": true,
            			"IsSeparator": false,
            			"Name": "CheckInPage"
            		}, {
            			"Caption": "Page and Children",
            			"Children": [],
            			"HasSubMenu": false,
            			"Icon": "revision16.png",
            			"IsDisplayed": true,
            			"IsSeparator": false,
            			"Name": "CheckInPageAndChildren"
            		}],
            		"HasSubMenu": true,
            		"Icon": "checkin16.png",
            		"IsDisplayed": true,
            		"IsSeparator": false,
            		"Name": "CheckIn"
            	}, {
            		"Caption": "Propagate publishes to latest version",
            		"Children": [{
            			"Caption": "Page",
            			"Children": [],
            			"HasSubMenu": false,
            			"Icon": "document16.png",
            			"IsDisplayed": true,
            			"IsSeparator": false,
            			"Name": "PropagateCheckInPage"
            		}, {
            			"Caption": "Page and Children",
            			"Children": [],
            			"HasSubMenu": false,
            			"Icon": "revision16.png",
            			"IsDisplayed": true,
            			"IsSeparator": false,
            			"Name": "PropagateCheckInPageAndChildren"
            		}],
            		"HasSubMenu": true,
            		"Icon": "checkin16.png",
            		"IsDisplayed": true,
            		"IsSeparator": false,
            		"Name": "PropagateCheckIn"
            	}, {
            		"Caption": "Undo Check Out",
            		"Children": [{
            			"Caption": "Page",
            			"Children": [],
            			"HasSubMenu": false,
            			"Icon": "document16.png",
            			"IsDisplayed": true,
            			"IsSeparator": false,
            			"Name": "UndoCheckOutPage"
            		}, {
            			"Caption": "Page and Children",
            			"Children": [],
            			"HasSubMenu": false,
            			"Icon": "revision16.png",
            			"IsDisplayed": true,
            			"IsSeparator": false,
            			"Name": "UndoCheckOutPageAndChildren"
            		}],
            		"HasSubMenu": true,
            		"Icon": "undocheckout16.png",
            		"IsDisplayed": true,
            		"IsSeparator": false,
            		"Name": "UndoCheckOut"
            	}, {
            		"Caption": "Rollback",
            		"Children": [],
            		"HasSubMenu": false,
            		"Icon": "revert16.png",
            		"IsDisplayed": true,
            		"IsSeparator": false,
            		"Name": "Rollback"
            	}, {
            		"Caption": "",
            		"Children": [],
            		"HasSubMenu": false,
            		"Icon": "",
            		"IsDisplayed": true,
            		"IsSeparator": true,
            		"Name": "Seperator5"
            	}, {
            		"Caption": "Mark\/Unmark For Publish",
            		"Children": [{
            			"Caption": "Page",
            			"Children": [],
            			"HasSubMenu": false,
            			"Icon": "document16.png",
            			"IsDisplayed": true,
            			"IsSeparator": false,
            			"Name": "MarkForPublishPage"
            		}, {
            			"Caption": "Page and Children",
            			"Children": [],
            			"HasSubMenu": false,
            			"Icon": "revision16.png",
            			"IsDisplayed": true,
            			"IsSeparator": false,
            			"Name": "MarkForPublishPageAndChildren"
            		}],
            		"HasSubMenu": true,
            		"Icon": "markforpublish16.png",
            		"IsDisplayed": true,
            		"IsSeparator": false,
            		"Name": "MarkForPublish"
            	}, {
            		"Caption": "Preview",
            		"Children": [],
            		"HasSubMenu": false,
            		"Icon": "preview16.png",
            		"IsDisplayed": true,
            		"IsSeparator": false,
            		"Name": "Preview"
            	}, {
            		"Caption": "Publish",
            		"Children": [{
            			"Caption": "Page",
            			"Children": [],
            			"HasSubMenu": false,
            			"Icon": "document16.png",
            			"IsDisplayed": true,
            			"IsSeparator": false,
            			"Name": "PublishPage"
            		}, {
            			"Caption": "Page and Children",
            			"Children": [],
            			"HasSubMenu": false,
            			"Icon": "revision16.png",
            			"IsDisplayed": true,
            			"IsSeparator": false,
            			"Name": "PublishPageAndChildren"
            		}],
            		"HasSubMenu": true,
            		"Icon": "publish16.png",
            		"IsDisplayed": true,
            		"IsSeparator": false,
            		"Name": "Publish"
            	}, {
            		"Caption": "",
            		"Children": [],
            		"HasSubMenu": false,
            		"Icon": "",
            		"IsDisplayed": true,
            		"IsSeparator": true,
            		"Name": "Seperator6"
            	}, {
            		"Caption": "Page Properties",
            		"Children": [],
            		"HasSubMenu": false,
            		"Icon": "page16.png",
            		"IsDisplayed": true,
            		"IsSeparator": false,
            		"Name": "PageProperties"
            	}]
            }
             ]]>
             </code>
             </example>
             </returns>
        </member>
        <member name="M:IngeniuxCMService.GlobalConfigurationsServices.GetToolbarConfig">
             <summary>
             Retrieves the avialable commands for current user to carry out on the user interface toolbar.
             Unlike Site Tree Menu config, toolbar command are not just page level commands.
             </summary>
             <returns>
             The collection of toolbar command information allowed for current user
             <example>
             Sample JSON return
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": [{
            		"name": "Overview",
            		"isDisplayed": true,
            		"isSeparator": false
            	}, {
            		"name": "Save",
            		"isDisplayed": true,
            		"isSeparator": false
            	}, {
            		"name": "separator1",
            		"isDisplayed": true,
            		"isSeparator": true
            	}, {
            		"name": "CheckOut",
            		"isDisplayed": true,
            		"isSeparator": false
            	}, {
            		"name": "Rename",
            		"isDisplayed": true,
            		"isSeparator": false
            	}, {
            		"name": "AssignTo",
            		"isDisplayed": true,
            		"isSeparator": false
            	}, {
            		"name": "Advance",
            		"isDisplayed": true,
            		"isSeparator": false
            	}, {
            		"name": "separator2",
            		"isDisplayed": true,
            		"isSeparator": true
            	}, {
            		"name": "SpellCheck",
            		"isDisplayed": true,
            		"isSeparator": false
            	}, {
            		"name": "separator3",
            		"isDisplayed": true,
            		"isSeparator": true
            	}, {
            		"name": "Refresh",
            		"isDisplayed": true,
            		"isSeparator": false
            	}, {
            		"name": "Preview",
            		"isDisplayed": true,
            		"isSeparator": false
            	}, {
            		"name": "Publish",
            		"isDisplayed": true,
            		"isSeparator": false
            	}, {
            		"name": "separator4",
            		"isDisplayed": true,
            		"isSeparator": true
            	}, {
            		"name": "Assets",
            		"isDisplayed": true,
            		"isSeparator": false
            	}]
            }
             ]]>
             </code>
             </example>
             </returns>
        </member>
        <member name="M:IngeniuxCMService.GlobalConfigurationsServices.GetGlobalExportNames">
             <summary>
             Retrieves the names of global exports. 
             This call should be used to prevent local exports name conflicting with global exports.
             </summary>
             <returns>
             <para>
             Array of global export names. These names will show up as attribute names on all navigation/link entries for page expanded xml. Therefore, it is import that are not no duplicate export name, which will cause invalid expanded xml.
             </para>
             <example>
             Sample JSON return
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": ["Title", "Abstract"]
            }
             ]]>
             </code>
             </example>
             </returns>
        </member>
        <member name="T:Ingeniux.CMS.Handlers.ClientL10NHandler">
            <summary>
            Summary description for ClientL10NHandler.
            </summary>
        </member>
        <member name="M:Ingeniux.CMS.Handlers.ClientL10NHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            This handler is used to provide client side localization resources for DOJO widgets.
            It will accept the locale parameter as querystring and pick the correct locale language pack xml file
            then convert it into JSON string and return it to the client with the content type of javascript
            </summary>
            <param name="context"></param>
        </member>
        <member name="T:Ingeniux.CMS.Handlers.SchemaDownload">
            <summary>
            Summary description for FileDownload
            </summary>
        </member>
        <member name="T:Ingeniux.CMS.Handlers.SchemaUpload">
            <summary>
            Summary description for SchemaUpload
            </summary>
        </member>
        <member name="T:Ingeniux.CMS.Handlers.FileDownloadHandler">
            <summary>
            Summary description for FileDownload.
            </summary>
        </member>
        <member name="T:Ingeniux.CMS.Handlers.ImageManipulationHandler">
            <summary>
            Summary description for ImageManipulationHandler.
            </summary>
        </member>
        <member name="M:Ingeniux.CMS.Handlers.ImageManipulationHandler.saveTempFile(System.Web.HttpContext,System.IO.Stream,System.String,System.DateTime@)">
            <summary>
            Saves the stream to a temporary file and returns its relative URL.
            Also outputs the expiration time.
            </summary>
            <param name="context"></param>
            <param name="imageStream"></param>
            <param name="ext"></param>
            <param name="?"></param>
            <returns></returns>
        </member>
        <member name="T:Ingeniux.CMS.Handlers.SpellChecker">
            <summary>
            Summary description for SpellChecker.
            </summary>
        </member>
        <member name="T:Ingeniux.CMS.Handlers.SWFUploadHandler">
            <summary>
            Summary description for SWFUploadHandler.
            </summary>
        </member>
        <member name="T:IngeniuxCMService.IndexingSearchServices">
            <summary>
            Provides functionality related to full-text search for pages.
            </summary>
        </member>
        <member name="M:IngeniuxCMService.IndexingSearchServices.Search(System.String,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
             <summary>
             Search in pages that match any of the given keywords, with given field name and schema name criterias
             </summary>
             <param name="keywords">The keywords to search for. Please note that pages with matches of any of the keywords will be returned</param>
             <param name="fieldName">
             <para>Narrow down which field to search for on the page</para>
             <remarks>When left empty, search in all page fields</remarks>
             </param>
             <param name="schemaName">
             <para>Narrow down on the schema Root name that page was based on. Only pages with given root name will be search.</para>
             <remarks>When left empty, search all pages</remarks>
             </param>
             <param name="fieldIsAttribute">Specifies the given field is an element or attribute. Only applies when fieldName is specified.</param>
             <param name="useCheckedOutContent">Specifies whether to include page check out content in search. Page check out content will be separate entries.</param>
             <param name="includeVersions">Specifies whether to include previous version of the pages in search.</param>
             <param name="includeRecyled">Specifies whether to allow pages in recycle folder to be included in search.</param>
             <returns>
             <para>Collection of page summaries that matches the given criterias.</para>
             <example>
             Sample JSON return
             <code language="javascript">
             <![CDATA[
             {
            	"code": 0,
            	"error": null,
            	"message": {
            		"MaxScore": 5,
            		"Results": [{
            			"AssignedUserOrGroup": "U|INGENIUX\\awang",
            			"CheckedOut": true,
            			"ID": "x100",
            			"LastModifiedTime": "20140120T18:44:57",
            			"Name": "Default Dynamic Schemas Test",
            			"PageID": "x100",
            			"Rank": 4,
            			"Recycled": false,
            			"Version": 0
            		}, {
            			"AssignedUserOrGroup": "U|INGENIUX\\awang",
            			"CheckedOut": true,
            			"ID": "x87",
            			"LastModifiedTime": "20140121T22:50:04",
            			"Name": "Test",
            			"PageID": "x87",
            			"Rank": 4,
            			"Recycled": false,
            			"Version": 0
            		}]
            	}
            }
             ]]>
             </code>
             </example>
             </returns>
        </member>
        <member name="M:IngeniuxCMService.IndexingSearchServices.GetSchemas">
             <summary>
             Retrieves the site schemas collection. This method will return schemas and their list of fields.
             It's purpose is to provide the schemas/fields listing for advance search selection.
             </summary>
             <returns>
             <para>The collection of schemas and the fields of each schema</para>
             <example>
             Sample JSON return
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": [{
            		"Fields": [],
            		"FriendlyName": "Folder",
            		"Id": "Schema_Folder",
            		"RootElementName": "Folder"
            	}, {
            		"Fields": [{
            			"IsAttribute": false,
            			"Label": "",
            			"Name": "File"
            		}, {
            			"IsAttribute": false,
            			"Label": "",
            			"Name": "Thumbnail"
            		}, {
            			"IsAttribute": false,
            			"Label": "",
            			"Name": "Height"
            		}, {
            			"IsAttribute": false,
            			"Label": "",
            			"Name": "Width"
            		}, {
            			"IsAttribute": false,
            			"Label": "",
            			"Name": "AlternateText"
            		}, {
            			"IsAttribute": false,
            			"Label": "",
            			"Name": "Alignment"
            		}, {
            			"IsAttribute": false,
            			"Label": "",
            			"Name": "Border"
            		}, {
            			"IsAttribute": false,
            			"Label": "",
            			"Name": "HSpace"
            		}, {
            			"IsAttribute": false,
            			"Label": "",
            			"Name": "VSpace"
            		}, {
            			"IsAttribute": false,
            			"Label": "",
            			"Name": "UseMap"
            		}, {
            			"IsAttribute": false,
            			"Label": "",
            			"Name": "HREF"
            		}, {
            			"IsAttribute": false,
            			"Label": "",
            			"Name": "Target"
            		}, {
            			"IsAttribute": false,
            			"Label": "",
            			"Name": "Keywords"
            		}],
            		"FriendlyName": "Image File",
            		"Id": "Schema_Image",
            		"RootElementName": "Image"
            	}, {
            		"Fields": [{
            			"IsAttribute": false,
            			"Label": "",
            			"Name": "File"
            		}, {
            			"IsAttribute": false,
            			"Label": "",
            			"Name": "URL"
            		}, {
            			"IsAttribute": false,
            			"Label": "",
            			"Name": "Description"
            		}],
            		"FriendlyName": "Media File",
            		"Id": "Schema_Media",
            		"RootElementName": "Media"
            	}, {
            		"Fields": [{
            			"IsAttribute": false,
            			"Label": "",
            			"Name": "xpower"
            		}, {
            			"IsAttribute": false,
            			"Label": "",
            			"Name": "Type"
            		}, {
            			"IsAttribute": false,
            			"Label": "Start Page",
            			"Name": "StartPage"
            		}, {
            			"IsAttribute": false,
            			"Label": "Maximum Depth",
            			"Name": "MaxDepth"
            		}, {
            			"IsAttribute": false,
            			"Label": "Maximum Nodes",
            			"Name": "MaxNodes"
            		}, {
            			"IsAttribute": false,
            			"Label": "Generation Order",
            			"Name": "GenerationOrder"
            		}, {
            			"IsAttribute": false,
            			"Label": "",
            			"Name": "Navigation"
            		}, {
            			"IsAttribute": false,
            			"Label": "",
            			"Name": "Exports"
            		}],
            		"FriendlyName": "Navigation",
            		"Id": "Schema_Navigation",
            		"RootElementName": "Navigation"
            	}]
            }
             ]]>
             </code>
             </example>
             </returns>
        </member>
        <member name="T:IngeniuxCMService.SchemaRepresentation">
            <summary>
            This is a simple wrapper of a schema file, including schema name, friendly name, file name, and a list of fields.
            </summary>
        </member>
        <member name="T:IngeniuxCMService.IOverviewServices">
            <summary>
            Overview functionalities.
            </summary>
            <remarks>Covers handlers: getOverview and setUserPrefs</remarks>
        </member>
        <member name="M:IngeniuxCMService.IOverviewServices.GetOverview">
            <summary>
            Gets overview data.
            </summary>
            <param name="securityToken"></param>
            <returns></returns>
            <remarks>The existing overview data retrieval returns XML data, which is inconsistent with the rest of the JSON API. Change it to standard response. Client Javascript must be changed to use JSON data.</remarks>
        </member>
        <member name="M:IngeniuxCMService.IOverviewServices.AddRecent(System.String)">
            <summary>
            Gets a recent page for the current user.
            </summary>
            <param name="pageId"></param>
            <param name="name"></param>
            <param name="icon"></param>
            <param name="securityToken"></param>
            <returns>Always returns true</returns>
            <remarks>Only called from client when a page is loaded for user session.</remarks>
        </member>
        <member name="M:IngeniuxCMService.IOverviewServices.AddFavorite(System.String)">
            <summary>
            Adds a favorite (watched) page entry in user activities.
            </summary>
            <param name="pageId"></param>
            <param name="name"></param>
            <param name="icon"></param>
            <param name="securityToken"></param>
            <returns>Always returns true.</returns>
            <remarks>Only called from client on overview page.</remarks>
        </member>
        <member name="M:IngeniuxCMService.IOverviewServices.RemoveFavorite(System.String)">
            <summary>
            Removes a favorite (watched) page entry in user activities.
            </summary>
            <param name="pageId"></param>
            <param name="name"></param>
            <param name="icon"></param>
            <param name="securityToken"></param>
            <returns>Always returns true.</returns>
            <remarks>Only called from client on overview page.</remarks>
        </member>
        <member name="T:IngeniuxCMService.OverviewServices">
            <summary>
            Provides the functionality to access CMS general information and track current user activities.
            </summary>
        </member>
        <member name="M:IngeniuxCMService.OverviewServices.GetOverview">
            <summary>
            Retrieves the general overview information of both Ingeniux CMS Site information, and current user activities.
            </summary>
            <returns>
            <para>The Ingeniux CMS global and current user information</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "ActiveUsers": {
                        "Error": "",
                        "List": []
                    },
                    "CMSStatistics": {
                        "SiteName": {
                            "Name": "Content Store",
                            "Value": ""
                        },
                        "Statistics": {
                            "Error": "",
                            "List": [{
                                "Name": "Current Pages",
                                "Value": "112"
                            }, {
                                "Name": "Server Version",
                                "Value": "9.0.80"
                            }, {
                                "Name": "Site Version",
                                "Value": "9.0.80"
                            }, {
                                "Name": "Total Users",
                                "Value": "4"
                            }, {
                                "Name": "Database Build",
                                "Value": "2750"
                            }]
                        }
                    },
                    "InProgress": {
                        "Error": "",
                        "List": [{
                            "Icon": 99,
                            "Id": "x32",
                            "Name": "asdfsdf"
                        }, {
                            "Icon": 2,
                            "Id": "x16",
                            "Name": "Sign Up"
                        }, {
                            "Icon": 1,
                            "Id": "x100",
                            "Name": "Default Dynamic Schemas Test"
                        }, {
                            "Icon": 99,
                            "Id": "x18",
                            "Name": "asdfsdf"
                        }, {
                            "Icon": 9,
                            "Id": "x95",
                            "Name": "SOAP"
                        }, {
                            "Icon": 99,
                            "Id": "x29",
                            "Name": "asdfsdf"
                        }, {
                            "Icon": 99,
                            "Id": "x24",
                            "Name": "asdfsdf"
                        }, {
                            "Icon": 99,
                            "Id": "x43",
                            "Name": "asdfsdf"
                        }, {
                            "Icon": 4,
                            "Id": "x96",
                            "Name": "Poll"
                        }, {
                            "Icon": 4,
                            "Id": "x86",
                            "Name": "Insert Test"
                        }, {
                            "Icon": 9,
                            "Id": "x102",
                            "Name": "dbquery"
                        }, {
                            "Icon": 9,
                            "Id": "x101",
                            "Name": "dbquery"
                        }, {
                            "Icon": 99,
                            "Id": "x88",
                            "Name": "adsfdfs"
                        }, {
                            "Icon": 4,
                            "Id": "x98",
                            "Name": "Json - Post with Auth"
                        }, {
                            "Icon": 9,
                            "Id": "x105",
                            "Name": "Emailer"
                        }, {
                            "Icon": 99,
                            "Id": "x17",
                            "Name": "HomeSlider"
                        }, {
                            "Icon": 9,
                            "Id": "x108",
                            "Name": "Soap"
                        }, {
                            "Icon": 99,
                            "Id": "x33",
                            "Name": "HomeSlider"
                        }, {
                            "Icon": 9,
                            "Id": "x103",
                            "Name": "Poll"
                        }, {
                            "Icon": 9,
                            "Id": "x104",
                            "Name": "Json"
                        }, {
                            "Icon": 99,
                            "Id": "x46",
                            "Name": "asdfsdf"
                        }, {
                            "Icon": 9,
                            "Id": "x109",
                            "Name": "soap1.2"
                        }, {
                            "Icon": 4,
                            "Id": "x97",
                            "Name": "Json"
                        }, {
                            "Icon": 9,
                            "Id": "x110",
                            "Name": "CompTest"
                        }, {
                            "Icon": 99,
                            "Id": "x61",
                            "Name": "asdfsdf"
                        }, {
                            "Icon": 99,
                            "Id": "x87",
                            "Name": "Test"
                        }, {
                            "Icon": 99,
                            "Id": "x50",
                            "Name": "asdfsdf"
                        }, {
                            "Icon": 99,
                            "Id": "x51",
                            "Name": "HomeSlider"
                        }, {
                            "Icon": 11,
                            "Id": "x93",
                            "Name": "Email"
                        }, {
                            "Icon": 99,
                            "Id": "x69",
                            "Name": "HomeSlider"
                        }, {
                            "Icon": 1,
                            "Id": "x2",
                            "Name": "Site"
                        }, {
                            "Icon": 9,
                            "Id": "x111",
                            "Name": "CompTest2"
                        }, {
                            "Icon": 1,
                            "Id": "x15",
                            "Name": "Forms"
                        }, {
                            "Icon": 11,
                            "Id": "x92",
                            "Name": "Emailer"
                        }, {
                            "Icon": 4,
                            "Id": "x90",
                            "Name": "DBQuery Test"
                        }, {
                            "Icon": 1,
                            "Id": "x12",
                            "Name": "What We Offer"
                        }, {
                            "Icon": 2,
                            "Id": "x11",
                            "Name": "About Us"
                        }, {
                            "Icon": 99,
                            "Id": "x68",
                            "Name": "asdfsdf"
                        }, {
                            "Icon": 99,
                            "Id": "x112",
                            "Name": "List"
                        }, {
                            "Icon": 3,
                            "Id": "x116",
                            "Name": "zBrush"
                        }, {
                            "Icon": 11,
                            "Id": "x94",
                            "Name": "Emailer"
                        }, {
                            "Icon": 4,
                            "Id": "x91",
                            "Name": "DB Query"
                        }, {
                            "Icon": 8,
                            "Id": "x5",
                            "Name": "Home"
                        }, {
                            "Icon": 99,
                            "Id": "x19",
                            "Name": "SiteControl"
                        }, {
                            "Icon": 99,
                            "Id": "x64",
                            "Name": "asdfsdf"
                        }, {
                            "Icon": 99,
                            "Id": "x79",
                            "Name": "asdfsdf"
                        }, {
                            "Icon": 99,
                            "Id": "x82",
                            "Name": "asdfsdf"
                        }]
                    },
                    "PageCreationRules": {
                        "Error": "",
                        "List": [{
                            "Icon": 3,
                            "Id": "PageCreationRules\/1",
                            "Name": "Image",
                            "Schema": "Image File"
                        }]
                    },
                    "Preferences": {
                        "Error": null,
                        "RecentPages": [{
                            "Icon": 9,
                            "Id": "x102",
                            "Name": "dbquery"
                        }, {
                            "Icon": 9,
                            "Id": "x95",
                            "Name": "SOAP"
                        }, {
                            "Icon": 9,
                            "Id": "x108",
                            "Name": "Soap"
                        }, {
                            "Icon": 9,
                            "Id": "x109",
                            "Name": "soap1.2"
                        }, {
                            "Icon": 9,
                            "Id": "x110",
                            "Name": "CompTest"
                        }, {
                            "Icon": 99,
                            "Id": "x112",
                            "Name": "List"
                        }, {
                            "Icon": 2,
                            "Id": "x9",
                            "Name": "Terms"
                        }, {
                            "Icon": 99,
                            "Id": "x19",
                            "Name": "SiteControl"
                        }, {
                            "Icon": 9,
                            "Id": "x111",
                            "Name": "CompTest2"
                        }, {
                            "Icon": 2,
                            "Id": "x11",
                            "Name": "About Us"
                        }],
                        "WatchedPages": []
                    },
                    "PublishStats": {
                        "Error": "",
                        "List": [{
                            "LastPubDate": "20131211T12:18:55",
                            "Name": "Live",
                            "Value": "14"
                        }, {
                            "LastPubDate": "",
                            "Name": "Staging",
                            "Value": "5"
                        }, {
                            "LastPubDate": "",
                            "Name": "Staging 2",
                            "Value": "0"
                        }]
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.OverviewServices.AddRecent(System.String)">
            <summary>
            Adds a recently visited Page to the Recently Visited Page list for current user
            </summary>
            <param name="pageId">Id of the Page to add to recently visited listing</param>
            <returns>True when added, False if Page doesn't exist</returns>
            <remarks>Ingeniux CMS site keeps 10 entries of recent Pages. The oldest entries will be moved when over this limit.</remarks>
            <remarks>If the page was already in the recent list, it will be moved to the top of the list</remarks>
        </member>
        <member name="M:IngeniuxCMService.OverviewServices.AddFavorite(System.String)">
            <summary>
            Adds a new favorite Page for current user. Favorite Pages are pages user would like to visit frequently.
            </summary>
            <param name="pageId">Id of favorite Page to add</param>
            <returns>True when added, False if Page doesn't exist</returns>
            <remarks>Ingeniux CMS site keeps 10 entries of favorite Pages. The oldest entries will be moved when over this limit.</remarks>
            <remarks>If the page was already in the favorites list, it will be moved to the top of the list</remarks>
        </member>
        <member name="M:IngeniuxCMService.OverviewServices.RemoveFavorite(System.String)">
            <summary>
            Removes a favorite Page entry
            </summary>
            <param name="pageId">Id of the Page to remove from favorites list</param>
            <returns>True if removed, False if Page doesn't exist, or not in the favorites list</returns>
        </member>
        <member name="M:IngeniuxCMService.CMSEmailer.buildAddressString(Ingeniux.CMS.IUserSession,System.String)">
            <summary>
            This method turns user/group IDs into their corresponding email addresses.
            </summary>
            <param name="userGroupIds"></param>
            <returns></returns>
        </member>
        <member name="T:IngeniuxCMService.IPageCommandsServices">
            <summary>
            Page commands
            </summary>
            <remarks>Includes handler: page, pageMarkForPublish, getPageData</remarks>
        </member>
        <member name="M:IngeniuxCMService.IPageCommandsServices.GetEmbedDummyData(System.String,System.String)">
            <summary>
            Returns data for a component element to embed a blank component.
            </summary>
            <param name="pageName"></param>
            <param name="schemaId"></param>
            <returns></returns>
        </member>
        <member name="M:IngeniuxCMService.IPageCommandsServices.Save(System.String,IngeniuxCMService.PageSaveData,System.String)">
            <summary>
            Saves a page.
            </summary>
            <param name="pageId"></param>
            <param name="pageData"></param>
            <returns></returns>
            <remarks>This method needs a fairly complicated input data.</remarks>
        </member>
        <member name="M:IngeniuxCMService.IPageCommandsServices.QuickSearchPage(System.String,System.String,System.Boolean)">
            <remarks>From handler: getPageLookup</remarks>
        </member>
        <member name="M:IngeniuxCMService.IPageCommandsServices.GetPageTranslationData(System.String)">
            <remarks>From handler: getPageTranslationData</remarks>
        </member>
        <member name="M:IngeniuxCMService.IPageCommandsServices.GetPageVersion(System.String,System.Int32,System.Boolean)">
            <remarks>From handler: getPageVersion</remarks>
        </member>
        <member name="M:IngeniuxCMService.IPageCommandsServices.GetVersionHistory(System.String)">
            <remarks>From handler: getPageVersion</remarks>
        </member>
        <member name="M:IngeniuxCMService.IPageCommandsServices.UpdatePageSchema(System.String,System.Boolean)">
            <summary>
            Updates the schema the given page is on. Page must have presentation; otherwise, update is not allowed.
            </summary>
            <param name="pageId"></param>
            <returns>Updated page information</returns>
        </member>
        <member name="M:IngeniuxCMService.IPageCommandsServices.SaveNewSchemaFromPage(System.String,System.String)">
            <summary>
            Creates a new schema based on the page. Page must have presentation; otherwise, new schema creation is not allowed.
            The new schema has the same root name as old schema, but new friendly name.
            </summary>
            <param name="pageId"></param>
            <param name="schemaFriendlyName"></param>
            <returns></returns>
        </member>
        <member name="M:IngeniuxCMService.IPageCommandsServices.GetAllSchemas">
            <summary>
            Gets all schemas, including schema ID and friendly names.
            </summary>
            <returns></returns>
        </member>
        <member name="M:IngeniuxCMService.IPageCommandsServices.GetGlobalVariables">
            <summary>
            Gets the list of Global Variable names, separates into static and dynamic
            </summary>
            <returns></returns>
        </member>
        <member name="F:IngeniuxCMService.PageCommandReturnInformation.pages">
            <summary>
            Return information for command feed in list of page ids
            </summary>
        </member>
        <member name="F:IngeniuxCMService.PageCommandReturnInformation.pageProperties">
            <summary>
            Return information for command only feed in one page id
            </summary>
        </member>
        <member name="F:IngeniuxCMService.PageFieldData.childSchemaName">
            <summary>
            This is for any field that contains an embedded page that can be extracted out.
            So far it is only component
            </summary>
        </member>
        <member name="F:IngeniuxCMService.PagePresentation_GlobalContentUnit.ElementSchemaType">
            <summary>
            The schema type id of the element, not the element type enum, since creating a content unit is from schema field types
            </summary>
        </member>
        <member name="T:IngeniuxCMService.PageCommandsServices">
            <summary>
            Provides functionality to work with page content.
            </summary>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.AddCloneMap(System.String,System.String,System.String)">
            <summary>
            Adds a new Lingual Map between 2 pages.
            </summary>
            <param name="pageId">Id of the Master Page for the new Lingual Map</param>
            <param name="cloneId">Id of the Clone Page ffor the new Lingual Map</param>
            <param name="pubTarget">Current Publishing Target Id</param>
            <returns>
            <para>Information of the Page Command action and the updated properties on the Master Page. Also, returns the newly added Lingual Map</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "contentChanged": false,
                    "pageAction": "addclonemap",
                    "pageProperties": {
                        "name": "zBrush",
                        "allowedCategoryRoots": [],
                        "ancestors": ["x1", "x2", "x112"],
                        "assignedGroup": null,
                        "assignedUser": {
                            "name": "Turtle Master",
                            "email": "",
                            "userId": "INGENIUX\\awang"
                        },
                        "canClaimPage": false,
                        "canTranslate": false,
                        "checkedOut": true,
                        "error": null,
                        "icon": 3,
                        "isAssignedToOtherUser": false,
                        "isEditable": true,
                        "isInWorkflow": false,
                        "justRecycled": false,
                        "languageRootId": "x112",
                        "lingualMaps": {
                            "clones": [{
                                "name": "zBrush",
                                "id": "x121",
                                "locale": "zh-cn"
                            }],
                            "master": null
                        },
                        "locale": "en-us",
                        "localeInherited": true,
                        "markedForPublish": false,
                        "markedForPublishAny": false,
                        "markedForPublishPropagated": false,
                        "nextPageId": null,
                        "nextPageIndex": 0,
                        "noDnd": false,
                        "numChildPages": 0,
                        "pageId": "x119",
                        "parentId": null,
                        "pendingMasterVersion": 0,
                        "referenceProps": {
                            "created": "20140123T23:49:33",
                            "createdBy": "INGENIUX\\awang",
                            "endDate": "00010101T00:00:00",
                            "lastModified": "20140123T23:49:33",
                            "lastModifiedBy": "User\/INGENIUX___awang",
                            "publishAs": "",
                            "startDate": "00010101T00:00:00"
                        },
                        "remoteServer": "",
                        "schemaFriendlyName": "Image File",
                        "schemaName": "Image",
                        "schemaOnLatestVersion": true,
                        "securityLevel": 2,
                        "userCanCopyPage": true,
                        "workflow": null
                    },
                    "pages": null,
                    "queryString": {
                        "assignTargetId": null,
                        "assignToGroup": null,
                        "comment": null,
                        "includeChildren": false,
                        "newPageName": null,
                        "pageAction": "addclonemap",
                        "pageId": "x119",
                        "pageIds": null,
                        "transitionId": null
                    },
                    "returnMessage": {
                        "name": "zBrush",
                        "id": "x121",
                        "locale": "zh-cn"
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>When Master Page or Clone Page doesn't exist, or Master Page already has a Clone Map to the same Locale the new Clone Page has, returns error status.</remarks>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.RemoveCloneMap(System.String,System.String,System.String)">
            <summary>
            Removes a Lingual Map which has the Clone Page's Id matching given clone Id.
            </summary>
            <param name="pageId">The Id of the Page to return updated information on.</param>
            <param name="cloneId">The Id of the Clone Page to remove Clone Lingual Map for.</param>
            <param name="pubTarget">>Current Publishing Target Id</param>
            <returns>
            <para>Information of the Page Command action and the updated properties on the Page with its Id matching the given page id.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "contentChanged": false,
                    "pageAction": "removeclonemap",
                    "pageProperties": {
                        "name": "zBrush",
                        "allowedCategoryRoots": [],
                        "ancestors": ["x1", "x2", "x112"],
                        "assignedGroup": null,
                        "assignedUser": {
                            "name": "Turtle Master",
                            "email": "",
                            "userId": "INGENIUX\\awang"
                        },
                        "canClaimPage": false,
                        "canTranslate": false,
                        "checkedOut": true,
                        "error": null,
                        "icon": 3,
                        "isAssignedToOtherUser": false,
                        "isEditable": true,
                        "isInWorkflow": false,
                        "justRecycled": false,
                        "languageRootId": "x112",
                        "lingualMaps": {
                            "clones": [],
                            "master": null
                        },
                        "locale": "en-us",
                        "localeInherited": true,
                        "markedForPublish": false,
                        "markedForPublishAny": false,
                        "markedForPublishPropagated": false,
                        "nextPageId": null,
                        "nextPageIndex": 0,
                        "noDnd": false,
                        "numChildPages": 0,
                        "pageId": "x119",
                        "parentId": null,
                        "pendingMasterVersion": 0,
                        "referenceProps": {
                            "created": "20140123T23:49:33",
                            "createdBy": "INGENIUX\\awang",
                            "endDate": "00010101T00:00:00",
                            "lastModified": "20140123T23:49:33",
                            "lastModifiedBy": "User\/INGENIUX___awang",
                            "publishAs": "",
                            "startDate": "00010101T00:00:00"
                        },
                        "remoteServer": "",
                        "schemaFriendlyName": "Image File",
                        "schemaName": "Image",
                        "schemaOnLatestVersion": true,
                        "securityLevel": 2,
                        "userCanCopyPage": true,
                        "workflow": null
                    },
                    "pages": null,
                    "queryString": {
                        "assignTargetId": null,
                        "assignToGroup": null,
                        "comment": null,
                        "includeChildren": false,
                        "newPageName": null,
                        "pageAction": "removeclonemap",
                        "pageId": "x121",
                        "pageIds": null,
                        "transitionId": null
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.AddToWorkflow(System.String[],System.String,System.String)">
            <summary>
            Adds the given Pages to Workflow, with specified Workflow Definition.
            </summary>
            <param name="pageIds">Array of Id of Pages to add to Workflow</param>
            <param name="wfDefId">Id of the Workflow Definition</param>
            <param name="pubTarget">Current Publishing Target Id</param>
            <returns>
            <para>Information of the Page Command action and the properties of updated Pages</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "contentChanged": false,
                    "pageAction": "addtoworkflow",
                    "pageProperties": {
                        "name": "Home",
                        "allowedCategoryRoots": [],
                        "ancestors": ["x1", "x2"],
                        "assignedGroup": {
                            "name": "Authors",
                            "canClaimPage": false,
                            "groupId": "UserGroup\/2"
                        },
                        "assignedUser": null,
                        "canClaimPage": false,
                        "canTranslate": false,
                        "checkedOut": false,
                        "error": null,
                        "icon": 7,
                        "isAssignedToOtherUser": true,
                        "isEditable": false,
                        "isInWorkflow": true,
                        "justRecycled": false,
                        "languageRootId": "",
                        "lingualMaps": {
                            "clones": [],
                            "master": null
                        },
                        "locale": "",
                        "localeInherited": true,
                        "markedForPublish": true,
                        "markedForPublishAny": true,
                        "markedForPublishPropagated": true,
                        "nextPageId": null,
                        "nextPageIndex": 0,
                        "noDnd": false,
                        "numChildPages": 9,
                        "pageId": "x11",
                        "parentId": null,
                        "pendingMasterVersion": 0,
                        "referenceProps": {
                            "created": "20081117T07:28:18",
                            "createdBy": "ingeniux\\ashley",
                            "endDate": "99991231T23:59:59",
                            "lastModified": "20140124T23:15:18",
                            "lastModifiedBy": "User\/ingeniux___awang",
                            "publishAs": "",
                            "startDate": "00010101T00:00:00"
                        },
                        "remoteServer": "",
                        "schemaFriendlyName": null,
                        "schemaName": "Home",
                        "schemaOnLatestVersion": false,
                        "securityLevel": 2,
                        "userCanCopyPage": true,
                        "workflow": null
                    },
                    "pages": [{
                        "id": "x11",
                        "props": {
                            "name": "Home",
                            "allowedCategoryRoots": [],
                            "ancestors": ["x1", "x2"],
                            "assignedGroup": {
                                "name": "Authors",
                                "canClaimPage": false,
                                "groupId": "UserGroup\/2"
                            },
                            "assignedUser": null,
                            "canClaimPage": false,
                            "canTranslate": false,
                            "checkedOut": false,
                            "error": null,
                            "icon": 7,
                            "isAssignedToOtherUser": true,
                            "isEditable": false,
                            "isInWorkflow": true,
                            "justRecycled": false,
                            "languageRootId": "",
                            "lingualMaps": {
                                "clones": [],
                                "master": null
                            },
                            "locale": "",
                            "localeInherited": true,
                            "markedForPublish": true,
                            "markedForPublishAny": true,
                            "markedForPublishPropagated": true,
                            "nextPageId": null,
                            "nextPageIndex": 0,
                            "noDnd": false,
                            "numChildPages": 9,
                            "pageId": "x11",
                            "parentId": null,
                            "pendingMasterVersion": 0,
                            "referenceProps": {
                                "created": "20081117T07:28:18",
                                "createdBy": "ingeniux\\ashley",
                                "endDate": "99991231T23:59:59",
                                "lastModified": "20140124T23:15:18",
                                "lastModifiedBy": "User\/ingeniux___awang",
                                "publishAs": "",
                                "startDate": "00010101T00:00:00"
                            },
                            "remoteServer": "",
                            "schemaFriendlyName": null,
                            "schemaName": "Home",
                            "schemaOnLatestVersion": false,
                            "securityLevel": 2,
                            "userCanCopyPage": true,
                            "workflow": null
                        }
                    }],
                    "queryString": {
                        "assignTargetId": null,
                        "assignToGroup": null,
                        "comment": null,
                        "includeChildren": false,
                        "newPageName": null,
                        "pageAction": null,
                        "pageId": null,
                        "pageIds": null,
                        "transitionId": null
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>Page properties in return message will indicate page in Workflow if advancement is successful, but detailed Workflow information will not be included</para>
            <para>Error status will be returned, if Workflow Definition doesn't exist. Also, if a Page was already in Workflow, it will be removed from current Workflow and added to the new one.</para></remarks>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.RemoveFromWorkflow(System.String[],System.String)">
            <summary>
            Removes Pages from their current Workflow
            </summary>
            <param name="pageIds">Array of Id of Pages to be removed from their Workflows</param>
            <param name="pubTarget">Id of Current Publishing Target</param>
            <returns>
            <para>Information of the Page Command action and the properties of updated Pages</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "contentChanged": false,
                    "pageAction": "removefromworkflow",
                    "pageProperties": {
                        "name": "Home",
                        "allowedCategoryRoots": [],
                        "ancestors": ["x1", "x2"],
                        "assignedGroup": null,
                        "assignedUser": null,
                        "canClaimPage": false,
                        "canTranslate": false,
                        "checkedOut": false,
                        "error": null,
                        "icon": 7,
                        "isAssignedToOtherUser": false,
                        "isEditable": false,
                        "isInWorkflow": false,
                        "justRecycled": false,
                        "languageRootId": "",
                        "lingualMaps": {
                            "clones": [],
                            "master": null
                        },
                        "locale": "",
                        "localeInherited": true,
                        "markedForPublish": true,
                        "markedForPublishAny": true,
                        "markedForPublishPropagated": true,
                        "nextPageId": null,
                        "nextPageIndex": 0,
                        "noDnd": false,
                        "numChildPages": 9,
                        "pageId": "x11",
                        "parentId": null,
                        "pendingMasterVersion": 0,
                        "referenceProps": {
                            "created": "20081117T07:28:18",
                            "createdBy": "ingeniux\\ashley",
                            "endDate": "99991231T23:59:59",
                            "lastModified": "20140124T23:22:10",
                            "lastModifiedBy": "User\/ingeniux___awang",
                            "publishAs": "",
                            "startDate": "00010101T00:00:00"
                        },
                        "remoteServer": "",
                        "schemaFriendlyName": null,
                        "schemaName": "Home",
                        "schemaOnLatestVersion": false,
                        "securityLevel": 2,
                        "userCanCopyPage": true,
                        "workflow": null
                    },
                    "pages": [{
                        "id": "x11",
                        "props": {
                            "name": "Home",
                            "allowedCategoryRoots": [],
                            "ancestors": ["x1", "x2"],
                            "assignedGroup": null,
                            "assignedUser": null,
                            "canClaimPage": false,
                            "canTranslate": false,
                            "checkedOut": false,
                            "error": null,
                            "icon": 7,
                            "isAssignedToOtherUser": false,
                            "isEditable": false,
                            "isInWorkflow": false,
                            "justRecycled": false,
                            "languageRootId": "",
                            "lingualMaps": {
                                "clones": [],
                                "master": null
                            },
                            "locale": "",
                            "localeInherited": true,
                            "markedForPublish": true,
                            "markedForPublishAny": true,
                            "markedForPublishPropagated": true,
                            "nextPageId": null,
                            "nextPageIndex": 0,
                            "noDnd": false,
                            "numChildPages": 9,
                            "pageId": "x11",
                            "parentId": null,
                            "pendingMasterVersion": 0,
                            "referenceProps": {
                                "created": "20081117T07:28:18",
                                "createdBy": "ingeniux\\ashley",
                                "endDate": "99991231T23:59:59",
                                "lastModified": "20140124T23:22:10",
                                "lastModifiedBy": "User\/ingeniux___awang",
                                "publishAs": "",
                                "startDate": "00010101T00:00:00"
                            },
                            "remoteServer": "",
                            "schemaFriendlyName": null,
                            "schemaName": "Home",
                            "schemaOnLatestVersion": false,
                            "securityLevel": 2,
                            "userCanCopyPage": true,
                            "workflow": null
                        }
                    }],
                    "queryString": {
                        "assignTargetId": null,
                        "assignToGroup": null,
                        "comment": null,
                        "includeChildren": false,
                        "newPageName": null,
                        "pageAction": null,
                        "pageId": null,
                        "pageIds": null,
                        "transitionId": null
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.Advance(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Advances a Page in Workflow via specified transition.
            </summary>
            <param name="pageId">Id of Page to advance in workflow</param>
            <param name="transitionId">Id of the transition to use in advancement</param>
            <param name="assignTargetId">User Id to assign the Page to after advancement</param>
            <param name="pubTarget">Id of current Publishing Target</param>
            <param name="comment">Comment to be record for this advancement in Workflow Log</param>
            <returns>
            <para>Information of the Page Command action and the properties of updated Pages</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "contentChanged": false,
                    "pageAction": "addtoworkflow",
                    "pageProperties": {
                        "name": "Home",
                        "allowedCategoryRoots": [],
                        "ancestors": ["x1", "x2"],
                        "assignedGroup": {
                            "name": "Authors",
                            "canClaimPage": false,
                            "groupId": "UserGroup\/2"
                        },
                        "assignedUser": null,
                        "canClaimPage": false,
                        "canTranslate": false,
                        "checkedOut": false,
                        "error": null,
                        "icon": 7,
                        "isAssignedToOtherUser": true,
                        "isEditable": false,
                        "isInWorkflow": true,
                        "justRecycled": false,
                        "languageRootId": "",
                        "lingualMaps": {
                            "clones": [],
                            "master": null
                        },
                        "locale": "",
                        "localeInherited": true,
                        "markedForPublish": true,
                        "markedForPublishAny": true,
                        "markedForPublishPropagated": true,
                        "nextPageId": null,
                        "nextPageIndex": 0,
                        "noDnd": false,
                        "numChildPages": 9,
                        "pageId": "x11",
                        "parentId": null,
                        "pendingMasterVersion": 0,
                        "referenceProps": {
                            "created": "20081117T07:28:18",
                            "createdBy": "ingeniux\\ashley",
                            "endDate": "99991231T23:59:59",
                            "lastModified": "20140124T23:15:18",
                            "lastModifiedBy": "User\/ingeniux___awang",
                            "publishAs": "",
                            "startDate": "00010101T00:00:00"
                        },
                        "remoteServer": "",
                        "schemaFriendlyName": null,
                        "schemaName": "Home",
                        "schemaOnLatestVersion": false,
                        "securityLevel": 2,
                        "userCanCopyPage": true,
                        "workflow": null
                    },
                    "pages": [{
                        "id": "x11",
                        "props": {
                            "name": "Home",
                            "allowedCategoryRoots": [],
                            "ancestors": ["x1", "x2"],
                            "assignedGroup": {
                                "name": "Authors",
                                "canClaimPage": false,
                                "groupId": "UserGroup\/2"
                            },
                            "assignedUser": null,
                            "canClaimPage": false,
                            "canTranslate": false,
                            "checkedOut": false,
                            "error": null,
                            "icon": 7,
                            "isAssignedToOtherUser": true,
                            "isEditable": false,
                            "isInWorkflow": true,
                            "justRecycled": false,
                            "languageRootId": "",
                            "lingualMaps": {
                                "clones": [],
                                "master": null
                            },
                            "locale": "",
                            "localeInherited": true,
                            "markedForPublish": true,
                            "markedForPublishAny": true,
                            "markedForPublishPropagated": true,
                            "nextPageId": null,
                            "nextPageIndex": 0,
                            "noDnd": false,
                            "numChildPages": 9,
                            "pageId": "x11",
                            "parentId": null,
                            "pendingMasterVersion": 0,
                            "referenceProps": {
                                "created": "20081117T07:28:18",
                                "createdBy": "ingeniux\\ashley",
                                "endDate": "99991231T23:59:59",
                                "lastModified": "20140124T23:15:18",
                                "lastModifiedBy": "User\/ingeniux___awang",
                                "publishAs": "",
                                "startDate": "00010101T00:00:00"
                            },
                            "remoteServer": "",
                            "schemaFriendlyName": null,
                            "schemaName": "Home",
                            "schemaOnLatestVersion": false,
                            "securityLevel": 2,
                            "userCanCopyPage": true,
                            "workflow": null
                        }
                    }],
                    "queryString": {
                        "assignTargetId": null,
                        "assignToGroup": null,
                        "comment": null,
                        "includeChildren": false,
                        "newPageName": null,
                        "pageAction": null,
                        "pageId": null,
                        "pageIds": null,
                        "transitionId": null
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Page doesn't exist, or Page is not in Workflow, returns error status</para>
            <para>If transtion id is not provided, or transition doesn't exist, Workflow use the default transition from current state to advance. If current Work State has to transitions available, returns error status.</para>
            <para>If assign target User Id if not specified, will try to assign to transition's next default user. If next default user is not specified, will assign page to next user group.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.MassAdvance(System.String[],System.String,System.String,System.String,System.String)">
            <summary>
            Advances multiple Pages that are at the Workstates that have the specified transition available.
            </summary>
            <param name="pageIds">Ids of Pages to be advanced</param>
            <param name="transitionId">Id of the transition</param>
            <param name="assignTargetId">Id of the user to assign the pages to</param>
            <param name="comment">Comment to be record for this advancement in Workflow Log</param>
            <returns>
            <para>Information of the Page Command action and the properties of updated Pages</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "contentChanged": false,
                    "pageAction": "addtoworkflow",
                    "pageProperties": {
                        "name": "Home",
                        "allowedCategoryRoots": [],
                        "ancestors": ["x1", "x2"],
                        "assignedGroup": {
                            "name": "Authors",
                            "canClaimPage": false,
                            "groupId": "UserGroup\/2"
                        },
                        "assignedUser": null,
                        "canClaimPage": false,
                        "canTranslate": false,
                        "checkedOut": false,
                        "error": null,
                        "icon": 7,
                        "isAssignedToOtherUser": true,
                        "isEditable": false,
                        "isInWorkflow": true,
                        "justRecycled": false,
                        "languageRootId": "",
                        "lingualMaps": {
                            "clones": [],
                            "master": null
                        },
                        "locale": "",
                        "localeInherited": true,
                        "markedForPublish": true,
                        "markedForPublishAny": true,
                        "markedForPublishPropagated": true,
                        "nextPageId": null,
                        "nextPageIndex": 0,
                        "noDnd": false,
                        "numChildPages": 9,
                        "pageId": "x11",
                        "parentId": null,
                        "pendingMasterVersion": 0,
                        "referenceProps": {
                            "created": "20081117T07:28:18",
                            "createdBy": "ingeniux\\ashley",
                            "endDate": "99991231T23:59:59",
                            "lastModified": "20140124T23:15:18",
                            "lastModifiedBy": "User\/ingeniux___awang",
                            "publishAs": "",
                            "startDate": "00010101T00:00:00"
                        },
                        "remoteServer": "",
                        "schemaFriendlyName": null,
                        "schemaName": "Home",
                        "schemaOnLatestVersion": false,
                        "securityLevel": 2,
                        "userCanCopyPage": true,
                        "workflow": null
                    },
                    "pages": [{
                        "id": "x11",
                        "props": {
                            "name": "Home",
                            "allowedCategoryRoots": [],
                            "ancestors": ["x1", "x2"],
                            "assignedGroup": {
                                "name": "Authors",
                                "canClaimPage": false,
                                "groupId": "UserGroup\/2"
                            },
                            "assignedUser": null,
                            "canClaimPage": false,
                            "canTranslate": false,
                            "checkedOut": false,
                            "error": null,
                            "icon": 7,
                            "isAssignedToOtherUser": true,
                            "isEditable": false,
                            "isInWorkflow": true,
                            "justRecycled": false,
                            "languageRootId": "",
                            "lingualMaps": {
                                "clones": [],
                                "master": null
                            },
                            "locale": "",
                            "localeInherited": true,
                            "markedForPublish": true,
                            "markedForPublishAny": true,
                            "markedForPublishPropagated": true,
                            "nextPageId": null,
                            "nextPageIndex": 0,
                            "noDnd": false,
                            "numChildPages": 9,
                            "pageId": "x11",
                            "parentId": null,
                            "pendingMasterVersion": 0,
                            "referenceProps": {
                                "created": "20081117T07:28:18",
                                "createdBy": "ingeniux\\ashley",
                                "endDate": "99991231T23:59:59",
                                "lastModified": "20140124T23:15:18",
                                "lastModifiedBy": "User\/ingeniux___awang",
                                "publishAs": "",
                                "startDate": "00010101T00:00:00"
                            },
                            "remoteServer": "",
                            "schemaFriendlyName": null,
                            "schemaName": "Home",
                            "schemaOnLatestVersion": false,
                            "securityLevel": 2,
                            "userCanCopyPage": true,
                            "workflow": null
                        }
                    }],
                    "queryString": {
                        "assignTargetId": null,
                        "assignToGroup": null,
                        "comment": null,
                        "includeChildren": false,
                        "newPageName": null,
                        "pageAction": null,
                        "pageId": null,
                        "pageIds": null,
                        "transitionId": null
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Page doesn't exist, or Page is not in Workflow, returns error status</para>
            <para>The Pages needs to be on the same Workflow, but don't have to be on the same Workf State, as long as the transition is available from that state. If not, error will be returned and all advancements will be cancelled.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.Assign(System.String[],System.String,System.Boolean,System.String,System.String)">
            <summary>
            Assigned a list of Pages to specified User or Group
            </summary>
            <param name="pageIds">Ids of Pages to be assigned</param>
            <param name="assignTargetId">Id of User or User Group to assign the Pages to</param>
            <param name="assignToGroup">Whether the specified Id is of User or User Group</param>
            <param name="comment">Comment for Assignment</param>
            <param name="pubTarget">Id of current Publishing Target</param>
            <returns>
            <para>Information of the Page Command action and the properties of updated Pages</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "contentChanged": false,
                    "pageAction": "addtoworkflow",
                    "pageProperties": {
                        "name": "Home",
                        "allowedCategoryRoots": [],
                        "ancestors": ["x1", "x2"],
                        "assignedGroup": {
                            "name": "Authors",
                            "canClaimPage": false,
                            "groupId": "UserGroup\/2"
                        },
                        "assignedUser": null,
                        "canClaimPage": false,
                        "canTranslate": false,
                        "checkedOut": false,
                        "error": null,
                        "icon": 7,
                        "isAssignedToOtherUser": true,
                        "isEditable": false,
                        "isInWorkflow": true,
                        "justRecycled": false,
                        "languageRootId": "",
                        "lingualMaps": {
                            "clones": [],
                            "master": null
                        },
                        "locale": "",
                        "localeInherited": true,
                        "markedForPublish": true,
                        "markedForPublishAny": true,
                        "markedForPublishPropagated": true,
                        "nextPageId": null,
                        "nextPageIndex": 0,
                        "noDnd": false,
                        "numChildPages": 9,
                        "pageId": "x11",
                        "parentId": null,
                        "pendingMasterVersion": 0,
                        "referenceProps": {
                            "created": "20081117T07:28:18",
                            "createdBy": "ingeniux\\ashley",
                            "endDate": "99991231T23:59:59",
                            "lastModified": "20140124T23:15:18",
                            "lastModifiedBy": "User\/ingeniux___awang",
                            "publishAs": "",
                            "startDate": "00010101T00:00:00"
                        },
                        "remoteServer": "",
                        "schemaFriendlyName": null,
                        "schemaName": "Home",
                        "schemaOnLatestVersion": false,
                        "securityLevel": 2,
                        "userCanCopyPage": true,
                        "workflow": null
                    },
                    "pages": [{
                        "id": "x11",
                        "props": {
                            "name": "Home",
                            "allowedCategoryRoots": [],
                            "ancestors": ["x1", "x2"],
                            "assignedGroup": {
                                "name": "Authors",
                                "canClaimPage": false,
                                "groupId": "UserGroup\/2"
                            },
                            "assignedUser": null,
                            "canClaimPage": false,
                            "canTranslate": false,
                            "checkedOut": false,
                            "error": null,
                            "icon": 7,
                            "isAssignedToOtherUser": true,
                            "isEditable": false,
                            "isInWorkflow": true,
                            "justRecycled": false,
                            "languageRootId": "",
                            "lingualMaps": {
                                "clones": [],
                                "master": null
                            },
                            "locale": "",
                            "localeInherited": true,
                            "markedForPublish": true,
                            "markedForPublishAny": true,
                            "markedForPublishPropagated": true,
                            "nextPageId": null,
                            "nextPageIndex": 0,
                            "noDnd": false,
                            "numChildPages": 9,
                            "pageId": "x11",
                            "parentId": null,
                            "pendingMasterVersion": 0,
                            "referenceProps": {
                                "created": "20081117T07:28:18",
                                "createdBy": "ingeniux\\ashley",
                                "endDate": "99991231T23:59:59",
                                "lastModified": "20140124T23:15:18",
                                "lastModifiedBy": "User\/ingeniux___awang",
                                "publishAs": "",
                                "startDate": "00010101T00:00:00"
                            },
                            "remoteServer": "",
                            "schemaFriendlyName": null,
                            "schemaName": "Home",
                            "schemaOnLatestVersion": false,
                            "securityLevel": 2,
                            "userCanCopyPage": true,
                            "workflow": null
                        }
                    }],
                    "queryString": {
                        "assignTargetId": null,
                        "assignToGroup": null,
                        "comment": null,
                        "includeChildren": false,
                        "newPageName": null,
                        "pageAction": null,
                        "pageId": null,
                        "pageIds": null,
                        "transitionId": null
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If any Pages don't exist, returns error</para>
            <para>If assign target id is not specified, Pages will be unassigned. However, it it is specified, but the User or User Group doesn't exist, returns error.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.CheckIn(System.String[],System.Boolean,IngeniuxCMService.PublishMarking,System.String)">
            <summary>
            Checks in specified Pages, which publish-marking information
            </summary>
            <param name="pageIds">Ids of Pages to be checked in.</param>
            <param name="includeChildren">Whether or not to check in the descendants of specified Pages</param>
            <param name="publishMarking">
            <para>
            Publish Marking information. We can specified which Publishing Target will be marked for the Page's latest version after check in. Marked Targets not listed will use the previous version.
            </para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
                {
                    "profileSelected": true,
                    "profile": {
                        "id": "custom",
                        "name": ""
                    },
                    "pubTargets": [{
                        "id": "PublishingTargets/1",
                        "name": "Live"
                    }]
                }
            ]]>
            </code>
            </example>
            </param>
            <param name="pubTarget">Id of current Publishing Target</param>
            <returns>
            <para>Information of the Page Command action and the properties of updated Pages</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "contentChanged": false,
                    "pageAction": "checkin",
                    "pageProperties": {
                        "name": "Home",
                        "allowedCategoryRoots": [],
                        "ancestors": ["x1", "x2"],
                        "assignedGroup": null,
                        "assignedUser": null,
                        "canClaimPage": false,
                        "canTranslate": false,
                        "checkedOut": false,
                        "error": null,
                        "icon": 8,
                        "isAssignedToOtherUser": false,
                        "isEditable": false,
                        "isInWorkflow": false,
                        "justRecycled": false,
                        "languageRootId": "",
                        "lingualMaps": {
                            "clones": [],
                            "master": null
                        },
                        "locale": "",
                        "localeInherited": true,
                        "markedForPublish": true,
                        "markedForPublishAny": true,
                        "markedForPublishPropagated": true,
                        "nextPageId": null,
                        "nextPageIndex": 0,
                        "noDnd": false,
                        "numChildPages": 4,
                        "pageId": "x5",
                        "parentId": null,
                        "pendingMasterVersion": 0,
                        "referenceProps": {
                            "created": "20131207T00:07:46",
                            "createdBy": "INGENIUX\\awang",
                            "endDate": "00010101T00:00:00",
                            "lastModified": "20140125T00:44:51",
                            "lastModifiedBy": "User\/INGENIUX___awang",
                            "publishAs": "",
                            "startDate": "00010101T00:00:00"
                        },
                        "remoteServer": "",
                        "schemaFriendlyName": null,
                        "schemaName": "Home",
                        "schemaOnLatestVersion": false,
                        "securityLevel": 2,
                        "userCanCopyPage": true,
                        "workflow": null
                    },
                    "pages": [{
                        "id": "x5",
                        "props": {
                            "name": "Home",
                            "allowedCategoryRoots": [],
                            "ancestors": ["x1", "x2"],
                            "assignedGroup": null,
                            "assignedUser": null,
                            "canClaimPage": false,
                            "canTranslate": false,
                            "checkedOut": false,
                            "error": null,
                            "icon": 8,
                            "isAssignedToOtherUser": false,
                            "isEditable": false,
                            "isInWorkflow": false,
                            "justRecycled": false,
                            "languageRootId": "",
                            "lingualMaps": {
                                "clones": [],
                                "master": null
                            },
                            "locale": "",
                            "localeInherited": true,
                            "markedForPublish": true,
                            "markedForPublishAny": true,
                            "markedForPublishPropagated": true,
                            "nextPageId": null,
                            "nextPageIndex": 0,
                            "noDnd": false,
                            "numChildPages": 4,
                            "pageId": "x5",
                            "parentId": null,
                            "pendingMasterVersion": 0,
                            "referenceProps": {
                                "created": "20131207T00:07:46",
                                "createdBy": "INGENIUX\\awang",
                                "endDate": "00010101T00:00:00",
                                "lastModified": "20140125T00:44:51",
                                "lastModifiedBy": "User\/INGENIUX___awang",
                                "publishAs": "",
                                "startDate": "00010101T00:00:00"
                            },
                            "remoteServer": "",
                            "schemaFriendlyName": null,
                            "schemaName": "Home",
                            "schemaOnLatestVersion": false,
                            "securityLevel": 2,
                            "userCanCopyPage": true,
                            "workflow": null
                        }
                    }],
                    "queryString": {
                        "assignTargetId": null,
                        "assignToGroup": null,
                        "comment": null,
                        "includeChildren": false,
                        "newPageName": null,
                        "pageAction": null,
                        "pageId": null,
                        "pageIds": null,
                        "transitionId": null
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.CheckOut(System.String[],System.Boolean,System.String)">
            <summary>
            Checks out a list of Pages to current user
            </summary>
            <param name="pageIds">Ids of the Pages to check out</param>
            <param name="includeChildren">Whether or not to also check out the descendants of the Pages</param>
            <param name="pubTarget">Id of current Publishing Target</param>
            <returns>
            <para>Information of the Page Command action and the properties of updated Pages</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "contentChanged": false,
                    "pageAction": "checkout",
                    "pageProperties": {
                        "name": "Home",
                        "allowedCategoryRoots": [],
                        "ancestors": ["x1", "x2"],
                        "assignedGroup": null,
                        "assignedUser": {
                            "name": "Turtle Master",
                            "email": "",
                            "userId": "INGENIUX\\awang"
                        },
                        "canClaimPage": false,
                        "canTranslate": false,
                        "checkedOut": true,
                        "error": null,
                        "icon": 8,
                        "isAssignedToOtherUser": false,
                        "isEditable": true,
                        "isInWorkflow": false,
                        "justRecycled": false,
                        "languageRootId": "",
                        "lingualMaps": {
                            "clones": [],
                            "master": null
                        },
                        "locale": "",
                        "localeInherited": true,
                        "markedForPublish": true,
                        "markedForPublishAny": true,
                        "markedForPublishPropagated": true,
                        "nextPageId": null,
                        "nextPageIndex": 0,
                        "noDnd": false,
                        "numChildPages": 4,
                        "pageId": "x5",
                        "parentId": null,
                        "pendingMasterVersion": 0,
                        "referenceProps": {
                            "created": "20131207T00:07:46",
                            "createdBy": "INGENIUX\\awang",
                            "endDate": "00010101T00:00:00",
                            "lastModified": "20140125T01:04:19",
                            "lastModifiedBy": "User\/INGENIUX___awang",
                            "publishAs": "",
                            "startDate": "00010101T00:00:00"
                        },
                        "remoteServer": "",
                        "schemaFriendlyName": null,
                        "schemaName": "Home",
                        "schemaOnLatestVersion": false,
                        "securityLevel": 2,
                        "userCanCopyPage": true,
                        "workflow": null
                    },
                    "pages": [{
                        "id": "x5",
                        "props": {
                            "name": "Home",
                            "allowedCategoryRoots": [],
                            "ancestors": ["x1", "x2"],
                            "assignedGroup": null,
                            "assignedUser": {
                                "name": "Turtle Master",
                                "email": "",
                                "userId": "INGENIUX\\awang"
                            },
                            "canClaimPage": false,
                            "canTranslate": false,
                            "checkedOut": true,
                            "error": null,
                            "icon": 8,
                            "isAssignedToOtherUser": false,
                            "isEditable": true,
                            "isInWorkflow": false,
                            "justRecycled": false,
                            "languageRootId": "",
                            "lingualMaps": {
                                "clones": [],
                                "master": null
                            },
                            "locale": "",
                            "localeInherited": true,
                            "markedForPublish": true,
                            "markedForPublishAny": true,
                            "markedForPublishPropagated": true,
                            "nextPageId": null,
                            "nextPageIndex": 0,
                            "noDnd": false,
                            "numChildPages": 4,
                            "pageId": "x5",
                            "parentId": null,
                            "pendingMasterVersion": 0,
                            "referenceProps": {
                                "created": "20131207T00:07:46",
                                "createdBy": "INGENIUX\\awang",
                                "endDate": "00010101T00:00:00",
                                "lastModified": "20140125T01:04:19",
                                "lastModifiedBy": "User\/INGENIUX___awang",
                                "publishAs": "",
                                "startDate": "00010101T00:00:00"
                            },
                            "remoteServer": "",
                            "schemaFriendlyName": null,
                            "schemaName": "Home",
                            "schemaOnLatestVersion": false,
                            "securityLevel": 2,
                            "userCanCopyPage": true,
                            "workflow": null
                        }
                    }],
                    "queryString": {
                        "assignTargetId": null,
                        "assignToGroup": null,
                        "comment": null,
                        "includeChildren": false,
                        "newPageName": null,
                        "pageAction": null,
                        "pageId": null,
                        "pageIds": null,
                        "transitionId": null
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.Claim(System.String,System.String)">
            <summary>
            Assigns a Page that is currently assigned to a User Group that current User belongs to.
            </summary>
            <param name="pageId">Id of the Page to claim</param>
            <param name="pubTarget">Id of current Publishing Target</param>
            <returns>
            <para>Information of the Page Command action and the properties of updated Pages</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "contentChanged": false,
                    "pageAction": "claim",
                    "pageProperties": {
                        "name": "CompTest2",
                        "allowedCategoryRoots": [],
                        "ancestors": ["x1", "x2"],
                        "assignedGroup": null,
                        "assignedUser": {
                            "name": "Turtle Master",
                            "email": "",
                            "userId": "INGENIUX\\awang"
                        },
                        "canClaimPage": false,
                        "canTranslate": false,
                        "checkedOut": true,
                        "error": null,
                        "icon": 9,
                        "isAssignedToOtherUser": false,
                        "isEditable": true,
                        "isInWorkflow": false,
                        "justRecycled": false,
                        "languageRootId": "",
                        "lingualMaps": {
                            "clones": [],
                            "master": null
                        },
                        "locale": "",
                        "localeInherited": true,
                        "markedForPublish": false,
                        "markedForPublishAny": false,
                        "markedForPublishPropagated": false,
                        "nextPageId": null,
                        "nextPageIndex": 0,
                        "noDnd": false,
                        "numChildPages": 0,
                        "pageId": "x111",
                        "parentId": null,
                        "pendingMasterVersion": 0,
                        "referenceProps": {
                            "created": "20140121T22:51:36",
                            "createdBy": "INGENIUX\\awang",
                            "endDate": "00010101T00:00:00",
                            "lastModified": "20140125T01:09:34",
                            "lastModifiedBy": "User\/INGENIUX___awang",
                            "publishAs": "",
                            "startDate": "00010101T00:00:00"
                        },
                        "remoteServer": "",
                        "schemaFriendlyName": "CompTest",
                        "schemaName": "CompTest",
                        "schemaOnLatestVersion": true,
                        "securityLevel": 2,
                        "userCanCopyPage": true,
                        "workflow": null
                    },
                    "pages": null,
                    "queryString": {
                        "assignTargetId": null,
                        "assignToGroup": null,
                        "comment": null,
                        "includeChildren": false,
                        "newPageName": null,
                        "pageAction": null,
                        "pageId": null,
                        "pageIds": null,
                        "transitionId": null
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Page doesn't exist, returns error status.</para>
            <para>If Page is not assigned to a User Group, or the current User is not a member of that User Group, returns error status.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.Delete(System.String[],System.String)">
            <summary>
            Deletes a list of Pages
            </summary>
            <param name="pageIds">Ids of the Pages to be deleted</param>
            <param name="pubTarget">Id of current Publishing Target</param>
            <returns>
            <para>Information of the Page Command action and the properties of deleted Pages, without properties information</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "contentChanged": false,
                    "pageAction": "delete",
                    "pageProperties": null,
                    "pages": [{
                        "id": "x111",
                        "props": null
                    }, {
                        "id": "x110",
                        "props": null
                    }],
                    "queryString": null
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Page Ids are null or empty, or any of the Pages don't exist, return error status.</para>
            <para>If current User doesn't have full control access of any of the Pages, return error status.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.GetPageData(System.String,System.String)">
             <summary>
             Get Page detailed data. 
             </summary>
             <param name="id">Id of the Page</param>
             <param name="pubTarget">Id of current Publishing Target</param>
             <returns>
             <para>Information containing all Page information, including Page content, meta data, presentations information and system settings.</para>
             <example>
             Sample JSON return
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": {
            		"documentElement": {
            			"attributes": [{
            				"Key": "ID",
            				"Value": "x2"
            			}, {
            				"Key": "Name",
            				"Value": "Site"
            			}],
            			"childName": null,
            			"childParentId": null,
            			"childSchemaId": null,
            			"childSchemaName": null,
            			"deletedAttributes": null,
            			"nodeName": "Folder",
            			"nodePosition": 0,
            			"pageBuilderTemplateName": null,
            			"childElements": [],
            			"disabled": false,
            			"nodeValue": null,
            			"uniqueId": null
            		},
            		"errors": [],
            		"metadata": {
            			"properties": {
            				"name": "Site",
            				"allowedCategoryRoots": [],
            				"ancestors": ["x1"],
            				"assignedGroup": null,
            				"assignedUser": {
            					"name": "Turtle Master",
            					"email": "",
            					"userId": "INGENIUX\\awang"
            				},
            				"canClaimPage": false,
            				"canTranslate": false,
            				"checkedOut": true,
            				"error": null,
            				"icon": 1,
            				"isAssignedToOtherUser": false,
            				"isEditable": true,
            				"isInWorkflow": false,
            				"justRecycled": false,
            				"languageRootId": "",
            				"lingualMaps": {
            					"clones": [],
            					"master": null
            				},
            				"locale": "",
            				"localeInherited": true,
            				"markedForPublish": false,
            				"markedForPublishAny": true,
            				"markedForPublishPropagated": false,
            				"nextPageId": null,
            				"nextPageIndex": 0,
            				"noDnd": false,
            				"numChildPages": 7,
            				"pageId": "x2",
            				"parentId": null,
            				"pendingMasterVersion": 0,
            				"referenceProps": {
            					"created": "20131206T23:58:02",
            					"createdBy": "INGENIUX\\awang",
            					"endDate": "00010101T00:00:00",
            					"lastModified": "20140125T01:13:30",
            					"lastModifiedBy": "User\/INGENIUX___awang",
            					"publishAs": "",
            					"startDate": "00010101T00:00:00"
            				},
            				"remoteServer": "",
            				"schemaFriendlyName": "Folder",
            				"schemaName": "Folder",
            				"schemaOnLatestVersion": true,
            				"securityLevel": 2,
            				"userCanCopyPage": true,
            				"workflow": null
            			},
            			"tabData": {
            				"contentUnitsManagerTab": false,
            				"customTabs": [{
            					"Key": "CustomTabSettings\/1",
            					"Value": {
            						"name": "Analytics",
            						"id": "CustomTabSettings\/1",
            						"allowPinning": false,
            						"appendPageId": true,
            						"autoSelect": false,
            						"icon": "images\/icons\/default\/analytic16.png",
            						"isGlobal": true,
            						"resourceId": "analytics_title",
            						"show": true,
            						"url": "analytics\/default.aspx"
            					}
            				}],
            				"editTab": true,
            				"historyTab": false,
            				"overviewTab": false,
            				"pcrManagerTab": false,
            				"previewTab": false,
            				"publishManagerTab": false,
            				"publishMonitorTab": false,
            				"redirectsTab": false,
            				"reportsTab": false,
            				"schemaDesignerTab": false,
            				"siteDefinitionLocalizationTab": false,
            				"siteSearcherTab": false,
            				"systemOptionsTab": false,
            				"taxonomyAdminTab": false,
            				"taxonomyTab": false,
            				"translateTab": false,
            				"userManagerTab": false,
            				"workFlowAdministratorTab": false,
            				"xmlTab": false
            			}
            		},
            		"presentations": {
            			"AllPubTargetsName": "- All Publishing Targets -",
            			"GlobalContentUnits": {
            				"ComponentContentUnits": [{
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/227",
            					"ComponentSchemaName": "",
            					"ElementName": "ContactUs",
            					"IconName": "5",
            					"Id": "ComponentContentUnits\/227",
            					"IsComponentUnit": true,
            					"Name": "Contact Us",
            					"Reusable": false,
            					"TemplateName": "ContactUs",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "ContactUs"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Contact Us"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "ContactUs",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "ContactInformation",
            						"deletedAttributes": null,
            						"nodeName": "ContactUs",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "ContactUs"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "ContactInformation",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "label",
            									"Value": "Title"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Title",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "Contact Us",
            								"uniqueId": "2abedeae62ae45621decdc263c9eadd8"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Company"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Company",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "INGENIUX | Web Experience Management",
            								"uniqueId": "68e792a32ee940e39174f57f455fe839"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Address"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Address",
            								"nodePosition": 2,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "1601 2nd Avenue, 5th Floor | Seattle, WA 98101",
            								"uniqueId": "6c13023cdb8db1f26f5308f9f6dfbe59"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Email"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Email",
            								"nodePosition": 3,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "info@ingeniux.com",
            								"uniqueId": "931009fc717f4d211254f888a7e85a47"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Phone"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Phone",
            								"nodePosition": 4,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "1 (206) 788-4300",
            								"uniqueId": "af03d546e7604118269dbd00afbe6a2f"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Web"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Web",
            								"nodePosition": 5,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "http:\/\/www.ingeniux.com",
            								"uniqueId": "5fa33a76f7481f537777648303783e90"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "5678ff8e-77d5-4abb-8eeb-66a5b1e90b77"
            					},
            					"ElementId": "5678ff8e-77d5-4abb-8eeb-66a5b1e90b77",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"ContactUs\" UID=\"5678ff8e-77d5-4abb-8eeb-66a5b1e90b77\" label=\"Contact Us\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><ContactInformation ID=\"\" Name=\"ContactUs\" IsComponent=\"true\"><Title type=\"string\" UID=\"2abedeae62ae45621decdc263c9eadd8\" label=\"Title\" readonly=\"false\" hidden=\"false\" required=\"false\">Contact Us<\/Title><Company type=\"string\" UID=\"68e792a32ee940e39174f57f455fe839\" label=\"Company\" readonly=\"false\" hidden=\"false\" required=\"false\">INGENIUX | Web Experience Management<\/Company><Address type=\"string\" UID=\"6c13023cdb8db1f26f5308f9f6dfbe59\" label=\"Address\" readonly=\"false\" hidden=\"false\" required=\"false\">1601 2nd Avenue, 5th Floor | Seattle, WA 98101<\/Address><Email type=\"string\" UID=\"931009fc717f4d211254f888a7e85a47\" label=\"Email\" readonly=\"false\" hidden=\"false\" required=\"false\">info@ingeniux.com<\/Email><Phone type=\"string\" UID=\"af03d546e7604118269dbd00afbe6a2f\" label=\"Phone\" readonly=\"false\" hidden=\"false\" required=\"false\">1 (206) 788-4300<\/Phone><Web type=\"string\" UID=\"5fa33a76f7481f537777648303783e90\" label=\"Web\" readonly=\"false\" hidden=\"false\" required=\"false\">http:\/\/www.ingeniux.com<\/Web><\/ContactInformation><\/xPower>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/97",
            					"ComponentSchemaName": "",
            					"ElementName": "FeatureItem",
            					"IconName": "2",
            					"Id": "ComponentContentUnits\/65",
            					"IsComponentUnit": true,
            					"Name": "Feature Item",
            					"Reusable": true,
            					"TemplateName": "FeatureItem",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "FeatureItem"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Feature Item"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "FeatureItem",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "FeatureItem",
            						"deletedAttributes": null,
            						"nodeName": "FeatureItem",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "FeatureItem"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "FeatureItem",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "label",
            									"Value": "Title"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Title",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "Feature",
            								"uniqueId": "23934a87ffc7cbfd051393593ff8752b"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Body"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Body",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "At vero eos et accusamus et iusto odio dignissimos dolores et quas molestias excepturi sint occaecati cupiditate non provident.",
            								"uniqueId": "0c1ecb660679d445df08a880fb2a5898"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Icon Class"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "IconClass",
            								"nodePosition": 2,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "8e2672c052c42cdd2f4d52ebd0b66f89"
            							}, {
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Link",
            									"Value": ""
            								}, {
            									"Key": "LinkText",
            									"Value": "Read More"
            								}, {
            									"Key": "URL",
            									"Value": ""
            								}, {
            									"Key": "Target",
            									"Value": ""
            								}, {
            									"Key": "label",
            									"Value": "Link"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "Type",
            									"Value": "Link"
            								}, {
            									"Key": "pageName",
            									"Value": ""
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Link",
            								"nodePosition": 3,
            								"pageBuilderTemplateName": "",
            								"childElements": [{
            									"attributes": [],
            									"childName": null,
            									"childParentId": null,
            									"childSchemaId": null,
            									"childSchemaName": null,
            									"deletedAttributes": null,
            									"nodeName": "Exports",
            									"nodePosition": -1,
            									"pageBuilderTemplateName": null,
            									"childElements": [],
            									"disabled": false,
            									"nodeValue": "",
            									"uniqueId": null
            								}],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "43101542100ac938d15b85a40808b236"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "db4ed209-edb5-4d4b-9376-2b59270b2672"
            					},
            					"ElementId": "db4ed209-edb5-4d4b-9376-2b59270b2672",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"FeatureItem\" UID=\"db4ed209-edb5-4d4b-9376-2b59270b2672\" label=\"Feature Item\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><FeatureItem ID=\"\" Name=\"FeatureItem\" IsComponent=\"true\"><Title type=\"string\" UID=\"23934a87ffc7cbfd051393593ff8752b\" label=\"Title\" readonly=\"false\" hidden=\"false\" required=\"false\">Feature<\/Title><Body type=\"string\" UID=\"0c1ecb660679d445df08a880fb2a5898\" label=\"Body\" readonly=\"false\" hidden=\"false\" required=\"false\">At vero eos et accusamus et iusto odio dignissimos dolores et quas molestias excepturi sint occaecati cupiditate non provident.<\/Body><IconClass type=\"string\" UID=\"8e2672c052c42cdd2f4d52ebd0b66f89\" label=\"Icon Class\" readonly=\"false\" hidden=\"false\" required=\"false\"><\/IconClass><xPower Type=\"Link\" Name=\"Link\" UID=\"43101542100ac938d15b85a40808b236\" label=\"Link\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" LinkText=\"Read More\" URL=\"\" Target=\"\" Link=\"\" \/><\/FeatureItem><\/xPower>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/225",
            					"ComponentSchemaName": "",
            					"ElementName": "FeaturePhoto",
            					"IconName": "3",
            					"Id": "ComponentContentUnits\/193",
            					"IsComponentUnit": true,
            					"Name": "Feature Photo",
            					"Reusable": true,
            					"TemplateName": "FeaturePhoto",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "FeaturePhoto"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Feature Photo"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "FeaturePhoto",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "FeaturePhoto",
            						"deletedAttributes": null,
            						"nodeName": "FeaturePhoto",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "FeaturePhoto"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "FeaturePhoto",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "label",
            									"Value": "Title"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Title",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "Feature Photo",
            								"uniqueId": "873c15e695d7eb83d1ae37bfc1a7ddfb"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Description"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Description",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "At vero eos et accusamus et iusto odio dignissimos dolores et quas molestias excepturi sint occaecati cupiditate non provident.",
            								"uniqueId": "275bb18fd5f548129e4021b80b65ea85"
            							}, {
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Width",
            									"Value": ""
            								}, {
            									"Key": "Height",
            									"Value": ""
            								}, {
            									"Key": "Border",
            									"Value": ""
            								}, {
            									"Key": "HSpace",
            									"Value": ""
            								}, {
            									"Key": "VSpace",
            									"Value": ""
            								}, {
            									"Key": "Alignment",
            									"Value": ""
            								}, {
            									"Key": "label",
            									"Value": "Photo"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "imagefile"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Photo",
            								"nodePosition": 2,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "main\/1.jpg",
            								"uniqueId": "d524583279f8b1a9e57d783da26c7628"
            							}, {
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Link",
            									"Value": ""
            								}, {
            									"Key": "LinkText",
            									"Value": "Read More"
            								}, {
            									"Key": "URL",
            									"Value": ""
            								}, {
            									"Key": "Target",
            									"Value": ""
            								}, {
            									"Key": "label",
            									"Value": "Link"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "Type",
            									"Value": "Link"
            								}, {
            									"Key": "pageName",
            									"Value": ""
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Link",
            								"nodePosition": 3,
            								"pageBuilderTemplateName": "",
            								"childElements": [{
            									"attributes": [],
            									"childName": null,
            									"childParentId": null,
            									"childSchemaId": null,
            									"childSchemaName": null,
            									"deletedAttributes": null,
            									"nodeName": "Exports",
            									"nodePosition": -1,
            									"pageBuilderTemplateName": null,
            									"childElements": [],
            									"disabled": false,
            									"nodeValue": "",
            									"uniqueId": null
            								}],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "2337c435b58e2f7acb91f23e3df47ee0"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "ed739471-ecdd-427c-a82a-c5019cc506e9"
            					},
            					"ElementId": "ed739471-ecdd-427c-a82a-c5019cc506e9",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"FeaturePhoto\" UID=\"ed739471-ecdd-427c-a82a-c5019cc506e9\" label=\"Feature Photo\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><FeaturePhoto ID=\"\" Name=\"FeaturePhoto\" IsComponent=\"true\"><Title type=\"string\" UID=\"873c15e695d7eb83d1ae37bfc1a7ddfb\" label=\"Title\" readonly=\"false\" hidden=\"false\" required=\"false\">Feature Photo<\/Title><Description type=\"string\" UID=\"275bb18fd5f548129e4021b80b65ea85\" label=\"Description\" readonly=\"false\" hidden=\"false\" required=\"false\">At vero eos et accusamus et iusto odio dignissimos dolores et quas molestias excepturi sint occaecati cupiditate non provident.<\/Description><Photo type=\"imagefile\" UID=\"d524583279f8b1a9e57d783da26c7628\" label=\"Photo\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" Width=\"\" Height=\"\" Border=\"\" HSpace=\"\" VSpace=\"\" Alignment=\"\">main\/1.jpg<\/Photo><xPower Type=\"Link\" Name=\"Link\" UID=\"2337c435b58e2f7acb91f23e3df47ee0\" label=\"Link\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" LinkText=\"Read More\" URL=\"\" Target=\"\" Link=\"\" \/><\/FeaturePhoto><\/xPower>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/FormJQuery",
            					"ComponentSchemaName": "",
            					"ElementName": "Form",
            					"IconName": "11",
            					"Id": "ComponentContentUnits\/257",
            					"IsComponentUnit": true,
            					"Name": "Form - JQuery",
            					"Reusable": true,
            					"TemplateName": "Form",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "Form"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Form - JQuery"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "Form",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "FormJQuery",
            						"deletedAttributes": null,
            						"nodeName": "Form",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "Form"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "FormJQuery",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "label",
            									"Value": "Form Name"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "true"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "name",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "0981aeacfac08fc60c6ebf2962d91b9f"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Form Class"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "FormClass",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "c3d4ffa8171f49d0bbd04ab6d55aa504"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Form Description (for internal identification)"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "desc",
            								"nodePosition": 2,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "3a5140c950f518b023c055ba17277924"
            							}, {
            								"attributes": [{
            									"Key": "values",
            									"Value": "post get"
            								}, {
            									"Key": "label",
            									"Value": "Method"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "true"
            								}, {
            									"Key": "type",
            									"Value": "enumeration"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "method",
            								"nodePosition": 3,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "post",
            								"uniqueId": "ccc99542ad20ff0e67d330a0254a0225"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Action URL"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "true"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "actionURL",
            								"nodePosition": 4,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "411dc524dd1c61fb084ef4bae05bc9e3"
            							}, {
            								"attributes": [{
            									"Key": "values",
            									"Value": "_blank _parent _self _search _top"
            								}, {
            									"Key": "label",
            									"Value": "target"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "enumeration"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "target",
            								"nodePosition": 5,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "_self",
            								"uniqueId": "bd0b48f45d2faf3f800acb4cbb36ba2b"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "AJAX Request"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "boolean"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "AJAXRequest",
            								"nodePosition": 6,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "790a96b2f582250fb3db972f2dd359aa"
            							}, {
            								"attributes": [{
            									"Key": "values",
            									"Value": "Top_of_Field Left_of_Field"
            								}, {
            									"Key": "label",
            									"Value": "Form Appearance: Position of Field Labels"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "enumeration"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "labelPosition",
            								"nodePosition": 7,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "Top_of_Field",
            								"uniqueId": "16100ef0336bf72df47a803c70274b8d"
            							}, {
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Enclosed",
            									"Value": "false"
            								}, {
            									"Key": "AllowEnclosureChange",
            									"Value": "false"
            								}, {
            									"Key": "label",
            									"Value": "Form Input Fields"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "Type",
            									"Value": "List"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "FormInputFields",
            								"nodePosition": 8,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "652964eaa5a722aab251f0c0d8a07ada"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "6a76f6e7-756d-4084-beee-42d109e76fd1"
            					},
            					"ElementId": "6a76f6e7-756d-4084-beee-42d109e76fd1",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"Form\" UID=\"6a76f6e7-756d-4084-beee-42d109e76fd1\" label=\"Form - JQuery\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><FormJQuery ID=\"\" Name=\"Form\" IsComponent=\"true\"><name type=\"string\" UID=\"0981aeacfac08fc60c6ebf2962d91b9f\" label=\"Form Name\" readonly=\"false\" hidden=\"false\" required=\"true\"><\/name><FormClass type=\"string\" UID=\"c3d4ffa8171f49d0bbd04ab6d55aa504\" label=\"Form Class\" readonly=\"false\" hidden=\"false\" required=\"false\"><\/FormClass><desc type=\"string\" UID=\"3a5140c950f518b023c055ba17277924\" label=\"Form Description (for internal identification)\" readonly=\"false\" hidden=\"false\" required=\"false\"><\/desc><method type=\"enumeration\" UID=\"ccc99542ad20ff0e67d330a0254a0225\" label=\"Method\" readonly=\"false\" hidden=\"false\" required=\"true\" values=\"post get\">post<\/method><actionURL type=\"string\" UID=\"411dc524dd1c61fb084ef4bae05bc9e3\" label=\"Action URL\" readonly=\"false\" hidden=\"false\" required=\"true\"><\/actionURL><target type=\"enumeration\" UID=\"bd0b48f45d2faf3f800acb4cbb36ba2b\" label=\"target\" readonly=\"false\" hidden=\"false\" required=\"false\" values=\"_blank _parent _self _search _top\">_self<\/target><AJAXRequest type=\"boolean\" UID=\"790a96b2f582250fb3db972f2dd359aa\" label=\"AJAX Request\" readonly=\"false\" hidden=\"false\" required=\"false\"><\/AJAXRequest><labelPosition type=\"enumeration\" UID=\"16100ef0336bf72df47a803c70274b8d\" label=\"Form Appearance: Position of Field Labels\" readonly=\"false\" hidden=\"false\" required=\"false\" values=\"Top_of_Field Left_of_Field\">Top_of_Field<\/labelPosition><xPower Type=\"List\" Name=\"FormInputFields\" UID=\"652964eaa5a722aab251f0c0d8a07ada\" label=\"Form Input Fields\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" Enclosed=\"false\" AllowEnclosureChange=\"false\" ItemName=\"Input\" ItemLabel=\"\" ItemType=\"Component\" \/><\/FormJQuery><\/xPower>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/FormBuilder_Captcha",
            					"ComponentSchemaName": "",
            					"ElementName": "FormInput_Captcha",
            					"IconName": "9",
            					"Id": "ComponentContentUnits\/291",
            					"IsComponentUnit": true,
            					"Name": "Form Builder - Captcha",
            					"Reusable": true,
            					"TemplateName": "FormBuilder_Captcha",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "FormInput_Captcha"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Form Builder - Captcha"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "FormInput_Captcha",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "FormBuilder_Captcha",
            						"deletedAttributes": null,
            						"nodeName": "FormInput_Captcha",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "FormInput_Captcha"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "FormBuilder_Captcha",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "label",
            									"Value": "Key"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Key",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "8af2095bb75a835dd14e719f1c3f66ce"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Recaptcha ID"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "RecaptchaID",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "recaptcha_div",
            								"uniqueId": "c1938a44123d939a8dacd75580f8f387"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "25a4d41f-51b9-4e33-a170-e4ef80716e2c"
            					},
            					"ElementId": "25a4d41f-51b9-4e33-a170-e4ef80716e2c",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"FormInput_Captcha\" UID=\"25a4d41f-51b9-4e33-a170-e4ef80716e2c\" label=\"Form Builder - Captcha\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><FormBuilder_Captcha ID=\"\" Name=\"FormInput_Captcha\" IsComponent=\"true\"><Key type=\"string\" UID=\"8af2095bb75a835dd14e719f1c3f66ce\" label=\"Key\" readonly=\"false\" hidden=\"false\" required=\"false\"><\/Key><RecaptchaID type=\"string\" UID=\"c1938a44123d939a8dacd75580f8f387\" label=\"Recaptcha ID\" readonly=\"false\" hidden=\"false\" required=\"false\">recaptcha_div<\/RecaptchaID><\/FormBuilder_Captcha><\/xPower>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/FormBuilder_HtmlInput",
            					"ComponentSchemaName": "",
            					"ElementName": "FormInput_HtmlInput",
            					"IconName": "9",
            					"Id": "ComponentContentUnits\/290",
            					"IsComponentUnit": true,
            					"Name": "Form Builder - Html Input",
            					"Reusable": true,
            					"TemplateName": "FormBuilder_HtmlInput",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "FormInput_HtmlInput"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Form Builder - Html Input"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "FormInput_HtmlInput",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "FormBuilder_HtmlInput",
            						"deletedAttributes": null,
            						"nodeName": "FormInput_HtmlInput",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "FormInput_HtmlInput"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "FormBuilder_HtmlInput",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "Height",
            									"Value": ""
            								}, {
            									"Key": "label",
            									"Value": "Html Input"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "xhtml"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "HtmlInput",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "[label]",
            								"uniqueId": "418d59abf6d66a790c0d5a76ed52540c"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "d1ee048b-dd49-44a4-b02a-587c126bc696"
            					},
            					"ElementId": "d1ee048b-dd49-44a4-b02a-587c126bc696",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"FormInput_HtmlInput\" UID=\"d1ee048b-dd49-44a4-b02a-587c126bc696\" label=\"Form Builder - Html Input\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><FormBuilder_HtmlInput ID=\"\" Name=\"FormInput_HtmlInput\" IsComponent=\"true\"><HtmlInput type=\"xhtml\" UID=\"418d59abf6d66a790c0d5a76ed52540c\" label=\"Html Input\" readonly=\"false\" hidden=\"false\" required=\"false\" Height=\"\">[label]<\/HtmlInput><\/FormBuilder_HtmlInput><\/xPower>"
            				}, {
            					"AllowedSchemas": ["FormJQuery"],
            					"ComponentSchemaId": "schemas\/FormBuilder_Input",
            					"ComponentSchemaName": "",
            					"ElementName": "FormInput",
            					"IconName": "9",
            					"Id": "ComponentContentUnits\/289",
            					"IsComponentUnit": true,
            					"Name": "Form Builder - Input",
            					"Reusable": true,
            					"TemplateName": "FormInput",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "FormInput"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Form Builder - Input"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "FormInput",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "FormBuilder_Input",
            						"deletedAttributes": null,
            						"nodeName": "FormInput",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "FormInput"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "FormBuilder_Input",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "label",
            									"Value": "Form field name"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "true"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "name",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "53ce0385f68ba9e418c0be481b4677aa"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Form field label"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "caption",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "332ca7347ed71056342292d832683260"
            							}, {
            								"attributes": [{
            									"Key": "values",
            									"Value": "text textarea select multi-select button checkbox hidden password radio reset submit"
            								}, {
            									"Key": "label",
            									"Value": "Form field type"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "enumeration"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "type",
            								"nodePosition": 2,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "00229ac7d98712c7ea762380c9d0ad6e"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Form field value"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "value",
            								"nodePosition": 3,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "e547b9e22a20fe4b8b2fec1c365b412e"
            							}, {
            								"attributes": [{
            									"Key": "MaxChoices",
            									"Value": ""
            								}, {
            									"Key": "PageSize",
            									"Value": "10"
            								}, {
            									"Key": "Values",
            									"Value": ""
            								}, {
            									"Key": "label",
            									"Value": "Type of validation for this field"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "multiselect"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "validationType",
            								"nodePosition": 4,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "ea5e9133cd2ae36bd4d5efbc63bb8603"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "The CSS class name for this field"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "cssClass",
            								"nodePosition": 5,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "02690a79b162e70d5105d51eec0b8d85"
            							}, {
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Enclosed",
            									"Value": "false"
            								}, {
            									"Key": "AllowEnclosureChange",
            									"Value": "false"
            								}, {
            									"Key": "label",
            									"Value": "Additional Validation Info"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "Type",
            									"Value": "GroupStart"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "AdditionalValidationInfo",
            								"nodePosition": 6,
            								"pageBuilderTemplateName": "",
            								"childElements": [{
            									"attributes": [{
            										"Key": "label",
            										"Value": "Trigger"
            									}, {
            										"Key": "readonly",
            										"Value": "false"
            									}, {
            										"Key": "hidden",
            										"Value": "false"
            									}, {
            										"Key": "required",
            										"Value": "false"
            									}, {
            										"Key": "type",
            										"Value": "boolean"
            									}],
            									"childName": null,
            									"childParentId": null,
            									"childSchemaId": null,
            									"childSchemaName": null,
            									"deletedAttributes": null,
            									"nodeName": "Trigger",
            									"nodePosition": 0,
            									"pageBuilderTemplateName": "",
            									"childElements": [],
            									"disabled": false,
            									"nodeValue": null,
            									"uniqueId": "b5941360-7df3-4d37-9f69-aafeeee07c25"
            								}, {
            									"attributes": [{
            										"Key": "label",
            										"Value": "min"
            									}, {
            										"Key": "readonly",
            										"Value": "false"
            									}, {
            										"Key": "hidden",
            										"Value": "false"
            									}, {
            										"Key": "required",
            										"Value": "false"
            									}, {
            										"Key": "type",
            										"Value": "string"
            									}],
            									"childName": null,
            									"childParentId": null,
            									"childSchemaId": null,
            									"childSchemaName": null,
            									"deletedAttributes": null,
            									"nodeName": "min",
            									"nodePosition": 1,
            									"pageBuilderTemplateName": "",
            									"childElements": [],
            									"disabled": false,
            									"nodeValue": null,
            									"uniqueId": "9ba3cf6b-d7ce-4ac5-9db9-403c0bb763c4"
            								}, {
            									"attributes": [{
            										"Key": "label",
            										"Value": "max"
            									}, {
            										"Key": "readonly",
            										"Value": "false"
            									}, {
            										"Key": "hidden",
            										"Value": "false"
            									}, {
            										"Key": "required",
            										"Value": "false"
            									}, {
            										"Key": "type",
            										"Value": "string"
            									}],
            									"childName": null,
            									"childParentId": null,
            									"childSchemaId": null,
            									"childSchemaName": null,
            									"deletedAttributes": null,
            									"nodeName": "max",
            									"nodePosition": 2,
            									"pageBuilderTemplateName": "",
            									"childElements": [],
            									"disabled": false,
            									"nodeValue": null,
            									"uniqueId": "901a1453-ceb6-4495-bf24-592656dd56a0"
            								}, {
            									"attributes": [{
            										"Key": "label",
            										"Value": "Validation Error Message"
            									}, {
            										"Key": "readonly",
            										"Value": "false"
            									}, {
            										"Key": "hidden",
            										"Value": "false"
            									}, {
            										"Key": "required",
            										"Value": "false"
            									}, {
            										"Key": "type",
            										"Value": "string"
            									}],
            									"childName": null,
            									"childParentId": null,
            									"childSchemaId": null,
            									"childSchemaName": null,
            									"deletedAttributes": null,
            									"nodeName": "ValidationErrorMessage",
            									"nodePosition": 3,
            									"pageBuilderTemplateName": "",
            									"childElements": [],
            									"disabled": false,
            									"nodeValue": null,
            									"uniqueId": "dc01c153-0da3-47e0-b934-a36ac7afbc6d"
            								}],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "15480383-21ca-4099-b5ce-d2b70b4c9d42"
            							}, {
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Enclosed",
            									"Value": "false"
            								}, {
            									"Key": "AllowEnclosureChange",
            									"Value": "false"
            								}, {
            									"Key": "label",
            									"Value": "Child Options"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "Type",
            									"Value": "GroupStart"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "ChildOptions",
            								"nodePosition": 7,
            								"pageBuilderTemplateName": "",
            								"childElements": [{
            									"attributes": [{
            										"Key": "Expanded",
            										"Value": "false"
            									}, {
            										"Key": "Navigation",
            										"Value": "Children"
            									}, {
            										"Key": "GenerationOrder",
            										"Value": "down"
            									}, {
            										"Key": "StartPage",
            										"Value": ""
            									}, {
            										"Key": "MaxNodes",
            										"Value": ""
            									}, {
            										"Key": "MaxDepth",
            										"Value": ""
            									}, {
            										"Key": "Query",
            										"Value": ""
            									}, {
            										"Key": "label",
            										"Value": "Options"
            									}, {
            										"Key": "readonly",
            										"Value": "false"
            									}, {
            										"Key": "hidden",
            										"Value": "false"
            									}, {
            										"Key": "required",
            										"Value": "false"
            									}, {
            										"Key": "Type",
            										"Value": "Navigation"
            									}],
            									"childName": null,
            									"childParentId": null,
            									"childSchemaId": null,
            									"childSchemaName": null,
            									"deletedAttributes": null,
            									"nodeName": "Options",
            									"nodePosition": 0,
            									"pageBuilderTemplateName": "",
            									"childElements": [{
            										"attributes": [],
            										"childName": null,
            										"childParentId": null,
            										"childSchemaId": null,
            										"childSchemaName": null,
            										"deletedAttributes": null,
            										"nodeName": "Exports",
            										"nodePosition": -1,
            										"pageBuilderTemplateName": null,
            										"childElements": [],
            										"disabled": false,
            										"nodeValue": "",
            										"uniqueId": null
            									}],
            									"disabled": false,
            									"nodeValue": "Children",
            									"uniqueId": "efd397be-f86e-4c3d-b3e9-06472d42ac3e"
            								}, {
            									"attributes": [{
            										"Key": "Component",
            										"Value": ""
            									}, {
            										"Key": "CompTypes",
            										"Value": "DbQuery;DBQuery"
            									}, {
            										"Key": "WrappedUp",
            										"Value": "false"
            									}, {
            										"Key": "AllowWrappingChange",
            										"Value": "false"
            									}, {
            										"Key": "label",
            										"Value": "Options from Database"
            									}, {
            										"Key": "readonly",
            										"Value": "false"
            									}, {
            										"Key": "hidden",
            										"Value": "false"
            									}, {
            										"Key": "required",
            										"Value": "false"
            									}, {
            										"Key": "Type",
            										"Value": "Component"
            									}, {
            										"Key": "componentName",
            										"Value": ""
            									}],
            									"childName": null,
            									"childParentId": null,
            									"childSchemaId": null,
            									"childSchemaName": null,
            									"deletedAttributes": null,
            									"nodeName": "OptionsfromDatabase",
            									"nodePosition": 1,
            									"pageBuilderTemplateName": "",
            									"childElements": [],
            									"disabled": false,
            									"nodeValue": "",
            									"uniqueId": "7ffdbdd9-4115-44d7-ad97-0c179b50ce27"
            								}],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "9a9734d9-a18f-4988-b75d-17e3df8302dc"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Trigger"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "boolean"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Trigger",
            								"nodePosition": 8,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "0eac6aa3f5cb1a3345049ec11db19b5a"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "min"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "min",
            								"nodePosition": 9,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "25da34a04954190bfe065b2097d2bd63"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "max"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "max",
            								"nodePosition": 10,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "c456b990aeed5d548df1515cb0ae5f8c"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Validation Error Message"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "ValidationErrorMessage",
            								"nodePosition": 11,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "a018277251c5dae5f46e672e4fd68ee3"
            							}, {
            								"attributes": [{
            									"Key": "Navigation",
            									"Value": "Children"
            								}, {
            									"Key": "GenerationOrder",
            									"Value": "down"
            								}, {
            									"Key": "StartPage",
            									"Value": ""
            								}, {
            									"Key": "MaxNodes",
            									"Value": ""
            								}, {
            									"Key": "MaxDepth",
            									"Value": ""
            								}, {
            									"Key": "Query",
            									"Value": ""
            								}, {
            									"Key": "label",
            									"Value": "Options"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "Type",
            									"Value": "Navigation"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Options",
            								"nodePosition": 12,
            								"pageBuilderTemplateName": "",
            								"childElements": [{
            									"attributes": [],
            									"childName": null,
            									"childParentId": null,
            									"childSchemaId": null,
            									"childSchemaName": null,
            									"deletedAttributes": null,
            									"nodeName": "Exports",
            									"nodePosition": -1,
            									"pageBuilderTemplateName": null,
            									"childElements": [],
            									"disabled": false,
            									"nodeValue": "",
            									"uniqueId": null
            								}],
            								"disabled": false,
            								"nodeValue": "Children",
            								"uniqueId": "91c23370157cd20824e047c4578c8cae"
            							}, {
            								"attributes": [{
            									"Key": "Component",
            									"Value": ""
            								}, {
            									"Key": "CompTypes",
            									"Value": "DbQuery;DBQuery"
            								}, {
            									"Key": "WrappedUp",
            									"Value": "false"
            								}, {
            									"Key": "AllowWrappingChange",
            									"Value": "false"
            								}, {
            									"Key": "label",
            									"Value": "Options from Database"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "Type",
            									"Value": "Component"
            								}, {
            									"Key": "componentName",
            									"Value": ""
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "OptionsfromDatabase",
            								"nodePosition": 13,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "f2d165971b8c7866219210856a78e729"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "f328ec66-e7d9-4fba-b7bb-19942bd23ec5"
            					},
            					"ElementId": "f328ec66-e7d9-4fba-b7bb-19942bd23ec5",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"FormInput\" UID=\"f328ec66-e7d9-4fba-b7bb-19942bd23ec5\" label=\"Form Builder - Input\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><FormBuilder_Input ID=\"\" Name=\"FormInput\" IsComponent=\"true\"><name type=\"string\" UID=\"53ce0385f68ba9e418c0be481b4677aa\" label=\"Form field name\" readonly=\"false\" hidden=\"false\" required=\"true\"><\/name><caption type=\"string\" UID=\"332ca7347ed71056342292d832683260\" label=\"Form field label\" readonly=\"false\" hidden=\"false\" required=\"false\"><\/caption><type type=\"enumeration\" UID=\"00229ac7d98712c7ea762380c9d0ad6e\" label=\"Form field type\" readonly=\"false\" hidden=\"false\" required=\"false\" values=\"text textarea select multi-select button checkbox hidden password radio reset submit\"><\/type><value type=\"string\" UID=\"e547b9e22a20fe4b8b2fec1c365b412e\" label=\"Form field value\" readonly=\"false\" hidden=\"false\" required=\"false\"><\/value><validationType type=\"multiselect\" UID=\"ea5e9133cd2ae36bd4d5efbc63bb8603\" label=\"Type of validation for this field\" readonly=\"false\" hidden=\"false\" required=\"false\" MaxChoices=\"\" PageSize=\"10\" Values=\"\"><\/validationType><cssClass type=\"string\" UID=\"02690a79b162e70d5105d51eec0b8d85\" label=\"The CSS class name for this field\" readonly=\"false\" hidden=\"false\" required=\"false\"><\/cssClass><xPower Type=\"GroupStart\" Name=\"AdditionalValidationInfo\" UID=\"15480383-21ca-4099-b5ce-d2b70b4c9d42\" label=\"Additional Validation Info\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" Enclosed=\"false\" AllowEnclosureChange=\"false\"><Trigger type=\"boolean\" UID=\"b5941360-7df3-4d37-9f69-aafeeee07c25\" label=\"Trigger\" readonly=\"false\" hidden=\"false\" required=\"false\" \/><min type=\"string\" UID=\"9ba3cf6b-d7ce-4ac5-9db9-403c0bb763c4\" label=\"min\" readonly=\"false\" hidden=\"false\" required=\"false\" \/><max type=\"string\" UID=\"901a1453-ceb6-4495-bf24-592656dd56a0\" label=\"max\" readonly=\"false\" hidden=\"false\" required=\"false\" \/><ValidationErrorMessage type=\"string\" UID=\"dc01c153-0da3-47e0-b934-a36ac7afbc6d\" label=\"Validation Error Message\" readonly=\"false\" hidden=\"false\" required=\"false\" \/><\/xPower><xPower Type=\"GroupStart\" Name=\"ChildOptions\" UID=\"9a9734d9-a18f-4988-b75d-17e3df8302dc\" label=\"Child Options\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" Enclosed=\"false\" AllowEnclosureChange=\"false\"><xPower Type=\"Navigation\" Name=\"Options\" Navigation=\"Children\" UID=\"efd397be-f86e-4c3d-b3e9-06472d42ac3e\" label=\"Options\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" GenerationOrder=\"down\" StartPage=\"\" MaxNodes=\"\" MaxDepth=\"\" Query=\"\" \/><xPower Type=\"Component\" Name=\"OptionsfromDatabase\" UID=\"7ffdbdd9-4115-44d7-ad97-0c179b50ce27\" label=\"Options from Database\" readonly=\"false\" hidden=\"false\" required=\"false\" CompTypes=\"DbQuery;DBQuery\" WrappedUp=\"false\" AllowWrappingChange=\"false\" Embedded=\"false\" \/><\/xPower><Trigger type=\"boolean\" UID=\"0eac6aa3f5cb1a3345049ec11db19b5a\" label=\"Trigger\" readonly=\"false\" hidden=\"false\" required=\"false\"><\/Trigger><min type=\"string\" UID=\"25da34a04954190bfe065b2097d2bd63\" label=\"min\" readonly=\"false\" hidden=\"false\" required=\"false\"><\/min><max type=\"string\" UID=\"c456b990aeed5d548df1515cb0ae5f8c\" label=\"max\" readonly=\"false\" hidden=\"false\" required=\"false\"><\/max><ValidationErrorMessage type=\"string\" UID=\"a018277251c5dae5f46e672e4fd68ee3\" label=\"Validation Error Message\" readonly=\"false\" hidden=\"false\" required=\"false\"><\/ValidationErrorMessage><xPower Type=\"Navigation\" Name=\"Options\" Navigation=\"Children\" UID=\"91c23370157cd20824e047c4578c8cae\" label=\"Options\" readonly=\"false\" hidden=\"false\" required=\"false\" GenerationOrder=\"down\" StartPage=\"\" MaxNodes=\"\" MaxDepth=\"\" Query=\"\" \/><xPower Type=\"Component\" Name=\"OptionsfromDatabase\" UID=\"f2d165971b8c7866219210856a78e729\" label=\"Options from Database\" readonly=\"false\" hidden=\"false\" required=\"false\" CompTypes=\"DbQuery;DBQuery\" WrappedUp=\"false\" AllowWrappingChange=\"false\" Embedded=\"false\" \/><\/FormBuilder_Input><\/xPower>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/66",
            					"ComponentSchemaName": "",
            					"ElementName": "HomeSlider",
            					"IconName": "6",
            					"Id": "ComponentContentUnits\/33",
            					"IsComponentUnit": true,
            					"Name": "Home Slider",
            					"Reusable": false,
            					"TemplateName": "HomeSlider",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "HomeSlider"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Home Slider"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "HomeSlider",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "HomeSlider",
            						"deletedAttributes": null,
            						"nodeName": "HomeSlider",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "HomeSlider"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "HomeSlider",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Width",
            									"Value": ""
            								}, {
            									"Key": "Height",
            									"Value": ""
            								}, {
            									"Key": "Border",
            									"Value": ""
            								}, {
            									"Key": "HSpace",
            									"Value": ""
            								}, {
            									"Key": "VSpace",
            									"Value": ""
            								}, {
            									"Key": "Alignment",
            									"Value": ""
            								}, {
            									"Key": "label",
            									"Value": "Previous Button"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "imagefile"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "PreviousButton",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "prebuilt\/plugins\/horizontal-parallax\/images\/bt-prev1.png",
            								"uniqueId": "2ea9ac4c6ce88048910a5e90fa90ac2d"
            							}, {
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Width",
            									"Value": ""
            								}, {
            									"Key": "Height",
            									"Value": ""
            								}, {
            									"Key": "Border",
            									"Value": ""
            								}, {
            									"Key": "HSpace",
            									"Value": ""
            								}, {
            									"Key": "VSpace",
            									"Value": ""
            								}, {
            									"Key": "Alignment",
            									"Value": ""
            								}, {
            									"Key": "label",
            									"Value": "Next Button"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "imagefile"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "NextButton",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "prebuilt\/plugins\/horizontal-parallax\/images\/bt-next1.png",
            								"uniqueId": "b99fd6e193904e1a16665f862833c885"
            							}, {
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Enclosed",
            									"Value": "false"
            								}, {
            									"Key": "AllowEnclosureChange",
            									"Value": "false"
            								}, {
            									"Key": "label",
            									"Value": "Sliders"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "Type",
            									"Value": "List"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Sliders",
            								"nodePosition": 2,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "40a033ef9d8438e6e479ac6b8bb8d2a9"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "cba0dd2b-cada-4f09-b661-995ed577deff"
            					},
            					"ElementId": "cba0dd2b-cada-4f09-b661-995ed577deff",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"HomeSlider\" UID=\"cba0dd2b-cada-4f09-b661-995ed577deff\" label=\"Home Slider\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><HomeSlider ID=\"\" Name=\"HomeSlider\" IsComponent=\"true\"><PreviousButton type=\"imagefile\" UID=\"2ea9ac4c6ce88048910a5e90fa90ac2d\" label=\"Previous Button\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" Width=\"\" Height=\"\" Border=\"\" HSpace=\"\" VSpace=\"\" Alignment=\"\">prebuilt\/plugins\/horizontal-parallax\/images\/bt-prev1.png<\/PreviousButton><NextButton type=\"imagefile\" UID=\"b99fd6e193904e1a16665f862833c885\" label=\"Next Button\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" Width=\"\" Height=\"\" Border=\"\" HSpace=\"\" VSpace=\"\" Alignment=\"\">prebuilt\/plugins\/horizontal-parallax\/images\/bt-next1.png<\/NextButton><xPower Type=\"List\" Name=\"Sliders\" UID=\"40a033ef9d8438e6e479ac6b8bb8d2a9\" label=\"Sliders\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" Enclosed=\"false\" AllowEnclosureChange=\"false\" ItemName=\"Slider\" ItemLabel=\"Slider Frame\" ItemType=\"Component\" \/><\/HomeSlider><\/xPower>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/193",
            					"ComponentSchemaName": "",
            					"ElementName": "RecentEntries",
            					"IconName": "3",
            					"Id": "ComponentContentUnits\/161",
            					"IsComponentUnit": true,
            					"Name": "Recent Entries",
            					"Reusable": false,
            					"TemplateName": "RecentEntries",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "RecentEntries"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Recent Entries"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "RecentEntries",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "RecentEntries",
            						"deletedAttributes": null,
            						"nodeName": "RecentEntries",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "RecentEntries"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "RecentEntries",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "label",
            									"Value": "Title"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Title",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "Recent Entries",
            								"uniqueId": "f747439e48e68cc28c3f81861471a6df"
            							}, {
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Enclosed",
            									"Value": "false"
            								}, {
            									"Key": "AllowEnclosureChange",
            									"Value": "false"
            								}, {
            									"Key": "label",
            									"Value": "Items"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "Type",
            									"Value": "List"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Items",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [{
            									"attributes": [{
            										"Key": "Expanded",
            										"Value": "false"
            									}, {
            										"Key": "Width",
            										"Value": ""
            									}, {
            										"Key": "Height",
            										"Value": ""
            									}, {
            										"Key": "Border",
            										"Value": ""
            									}, {
            										"Key": "HSpace",
            										"Value": ""
            									}, {
            										"Key": "VSpace",
            										"Value": ""
            									}, {
            										"Key": "Alignment",
            										"Value": ""
            									}, {
            										"Key": "label",
            										"Value": ""
            									}, {
            										"Key": "readonly",
            										"Value": "false"
            									}, {
            										"Key": "hidden",
            										"Value": "false"
            									}, {
            										"Key": "required",
            										"Value": "false"
            									}, {
            										"Key": "type",
            										"Value": "imagefile"
            									}],
            									"childName": null,
            									"childParentId": null,
            									"childSchemaId": null,
            									"childSchemaName": null,
            									"deletedAttributes": null,
            									"nodeName": "Image",
            									"nodePosition": 0,
            									"pageBuilderTemplateName": "",
            									"childElements": [],
            									"disabled": false,
            									"nodeValue": null,
            									"uniqueId": "2ca634c3-9aca-4322-af86-d401ad43cade"
            								}],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "5c159cebf9e373425594e3bb8e92a1e1"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "3514c108-49d2-47ca-9a8c-32bdc8275e6f"
            					},
            					"ElementId": "3514c108-49d2-47ca-9a8c-32bdc8275e6f",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"RecentEntries\" UID=\"3514c108-49d2-47ca-9a8c-32bdc8275e6f\" label=\"Recent Entries\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><RecentEntries ID=\"\" Name=\"RecentEntries\" IsComponent=\"true\"><Title type=\"string\" UID=\"f747439e48e68cc28c3f81861471a6df\" label=\"Title\" readonly=\"false\" hidden=\"false\" required=\"false\">Recent Entries<\/Title><xPower Type=\"List\" Name=\"Items\" UID=\"5c159cebf9e373425594e3bb8e92a1e1\" label=\"Items\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" Enclosed=\"false\" AllowEnclosureChange=\"false\" ItemName=\"Image\" ItemLabel=\"\" ItemType=\"\"><Image type=\"imagefile\" UID=\"2ca634c3-9aca-4322-af86-d401ad43cade\" label=\"\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" Width=\"\" Height=\"\" Border=\"\" HSpace=\"\" VSpace=\"\" Alignment=\"\" \/><\/xPower><\/RecentEntries><\/xPower>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/193",
            					"ComponentSchemaName": "",
            					"ElementName": "RecentPosts",
            					"IconName": "-1",
            					"Id": "ComponentContentUnits\/225",
            					"IsComponentUnit": true,
            					"Name": "Recent Posts",
            					"Reusable": false,
            					"TemplateName": "RecentPosts",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "RecentPosts"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Recent Posts"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "RecentPosts",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "RecentEntries",
            						"deletedAttributes": null,
            						"nodeName": "RecentPosts",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "RecentPosts"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "RecentEntries",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "label",
            									"Value": "Title"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Title",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "Recent Blogs",
            								"uniqueId": "33863836d1a5e71692f7184960928942"
            							}, {
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Enclosed",
            									"Value": "false"
            								}, {
            									"Key": "AllowEnclosureChange",
            									"Value": "false"
            								}, {
            									"Key": "label",
            									"Value": "Items"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "Type",
            									"Value": "List"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Items",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "e2597fa243ce4c5c281f76c546debc8f"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "38b447d6-ec42-4e5e-9ab4-90fc73f5e1d3"
            					},
            					"ElementId": "38b447d6-ec42-4e5e-9ab4-90fc73f5e1d3",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"RecentPosts\" UID=\"38b447d6-ec42-4e5e-9ab4-90fc73f5e1d3\" label=\"Recent Posts\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><RecentEntries ID=\"\" Name=\"RecentPosts\" IsComponent=\"true\"><Title type=\"string\" UID=\"33863836d1a5e71692f7184960928942\" label=\"Title\" readonly=\"false\" hidden=\"false\" required=\"false\">Recent Blogs<\/Title><xPower Type=\"List\" Name=\"Items\" UID=\"e2597fa243ce4c5c281f76c546debc8f\" label=\"Items\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" Enclosed=\"false\" AllowEnclosureChange=\"false\" ItemName=\"Image\" ItemLabel=\"\" ItemType=\"\" \/><\/RecentEntries><\/xPower>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/129",
            					"ComponentSchemaName": "",
            					"ElementName": "RecentWorks",
            					"IconName": "-1",
            					"Id": "ComponentContentUnits\/97",
            					"IsComponentUnit": true,
            					"Name": "Recent Works",
            					"Reusable": false,
            					"TemplateName": "RecentWorks",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "RecentWorks"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Recent Works"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "RecentWorks",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "RecentWorks",
            						"deletedAttributes": null,
            						"nodeName": "RecentWorks",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "RecentWorks"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "RecentWorks",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "label",
            									"Value": "Title"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Title",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "Recent Works",
            								"uniqueId": "0616631c77dc43ac1455c3b6ec328014"
            							}, {
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Enclosed",
            									"Value": "false"
            								}, {
            									"Key": "AllowEnclosureChange",
            									"Value": "false"
            								}, {
            									"Key": "label",
            									"Value": "Items"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "Type",
            									"Value": "List"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Items",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [{
            									"attributes": [{
            										"Key": "Component",
            										"Value": ""
            									}, {
            										"Key": "CompTypes",
            										"Value": ""
            									}, {
            										"Key": "WrappedUp",
            										"Value": ""
            									}, {
            										"Key": "AllowWrappingChange",
            										"Value": ""
            									}, {
            										"Key": "label",
            										"Value": ""
            									}, {
            										"Key": "readonly",
            										"Value": "false"
            									}, {
            										"Key": "hidden",
            										"Value": "false"
            									}, {
            										"Key": "required",
            										"Value": "false"
            									}, {
            										"Key": "Type",
            										"Value": "Component"
            									}, {
            										"Key": "componentName",
            										"Value": ""
            									}],
            									"childName": null,
            									"childParentId": null,
            									"childSchemaId": null,
            									"childSchemaName": null,
            									"deletedAttributes": null,
            									"nodeName": "Item",
            									"nodePosition": 0,
            									"pageBuilderTemplateName": "",
            									"childElements": [],
            									"disabled": false,
            									"nodeValue": "",
            									"uniqueId": "000a28ab-f88f-4261-ac72-38b4ea19b285"
            								}],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "01b54516fe4ec571b503fe10f751f9ac"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "53bab1ae-23d9-4a9b-aaec-c08e4168f2ea"
            					},
            					"ElementId": "53bab1ae-23d9-4a9b-aaec-c08e4168f2ea",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"RecentWorks\" UID=\"53bab1ae-23d9-4a9b-aaec-c08e4168f2ea\" label=\"Recent Works\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><RecentWorks ID=\"\" Name=\"RecentWorks\" IsComponent=\"true\"><Title type=\"string\" UID=\"0616631c77dc43ac1455c3b6ec328014\" label=\"Title\" readonly=\"false\" hidden=\"false\" required=\"false\">Recent Works<\/Title><xPower Type=\"List\" Name=\"Items\" UID=\"01b54516fe4ec571b503fe10f751f9ac\" label=\"Items\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" Enclosed=\"false\" AllowEnclosureChange=\"false\" ItemName=\"Item\" ItemLabel=\"\" ItemType=\"Component\"><xPower Type=\"Component\" Name=\"Item\" UID=\"000a28ab-f88f-4261-ac72-38b4ea19b285\" label=\"\" readonly=\"false\" hidden=\"false\" required=\"false\" CompTypes=\"\" WrappedUp=\"\" AllowWrappingChange=\"\" \/><\/xPower><\/RecentWorks><\/xPower>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/195",
            					"ComponentSchemaName": "",
            					"ElementName": "ServiceBlock",
            					"IconName": "11",
            					"Id": "ComponentContentUnits\/162",
            					"IsComponentUnit": true,
            					"Name": "Service Block",
            					"Reusable": true,
            					"TemplateName": "ServiceBlock",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "ServiceBlock"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Service Block"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "ServiceBlock",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "ServiceBlock",
            						"deletedAttributes": null,
            						"nodeName": "ServiceBlock",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "ServiceBlock"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "ServiceBlock",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "label",
            									"Value": "Title"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Title",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "[Service Name]",
            								"uniqueId": "deacb923e4d4ded26cd8ccf122001628"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Summary"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Summary",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "[Summary]",
            								"uniqueId": "1272b0ff677526e2d5c701b32a56092b"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Block Class"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "BlockClass",
            								"nodePosition": 2,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "servive-block-green",
            								"uniqueId": "c7ebb8f09d6e21b1a114faea651924cb"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Icon Class"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "IconClass",
            								"nodePosition": 3,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "icon-bel",
            								"uniqueId": "fcafd9b65e3ab9e7587a19bf4db7386d"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "79a43249-38a9-49bf-a99a-8ebffdc7f898"
            					},
            					"ElementId": "79a43249-38a9-49bf-a99a-8ebffdc7f898",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"ServiceBlock\" UID=\"79a43249-38a9-49bf-a99a-8ebffdc7f898\" label=\"Service Block\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><ServiceBlock ID=\"\" Name=\"ServiceBlock\" IsComponent=\"true\"><Title type=\"string\" UID=\"deacb923e4d4ded26cd8ccf122001628\" label=\"Title\" readonly=\"false\" hidden=\"false\" required=\"false\">[Service Name]<\/Title><Summary type=\"string\" UID=\"1272b0ff677526e2d5c701b32a56092b\" label=\"Summary\" readonly=\"false\" hidden=\"false\" required=\"false\">[Summary]<\/Summary><BlockClass type=\"string\" UID=\"c7ebb8f09d6e21b1a114faea651924cb\" label=\"Block Class\" readonly=\"false\" hidden=\"false\" required=\"false\">servive-block-green<\/BlockClass><IconClass type=\"string\" UID=\"fcafd9b65e3ab9e7587a19bf4db7386d\" label=\"Icon Class\" readonly=\"false\" hidden=\"false\" required=\"false\">icon-bel<\/IconClass><\/ServiceBlock><\/xPower>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/161",
            					"ComponentSchemaName": "",
            					"ElementName": "Testimonial",
            					"IconName": "5",
            					"Id": "ComponentContentUnits\/129",
            					"IsComponentUnit": true,
            					"Name": "Testimonial",
            					"Reusable": false,
            					"TemplateName": "Testimonial",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "Testimonial"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Testimonial"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "Testimonial",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "Testimonial",
            						"deletedAttributes": null,
            						"nodeName": "Testimonial",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "Testimonial"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "Testimonial",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "label",
            									"Value": "Title"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Title",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "Testimonial",
            								"uniqueId": "3e853fa69e2025d27bb88cf6a7f813ad"
            							}, {
            								"attributes": [{
            									"Key": "Height",
            									"Value": ""
            								}, {
            									"Key": "label",
            									"Value": "Copy"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "xhtml"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Copy",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "[Copy]",
            								"uniqueId": "f2d9bf8ea63399cbc9539129bfbfa91e"
            							}, {
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Width",
            									"Value": ""
            								}, {
            									"Key": "Height",
            									"Value": ""
            								}, {
            									"Key": "Border",
            									"Value": ""
            								}, {
            									"Key": "HSpace",
            									"Value": ""
            								}, {
            									"Key": "VSpace",
            									"Value": ""
            								}, {
            									"Key": "Alignment",
            									"Value": ""
            								}, {
            									"Key": "label",
            									"Value": "Image"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "imagefile"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Image",
            								"nodePosition": 2,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "testimonials\/img2.jpg",
            								"uniqueId": "b0d7b192cd83cc2e38f81962d1d662c0"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Quote"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Quote",
            								"nodePosition": 3,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "[Quote]",
            								"uniqueId": "de1b380536531abac7ed4787736bd6ee"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Quote Authro"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "QuoteAuthro",
            								"nodePosition": 4,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "[Author]",
            								"uniqueId": "7dcb1ef21d33e6a873d3723671572b22"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "78a35995-fc8e-4b22-b231-14adc1662967"
            					},
            					"ElementId": "78a35995-fc8e-4b22-b231-14adc1662967",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"Testimonial\" UID=\"78a35995-fc8e-4b22-b231-14adc1662967\" label=\"Testimonial\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><Testimonial ID=\"\" Name=\"Testimonial\" IsComponent=\"true\"><Title type=\"string\" UID=\"3e853fa69e2025d27bb88cf6a7f813ad\" label=\"Title\" readonly=\"false\" hidden=\"false\" required=\"false\">Testimonial<\/Title><Copy type=\"xhtml\" UID=\"f2d9bf8ea63399cbc9539129bfbfa91e\" label=\"Copy\" readonly=\"false\" hidden=\"false\" required=\"false\" Height=\"\">[Copy]<\/Copy><Image type=\"imagefile\" UID=\"b0d7b192cd83cc2e38f81962d1d662c0\" label=\"Image\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" Width=\"\" Height=\"\" Border=\"\" HSpace=\"\" VSpace=\"\" Alignment=\"\">testimonials\/img2.jpg<\/Image><Quote type=\"string\" UID=\"de1b380536531abac7ed4787736bd6ee\" label=\"Quote\" readonly=\"false\" hidden=\"false\" required=\"false\">[Quote]<\/Quote><QuoteAuthro type=\"string\" UID=\"7dcb1ef21d33e6a873d3723671572b22\" label=\"Quote Authro\" readonly=\"false\" hidden=\"false\" required=\"false\">[Author]<\/QuoteAuthro><\/Testimonial><\/xPower>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/226",
            					"ComponentSchemaName": "",
            					"ElementName": "ContentBlock",
            					"IconName": "2",
            					"Id": "ComponentContentUnits\/226",
            					"IsComponentUnit": true,
            					"Name": "Titled Content Block",
            					"Reusable": true,
            					"TemplateName": "ContentBlock",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "ContentBlock"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Titled Content Block"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "ContentBlock",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "TitledContentBlock",
            						"deletedAttributes": null,
            						"nodeName": "ContentBlock",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "ContentBlock"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "TitledContentBlock",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "label",
            									"Value": "Title"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Title",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "Title",
            								"uniqueId": "c3d44d750c9598a923077b8e35013c2c"
            							}, {
            								"attributes": [{
            									"Key": "Height",
            									"Value": ""
            								}, {
            									"Key": "label",
            									"Value": "Content"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "xhtml"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Content",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "Lorem ipsum dolor sit amet, no animal eloquentiam sit, ad pro commune delicata definitiones. No vis doctus prodesset dissentiunt, eius ridens sit ne. Eum elit libris inimicus ex. Labore similique expetendis pri te, erat vivendum delicatissimi eam cu, ne tempor legendos deseruisse usu. Eu quo invenire eloquentiam.  Eu nec persius mediocrem reprehendunt, eu graeco nonumes interesset eos, nam fugit quaerendum et. Per soluta possim ut. Volutpat repudiare definiebas eos ei. Ne eos iusto copiosae, est tamquam imperdiet id. Ne duo diam natum graece. Scribentur eloquentiam philosophia ne mel.",
            								"uniqueId": "7bd2ddc241f8bea084b19afb7c524b08"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "5e9f1374-2e95-42be-8723-73653c0bad01"
            					},
            					"ElementId": "5e9f1374-2e95-42be-8723-73653c0bad01",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"ContentBlock\" UID=\"5e9f1374-2e95-42be-8723-73653c0bad01\" label=\"Titled Content Block\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><TitledContentBlock ID=\"\" Name=\"ContentBlock\" IsComponent=\"true\"><Title type=\"string\" UID=\"c3d44d750c9598a923077b8e35013c2c\" label=\"Title\" readonly=\"false\" hidden=\"false\" required=\"false\">Title<\/Title><Content type=\"xhtml\" UID=\"7bd2ddc241f8bea084b19afb7c524b08\" label=\"Content\" readonly=\"false\" hidden=\"false\" required=\"false\" Height=\"\">Lorem ipsum dolor sit amet, no animal eloquentiam sit, ad pro commune delicata definitiones. No vis doctus prodesset dissentiunt, eius ridens sit ne. Eum elit libris inimicus ex. Labore similique expetendis pri te, erat vivendum delicatissimi eam cu, ne tempor legendos deseruisse usu. Eu quo invenire eloquentiam.  Eu nec persius mediocrem reprehendunt, eu graeco nonumes interesset eos, nam fugit quaerendum et. Per soluta possim ut. Volutpat repudiare definiebas eos ei. Ne eos iusto copiosae, est tamquam imperdiet id. Ne duo diam natum graece. Scribentur eloquentiam philosophia ne mel.<\/Content><\/TitledContentBlock><\/xPower>"
            				}],
            				"FieldContentUnits": [{
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "",
            					"ComponentSchemaName": "",
            					"ElementName": "BodyCopy",
            					"IconName": "document16",
            					"Id": "ContentUnits\/2",
            					"IsComponentUnit": false,
            					"Name": "BodyCopy",
            					"Reusable": false,
            					"TemplateName": "BodyCopy",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Height",
            							"Value": ""
            						}, {
            							"Key": "label",
            							"Value": "Body Copy"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "type",
            							"Value": "xhtml"
            						}],
            						"childName": null,
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": null,
            						"deletedAttributes": null,
            						"nodeName": "BodyCopy",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [],
            						"disabled": false,
            						"nodeValue": "[BodyCopy]",
            						"uniqueId": "0b2eda16-a0ed-47b7-a5e2-2c5d31159036"
            					},
            					"ElementId": "0b2eda16-a0ed-47b7-a5e2-2c5d31159036",
            					"ElementSchemaType": null,
            					"ElementXml": "<BodyCopy type=\"xhtml\" UID=\"0b2eda16-a0ed-47b7-a5e2-2c5d31159036\" label=\"Body Copy\" readonly=\"false\" hidden=\"false\" required=\"false\" Height=\"\">[BodyCopy]<\/BodyCopy>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "",
            					"ComponentSchemaName": "",
            					"ElementName": "AncestorNavigation",
            					"IconName": "document16",
            					"Id": "ContentUnits\/33",
            					"IsComponentUnit": false,
            					"Name": "Bread Crumbs",
            					"Reusable": false,
            					"TemplateName": "AncestorNavigation",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Navigation",
            							"Value": "Ancestors"
            						}, {
            							"Key": "GenerationOrder",
            							"Value": "down"
            						}, {
            							"Key": "StartPage",
            							"Value": "x2"
            						}, {
            							"Key": "MaxNodes",
            							"Value": ""
            						}, {
            							"Key": "MaxDepth",
            							"Value": ""
            						}, {
            							"Key": "Query",
            							"Value": ""
            						}, {
            							"Key": "label",
            							"Value": "Ancestor Navigation"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Navigation"
            						}],
            						"childName": null,
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": null,
            						"deletedAttributes": null,
            						"nodeName": "AncestorNavigation",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "Exports",
            							"nodePosition": -1,
            							"pageBuilderTemplateName": null,
            							"childElements": [],
            							"disabled": false,
            							"nodeValue": "",
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "Ancestors",
            						"uniqueId": "830faa03-1154-4c54-b706-69d06c5893f3"
            					},
            					"ElementId": "830faa03-1154-4c54-b706-69d06c5893f3",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Navigation\" Name=\"AncestorNavigation\" Navigation=\"Ancestors\" UID=\"830faa03-1154-4c54-b706-69d06c5893f3\" label=\"Ancestor Navigation\" readonly=\"false\" hidden=\"false\" required=\"false\" GenerationOrder=\"down\" StartPage=\"x2\" MaxNodes=\"\" MaxDepth=\"\" Query=\"\" \/>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "",
            					"ComponentSchemaName": "",
            					"ElementName": "FeaturedImage",
            					"IconName": "image16",
            					"Id": "ContentUnits\/3",
            					"IsComponentUnit": false,
            					"Name": "Featured Image",
            					"Reusable": true,
            					"TemplateName": "FeaturedImage",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Width",
            							"Value": ""
            						}, {
            							"Key": "Height",
            							"Value": ""
            						}, {
            							"Key": "Border",
            							"Value": ""
            						}, {
            							"Key": "HSpace",
            							"Value": ""
            						}, {
            							"Key": "VSpace",
            							"Value": ""
            						}, {
            							"Key": "Alignment",
            							"Value": ""
            						}, {
            							"Key": "label",
            							"Value": "FeaturedImage"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "type",
            							"Value": "imagefile"
            						}],
            						"childName": null,
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": null,
            						"deletedAttributes": null,
            						"nodeName": "FeaturedImage",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [],
            						"disabled": false,
            						"nodeValue": "logo.png",
            						"uniqueId": "b57f11ef-e6ce-4aa6-8d4f-ccf1264d6ebc"
            					},
            					"ElementId": "b57f11ef-e6ce-4aa6-8d4f-ccf1264d6ebc",
            					"ElementSchemaType": null,
            					"ElementXml": "<FeaturedImage type=\"imagefile\" UID=\"b57f11ef-e6ce-4aa6-8d4f-ccf1264d6ebc\" label=\"FeaturedImage\" readonly=\"false\" hidden=\"false\" required=\"false\" Width=\"\" Height=\"\" Border=\"\" HSpace=\"\" VSpace=\"\" Alignment=\"\">logo.png<\/FeaturedImage>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "",
            					"ComponentSchemaName": "",
            					"ElementName": "Title",
            					"IconName": "document16",
            					"Id": "ContentUnits\/1",
            					"IsComponentUnit": false,
            					"Name": "Title",
            					"Reusable": false,
            					"TemplateName": "Title",
            					"ElementData": {
            						"attributes": [{
            							"Key": "label",
            							"Value": "Title"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "type",
            							"Value": "string"
            						}],
            						"childName": null,
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": null,
            						"deletedAttributes": null,
            						"nodeName": "Title",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [],
            						"disabled": false,
            						"nodeValue": "[Title]",
            						"uniqueId": "88c72bcb-c2bf-451a-86a1-8388e11057ec"
            					},
            					"ElementId": "88c72bcb-c2bf-451a-86a1-8388e11057ec",
            					"ElementSchemaType": null,
            					"ElementXml": "<Title type=\"string\" UID=\"88c72bcb-c2bf-451a-86a1-8388e11057ec\" label=\"Title\" readonly=\"false\" hidden=\"false\" required=\"false\">[Title]<\/Title>"
            				}]
            			},
            			"MobilePresentations": [],
            			"Presentations": []
            		},
            		"systemSettings": {
            			"fileLocations": {
            				"imageUrlPrefix": "",
            				"mediaUrlPrefix": ""
            			}
            		}
            	}
            }
             ]]>
             </code>
             </example>
             </returns>
             <remarks>
             <para>Ingeniux CMS site client uses this operation to obtain data for Page editing</para>
             </remarks>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.GetEmbedDummyData(System.String,System.String)">
             <summary>
             Retrieves dummy Page data based on given Schema. This operation is used to find out what the Page created from a Schema be like, without creating an actual Page.
             </summary>
             <param name="pageName">Name of Dummy Page</param>
             <param name="schemaId">Id of the Schema used to create Page dummy data</param>
             <returns>
            	<para>Very much like the result of GetPageData, except the Page doesn't exist</para>
             <example>
             Sample JSON return
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": {
            		"documentElement": {
            			"attributes": [{
            				"Key": "ID",
            				"Value": ""
            			}, {
            				"Key": "Name",
            				"Value": "Embedded Component"
            			}],
            			"childName": null,
            			"childParentId": null,
            			"childSchemaId": null,
            			"childSchemaName": null,
            			"deletedAttributes": null,
            			"nodeName": "ContactInformation",
            			"nodePosition": 0,
            			"pageBuilderTemplateName": null,
            			"childElements": [{
            				"attributes": [{
            					"Key": "label",
            					"Value": "Title"
            				}, {
            					"Key": "readonly",
            					"Value": "false"
            				}, {
            					"Key": "hidden",
            					"Value": "false"
            				}, {
            					"Key": "required",
            					"Value": "false"
            				}, {
            					"Key": "type",
            					"Value": "string"
            				}],
            				"childName": null,
            				"childParentId": null,
            				"childSchemaId": null,
            				"childSchemaName": null,
            				"deletedAttributes": null,
            				"nodeName": "Title",
            				"nodePosition": 0,
            				"pageBuilderTemplateName": "",
            				"childElements": [],
            				"disabled": false,
            				"nodeValue": "Contact Us",
            				"uniqueId": "f3e7e3dd-d7b8-41ac-9dfe-dc523dd1bb3f"
            			}, {
            				"attributes": [{
            					"Key": "label",
            					"Value": "Company"
            				}, {
            					"Key": "readonly",
            					"Value": "false"
            				}, {
            					"Key": "hidden",
            					"Value": "false"
            				}, {
            					"Key": "required",
            					"Value": "false"
            				}, {
            					"Key": "type",
            					"Value": "string"
            				}],
            				"childName": null,
            				"childParentId": null,
            				"childSchemaId": null,
            				"childSchemaName": null,
            				"deletedAttributes": null,
            				"nodeName": "Company",
            				"nodePosition": 1,
            				"pageBuilderTemplateName": "",
            				"childElements": [],
            				"disabled": false,
            				"nodeValue": "INGENIUX | Web Experience Management",
            				"uniqueId": "cc1aacfb-db22-4a58-9cc5-1247e9af4ca4"
            			}, {
            				"attributes": [{
            					"Key": "label",
            					"Value": "Address"
            				}, {
            					"Key": "readonly",
            					"Value": "false"
            				}, {
            					"Key": "hidden",
            					"Value": "false"
            				}, {
            					"Key": "required",
            					"Value": "false"
            				}, {
            					"Key": "type",
            					"Value": "string"
            				}],
            				"childName": null,
            				"childParentId": null,
            				"childSchemaId": null,
            				"childSchemaName": null,
            				"deletedAttributes": null,
            				"nodeName": "Address",
            				"nodePosition": 2,
            				"pageBuilderTemplateName": "",
            				"childElements": [],
            				"disabled": false,
            				"nodeValue": "1601 2nd Avenue, 5th Floor | Seattle, WA 98101",
            				"uniqueId": "e5bfc29e-54fe-4b47-8d55-2dac4ab68d5d"
            			}, {
            				"attributes": [{
            					"Key": "label",
            					"Value": "Email"
            				}, {
            					"Key": "readonly",
            					"Value": "false"
            				}, {
            					"Key": "hidden",
            					"Value": "false"
            				}, {
            					"Key": "required",
            					"Value": "false"
            				}, {
            					"Key": "type",
            					"Value": "string"
            				}],
            				"childName": null,
            				"childParentId": null,
            				"childSchemaId": null,
            				"childSchemaName": null,
            				"deletedAttributes": null,
            				"nodeName": "Email",
            				"nodePosition": 3,
            				"pageBuilderTemplateName": "",
            				"childElements": [],
            				"disabled": false,
            				"nodeValue": "info@ingeniux.com",
            				"uniqueId": "9cbaefb6-d647-4bd0-b0b4-f5043e51b329"
            			}, {
            				"attributes": [{
            					"Key": "label",
            					"Value": "Phone"
            				}, {
            					"Key": "readonly",
            					"Value": "false"
            				}, {
            					"Key": "hidden",
            					"Value": "false"
            				}, {
            					"Key": "required",
            					"Value": "false"
            				}, {
            					"Key": "type",
            					"Value": "string"
            				}],
            				"childName": null,
            				"childParentId": null,
            				"childSchemaId": null,
            				"childSchemaName": null,
            				"deletedAttributes": null,
            				"nodeName": "Phone",
            				"nodePosition": 4,
            				"pageBuilderTemplateName": "",
            				"childElements": [],
            				"disabled": false,
            				"nodeValue": "206-788-4300",
            				"uniqueId": "8e91d1f4-8487-4ac1-85a0-ccff08f17355"
            			}, {
            				"attributes": [{
            					"Key": "label",
            					"Value": "Web"
            				}, {
            					"Key": "readonly",
            					"Value": "false"
            				}, {
            					"Key": "hidden",
            					"Value": "false"
            				}, {
            					"Key": "required",
            					"Value": "false"
            				}, {
            					"Key": "type",
            					"Value": "string"
            				}],
            				"childName": null,
            				"childParentId": null,
            				"childSchemaId": null,
            				"childSchemaName": null,
            				"deletedAttributes": null,
            				"nodeName": "Web",
            				"nodePosition": 5,
            				"pageBuilderTemplateName": "",
            				"childElements": [],
            				"disabled": false,
            				"nodeValue": "http:\/\/www.ingeniux.com",
            				"uniqueId": "b9ca1ad1-3ed6-4d6a-8433-f11c77c2244c"
            			}],
            			"disabled": false,
            			"nodeValue": null,
            			"uniqueId": null
            		},
            		"errors": [],
            		"metadata": {
            			"properties": {
            				"name": "Embedded%20Component",
            				"allowedCategoryRoots": [],
            				"ancestors": [],
            				"assignedGroup": null,
            				"assignedUser": {
            					"name": "Turtle Master",
            					"email": "",
            					"userId": "INGENIUX\\awang"
            				},
            				"canClaimPage": false,
            				"canTranslate": false,
            				"checkedOut": true,
            				"error": null,
            				"icon": 5,
            				"isAssignedToOtherUser": false,
            				"isEditable": true,
            				"isInWorkflow": false,
            				"justRecycled": false,
            				"languageRootId": "",
            				"lingualMaps": {
            					"clones": [],
            					"master": null
            				},
            				"locale": "",
            				"localeInherited": false,
            				"markedForPublish": false,
            				"markedForPublishAny": false,
            				"markedForPublishPropagated": false,
            				"nextPageId": null,
            				"nextPageIndex": 0,
            				"noDnd": false,
            				"numChildPages": 0,
            				"pageId": "",
            				"parentId": null,
            				"pendingMasterVersion": 0,
            				"referenceProps": {
            					"created": "00010101T08:00:00",
            					"createdBy": null,
            					"endDate": "00010101T00:00:00",
            					"lastModified": "00010101T08:00:00",
            					"lastModifiedBy": null,
            					"publishAs": "",
            					"startDate": "00010101T00:00:00"
            				},
            				"remoteServer": "",
            				"schemaFriendlyName": "Contact Information",
            				"schemaName": "ContactInformation",
            				"schemaOnLatestVersion": true,
            				"securityLevel": 2,
            				"userCanCopyPage": true,
            				"workflow": null
            			},
            			"tabData": {
            				"contentUnitsManagerTab": false,
            				"customTabs": [{
            					"Key": "CustomTabSettings\/1",
            					"Value": {
            						"name": "Analytics",
            						"id": "CustomTabSettings\/1",
            						"allowPinning": false,
            						"appendPageId": true,
            						"autoSelect": false,
            						"icon": "images\/icons\/default\/analytic16.png",
            						"isGlobal": true,
            						"resourceId": "analytics_title",
            						"show": true,
            						"url": "analytics\/default.aspx"
            					}
            				}],
            				"editTab": true,
            				"historyTab": true,
            				"overviewTab": false,
            				"pcrManagerTab": false,
            				"previewTab": false,
            				"publishManagerTab": false,
            				"publishMonitorTab": false,
            				"redirectsTab": false,
            				"reportsTab": false,
            				"schemaDesignerTab": false,
            				"siteDefinitionLocalizationTab": false,
            				"siteSearcherTab": false,
            				"systemOptionsTab": false,
            				"taxonomyAdminTab": false,
            				"taxonomyTab": true,
            				"translateTab": false,
            				"userManagerTab": false,
            				"workFlowAdministratorTab": false,
            				"xmlTab": true
            			}
            		},
            		"presentations": {
            			"AllPubTargetsName": "- All Publishing Targets -",
            			"GlobalContentUnits": {
            				"ComponentContentUnits": [{
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/227",
            					"ComponentSchemaName": "",
            					"ElementName": "ContactUs",
            					"IconName": "5",
            					"Id": "ComponentContentUnits\/227",
            					"IsComponentUnit": true,
            					"Name": "Contact Us",
            					"Reusable": false,
            					"TemplateName": "ContactUs",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "ContactUs"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Contact Us"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "ContactUs",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "ContactInformation",
            						"deletedAttributes": null,
            						"nodeName": "ContactUs",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "ContactUs"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "ContactInformation",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "label",
            									"Value": "Title"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Title",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "Contact Us",
            								"uniqueId": "2abedeae62ae45621decdc263c9eadd8"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Company"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Company",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "INGENIUX | Web Experience Management",
            								"uniqueId": "68e792a32ee940e39174f57f455fe839"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Address"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Address",
            								"nodePosition": 2,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "1601 2nd Avenue, 5th Floor | Seattle, WA 98101",
            								"uniqueId": "6c13023cdb8db1f26f5308f9f6dfbe59"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Email"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Email",
            								"nodePosition": 3,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "info@ingeniux.com",
            								"uniqueId": "931009fc717f4d211254f888a7e85a47"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Phone"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Phone",
            								"nodePosition": 4,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "1 (206) 788-4300",
            								"uniqueId": "af03d546e7604118269dbd00afbe6a2f"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Web"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Web",
            								"nodePosition": 5,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "http:\/\/www.ingeniux.com",
            								"uniqueId": "5fa33a76f7481f537777648303783e90"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "5678ff8e-77d5-4abb-8eeb-66a5b1e90b77"
            					},
            					"ElementId": "5678ff8e-77d5-4abb-8eeb-66a5b1e90b77",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"ContactUs\" UID=\"5678ff8e-77d5-4abb-8eeb-66a5b1e90b77\" label=\"Contact Us\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><ContactInformation ID=\"\" Name=\"ContactUs\" IsComponent=\"true\"><Title type=\"string\" UID=\"2abedeae62ae45621decdc263c9eadd8\" label=\"Title\" readonly=\"false\" hidden=\"false\" required=\"false\">Contact Us<\/Title><Company type=\"string\" UID=\"68e792a32ee940e39174f57f455fe839\" label=\"Company\" readonly=\"false\" hidden=\"false\" required=\"false\">INGENIUX | Web Experience Management<\/Company><Address type=\"string\" UID=\"6c13023cdb8db1f26f5308f9f6dfbe59\" label=\"Address\" readonly=\"false\" hidden=\"false\" required=\"false\">1601 2nd Avenue, 5th Floor | Seattle, WA 98101<\/Address><Email type=\"string\" UID=\"931009fc717f4d211254f888a7e85a47\" label=\"Email\" readonly=\"false\" hidden=\"false\" required=\"false\">info@ingeniux.com<\/Email><Phone type=\"string\" UID=\"af03d546e7604118269dbd00afbe6a2f\" label=\"Phone\" readonly=\"false\" hidden=\"false\" required=\"false\">1 (206) 788-4300<\/Phone><Web type=\"string\" UID=\"5fa33a76f7481f537777648303783e90\" label=\"Web\" readonly=\"false\" hidden=\"false\" required=\"false\">http:\/\/www.ingeniux.com<\/Web><\/ContactInformation><\/xPower>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/97",
            					"ComponentSchemaName": "",
            					"ElementName": "FeatureItem",
            					"IconName": "2",
            					"Id": "ComponentContentUnits\/65",
            					"IsComponentUnit": true,
            					"Name": "Feature Item",
            					"Reusable": true,
            					"TemplateName": "FeatureItem",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "FeatureItem"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Feature Item"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "FeatureItem",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "FeatureItem",
            						"deletedAttributes": null,
            						"nodeName": "FeatureItem",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "FeatureItem"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "FeatureItem",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "label",
            									"Value": "Title"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Title",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "Feature",
            								"uniqueId": "23934a87ffc7cbfd051393593ff8752b"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Body"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Body",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "At vero eos et accusamus et iusto odio dignissimos dolores et quas molestias excepturi sint occaecati cupiditate non provident.",
            								"uniqueId": "0c1ecb660679d445df08a880fb2a5898"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Icon Class"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "IconClass",
            								"nodePosition": 2,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "8e2672c052c42cdd2f4d52ebd0b66f89"
            							}, {
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Link",
            									"Value": ""
            								}, {
            									"Key": "LinkText",
            									"Value": "Read More"
            								}, {
            									"Key": "URL",
            									"Value": ""
            								}, {
            									"Key": "Target",
            									"Value": ""
            								}, {
            									"Key": "label",
            									"Value": "Link"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "Type",
            									"Value": "Link"
            								}, {
            									"Key": "pageName",
            									"Value": ""
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Link",
            								"nodePosition": 3,
            								"pageBuilderTemplateName": "",
            								"childElements": [{
            									"attributes": [],
            									"childName": null,
            									"childParentId": null,
            									"childSchemaId": null,
            									"childSchemaName": null,
            									"deletedAttributes": null,
            									"nodeName": "Exports",
            									"nodePosition": -1,
            									"pageBuilderTemplateName": null,
            									"childElements": [],
            									"disabled": false,
            									"nodeValue": "",
            									"uniqueId": null
            								}],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "43101542100ac938d15b85a40808b236"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "db4ed209-edb5-4d4b-9376-2b59270b2672"
            					},
            					"ElementId": "db4ed209-edb5-4d4b-9376-2b59270b2672",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"FeatureItem\" UID=\"db4ed209-edb5-4d4b-9376-2b59270b2672\" label=\"Feature Item\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><FeatureItem ID=\"\" Name=\"FeatureItem\" IsComponent=\"true\"><Title type=\"string\" UID=\"23934a87ffc7cbfd051393593ff8752b\" label=\"Title\" readonly=\"false\" hidden=\"false\" required=\"false\">Feature<\/Title><Body type=\"string\" UID=\"0c1ecb660679d445df08a880fb2a5898\" label=\"Body\" readonly=\"false\" hidden=\"false\" required=\"false\">At vero eos et accusamus et iusto odio dignissimos dolores et quas molestias excepturi sint occaecati cupiditate non provident.<\/Body><IconClass type=\"string\" UID=\"8e2672c052c42cdd2f4d52ebd0b66f89\" label=\"Icon Class\" readonly=\"false\" hidden=\"false\" required=\"false\"><\/IconClass><xPower Type=\"Link\" Name=\"Link\" UID=\"43101542100ac938d15b85a40808b236\" label=\"Link\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" LinkText=\"Read More\" URL=\"\" Target=\"\" Link=\"\" \/><\/FeatureItem><\/xPower>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/225",
            					"ComponentSchemaName": "",
            					"ElementName": "FeaturePhoto",
            					"IconName": "3",
            					"Id": "ComponentContentUnits\/193",
            					"IsComponentUnit": true,
            					"Name": "Feature Photo",
            					"Reusable": true,
            					"TemplateName": "FeaturePhoto",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "FeaturePhoto"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Feature Photo"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "FeaturePhoto",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "FeaturePhoto",
            						"deletedAttributes": null,
            						"nodeName": "FeaturePhoto",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "FeaturePhoto"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "FeaturePhoto",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "label",
            									"Value": "Title"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Title",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "Feature Photo",
            								"uniqueId": "873c15e695d7eb83d1ae37bfc1a7ddfb"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Description"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Description",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "At vero eos et accusamus et iusto odio dignissimos dolores et quas molestias excepturi sint occaecati cupiditate non provident.",
            								"uniqueId": "275bb18fd5f548129e4021b80b65ea85"
            							}, {
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Width",
            									"Value": ""
            								}, {
            									"Key": "Height",
            									"Value": ""
            								}, {
            									"Key": "Border",
            									"Value": ""
            								}, {
            									"Key": "HSpace",
            									"Value": ""
            								}, {
            									"Key": "VSpace",
            									"Value": ""
            								}, {
            									"Key": "Alignment",
            									"Value": ""
            								}, {
            									"Key": "label",
            									"Value": "Photo"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "imagefile"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Photo",
            								"nodePosition": 2,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "main\/1.jpg",
            								"uniqueId": "d524583279f8b1a9e57d783da26c7628"
            							}, {
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Link",
            									"Value": ""
            								}, {
            									"Key": "LinkText",
            									"Value": "Read More"
            								}, {
            									"Key": "URL",
            									"Value": ""
            								}, {
            									"Key": "Target",
            									"Value": ""
            								}, {
            									"Key": "label",
            									"Value": "Link"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "Type",
            									"Value": "Link"
            								}, {
            									"Key": "pageName",
            									"Value": ""
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Link",
            								"nodePosition": 3,
            								"pageBuilderTemplateName": "",
            								"childElements": [{
            									"attributes": [],
            									"childName": null,
            									"childParentId": null,
            									"childSchemaId": null,
            									"childSchemaName": null,
            									"deletedAttributes": null,
            									"nodeName": "Exports",
            									"nodePosition": -1,
            									"pageBuilderTemplateName": null,
            									"childElements": [],
            									"disabled": false,
            									"nodeValue": "",
            									"uniqueId": null
            								}],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "2337c435b58e2f7acb91f23e3df47ee0"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "ed739471-ecdd-427c-a82a-c5019cc506e9"
            					},
            					"ElementId": "ed739471-ecdd-427c-a82a-c5019cc506e9",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"FeaturePhoto\" UID=\"ed739471-ecdd-427c-a82a-c5019cc506e9\" label=\"Feature Photo\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><FeaturePhoto ID=\"\" Name=\"FeaturePhoto\" IsComponent=\"true\"><Title type=\"string\" UID=\"873c15e695d7eb83d1ae37bfc1a7ddfb\" label=\"Title\" readonly=\"false\" hidden=\"false\" required=\"false\">Feature Photo<\/Title><Description type=\"string\" UID=\"275bb18fd5f548129e4021b80b65ea85\" label=\"Description\" readonly=\"false\" hidden=\"false\" required=\"false\">At vero eos et accusamus et iusto odio dignissimos dolores et quas molestias excepturi sint occaecati cupiditate non provident.<\/Description><Photo type=\"imagefile\" UID=\"d524583279f8b1a9e57d783da26c7628\" label=\"Photo\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" Width=\"\" Height=\"\" Border=\"\" HSpace=\"\" VSpace=\"\" Alignment=\"\">main\/1.jpg<\/Photo><xPower Type=\"Link\" Name=\"Link\" UID=\"2337c435b58e2f7acb91f23e3df47ee0\" label=\"Link\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" LinkText=\"Read More\" URL=\"\" Target=\"\" Link=\"\" \/><\/FeaturePhoto><\/xPower>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/FormJQuery",
            					"ComponentSchemaName": "",
            					"ElementName": "Form",
            					"IconName": "11",
            					"Id": "ComponentContentUnits\/257",
            					"IsComponentUnit": true,
            					"Name": "Form - JQuery",
            					"Reusable": true,
            					"TemplateName": "Form",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "Form"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Form - JQuery"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "Form",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "FormJQuery",
            						"deletedAttributes": null,
            						"nodeName": "Form",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "Form"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "FormJQuery",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "label",
            									"Value": "Form Name"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "true"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "name",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "0981aeacfac08fc60c6ebf2962d91b9f"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Form Class"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "FormClass",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "c3d4ffa8171f49d0bbd04ab6d55aa504"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Form Description (for internal identification)"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "desc",
            								"nodePosition": 2,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "3a5140c950f518b023c055ba17277924"
            							}, {
            								"attributes": [{
            									"Key": "values",
            									"Value": "post get"
            								}, {
            									"Key": "label",
            									"Value": "Method"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "true"
            								}, {
            									"Key": "type",
            									"Value": "enumeration"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "method",
            								"nodePosition": 3,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "post",
            								"uniqueId": "ccc99542ad20ff0e67d330a0254a0225"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Action URL"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "true"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "actionURL",
            								"nodePosition": 4,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "411dc524dd1c61fb084ef4bae05bc9e3"
            							}, {
            								"attributes": [{
            									"Key": "values",
            									"Value": "_blank _parent _self _search _top"
            								}, {
            									"Key": "label",
            									"Value": "target"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "enumeration"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "target",
            								"nodePosition": 5,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "_self",
            								"uniqueId": "bd0b48f45d2faf3f800acb4cbb36ba2b"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "AJAX Request"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "boolean"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "AJAXRequest",
            								"nodePosition": 6,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "790a96b2f582250fb3db972f2dd359aa"
            							}, {
            								"attributes": [{
            									"Key": "values",
            									"Value": "Top_of_Field Left_of_Field"
            								}, {
            									"Key": "label",
            									"Value": "Form Appearance: Position of Field Labels"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "enumeration"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "labelPosition",
            								"nodePosition": 7,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "Top_of_Field",
            								"uniqueId": "16100ef0336bf72df47a803c70274b8d"
            							}, {
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Enclosed",
            									"Value": "false"
            								}, {
            									"Key": "AllowEnclosureChange",
            									"Value": "false"
            								}, {
            									"Key": "label",
            									"Value": "Form Input Fields"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "Type",
            									"Value": "List"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "FormInputFields",
            								"nodePosition": 8,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "652964eaa5a722aab251f0c0d8a07ada"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "6a76f6e7-756d-4084-beee-42d109e76fd1"
            					},
            					"ElementId": "6a76f6e7-756d-4084-beee-42d109e76fd1",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"Form\" UID=\"6a76f6e7-756d-4084-beee-42d109e76fd1\" label=\"Form - JQuery\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><FormJQuery ID=\"\" Name=\"Form\" IsComponent=\"true\"><name type=\"string\" UID=\"0981aeacfac08fc60c6ebf2962d91b9f\" label=\"Form Name\" readonly=\"false\" hidden=\"false\" required=\"true\"><\/name><FormClass type=\"string\" UID=\"c3d4ffa8171f49d0bbd04ab6d55aa504\" label=\"Form Class\" readonly=\"false\" hidden=\"false\" required=\"false\"><\/FormClass><desc type=\"string\" UID=\"3a5140c950f518b023c055ba17277924\" label=\"Form Description (for internal identification)\" readonly=\"false\" hidden=\"false\" required=\"false\"><\/desc><method type=\"enumeration\" UID=\"ccc99542ad20ff0e67d330a0254a0225\" label=\"Method\" readonly=\"false\" hidden=\"false\" required=\"true\" values=\"post get\">post<\/method><actionURL type=\"string\" UID=\"411dc524dd1c61fb084ef4bae05bc9e3\" label=\"Action URL\" readonly=\"false\" hidden=\"false\" required=\"true\"><\/actionURL><target type=\"enumeration\" UID=\"bd0b48f45d2faf3f800acb4cbb36ba2b\" label=\"target\" readonly=\"false\" hidden=\"false\" required=\"false\" values=\"_blank _parent _self _search _top\">_self<\/target><AJAXRequest type=\"boolean\" UID=\"790a96b2f582250fb3db972f2dd359aa\" label=\"AJAX Request\" readonly=\"false\" hidden=\"false\" required=\"false\"><\/AJAXRequest><labelPosition type=\"enumeration\" UID=\"16100ef0336bf72df47a803c70274b8d\" label=\"Form Appearance: Position of Field Labels\" readonly=\"false\" hidden=\"false\" required=\"false\" values=\"Top_of_Field Left_of_Field\">Top_of_Field<\/labelPosition><xPower Type=\"List\" Name=\"FormInputFields\" UID=\"652964eaa5a722aab251f0c0d8a07ada\" label=\"Form Input Fields\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" Enclosed=\"false\" AllowEnclosureChange=\"false\" ItemName=\"Input\" ItemLabel=\"\" ItemType=\"Component\" \/><\/FormJQuery><\/xPower>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/FormBuilder_Captcha",
            					"ComponentSchemaName": "",
            					"ElementName": "FormInput_Captcha",
            					"IconName": "9",
            					"Id": "ComponentContentUnits\/291",
            					"IsComponentUnit": true,
            					"Name": "Form Builder - Captcha",
            					"Reusable": true,
            					"TemplateName": "FormBuilder_Captcha",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "FormInput_Captcha"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Form Builder - Captcha"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "FormInput_Captcha",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "FormBuilder_Captcha",
            						"deletedAttributes": null,
            						"nodeName": "FormInput_Captcha",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "FormInput_Captcha"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "FormBuilder_Captcha",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "label",
            									"Value": "Key"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Key",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "8af2095bb75a835dd14e719f1c3f66ce"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Recaptcha ID"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "RecaptchaID",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "recaptcha_div",
            								"uniqueId": "c1938a44123d939a8dacd75580f8f387"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "25a4d41f-51b9-4e33-a170-e4ef80716e2c"
            					},
            					"ElementId": "25a4d41f-51b9-4e33-a170-e4ef80716e2c",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"FormInput_Captcha\" UID=\"25a4d41f-51b9-4e33-a170-e4ef80716e2c\" label=\"Form Builder - Captcha\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><FormBuilder_Captcha ID=\"\" Name=\"FormInput_Captcha\" IsComponent=\"true\"><Key type=\"string\" UID=\"8af2095bb75a835dd14e719f1c3f66ce\" label=\"Key\" readonly=\"false\" hidden=\"false\" required=\"false\"><\/Key><RecaptchaID type=\"string\" UID=\"c1938a44123d939a8dacd75580f8f387\" label=\"Recaptcha ID\" readonly=\"false\" hidden=\"false\" required=\"false\">recaptcha_div<\/RecaptchaID><\/FormBuilder_Captcha><\/xPower>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/FormBuilder_HtmlInput",
            					"ComponentSchemaName": "",
            					"ElementName": "FormInput_HtmlInput",
            					"IconName": "9",
            					"Id": "ComponentContentUnits\/290",
            					"IsComponentUnit": true,
            					"Name": "Form Builder - Html Input",
            					"Reusable": true,
            					"TemplateName": "FormBuilder_HtmlInput",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "FormInput_HtmlInput"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Form Builder - Html Input"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "FormInput_HtmlInput",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "FormBuilder_HtmlInput",
            						"deletedAttributes": null,
            						"nodeName": "FormInput_HtmlInput",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "FormInput_HtmlInput"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "FormBuilder_HtmlInput",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "Height",
            									"Value": ""
            								}, {
            									"Key": "label",
            									"Value": "Html Input"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "xhtml"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "HtmlInput",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "[label]",
            								"uniqueId": "418d59abf6d66a790c0d5a76ed52540c"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "d1ee048b-dd49-44a4-b02a-587c126bc696"
            					},
            					"ElementId": "d1ee048b-dd49-44a4-b02a-587c126bc696",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"FormInput_HtmlInput\" UID=\"d1ee048b-dd49-44a4-b02a-587c126bc696\" label=\"Form Builder - Html Input\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><FormBuilder_HtmlInput ID=\"\" Name=\"FormInput_HtmlInput\" IsComponent=\"true\"><HtmlInput type=\"xhtml\" UID=\"418d59abf6d66a790c0d5a76ed52540c\" label=\"Html Input\" readonly=\"false\" hidden=\"false\" required=\"false\" Height=\"\">[label]<\/HtmlInput><\/FormBuilder_HtmlInput><\/xPower>"
            				}, {
            					"AllowedSchemas": ["FormJQuery"],
            					"ComponentSchemaId": "schemas\/FormBuilder_Input",
            					"ComponentSchemaName": "",
            					"ElementName": "FormInput",
            					"IconName": "9",
            					"Id": "ComponentContentUnits\/289",
            					"IsComponentUnit": true,
            					"Name": "Form Builder - Input",
            					"Reusable": true,
            					"TemplateName": "FormInput",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "FormInput"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Form Builder - Input"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "FormInput",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "FormBuilder_Input",
            						"deletedAttributes": null,
            						"nodeName": "FormInput",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "FormInput"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "FormBuilder_Input",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "label",
            									"Value": "Form field name"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "true"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "name",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "53ce0385f68ba9e418c0be481b4677aa"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Form field label"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "caption",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "332ca7347ed71056342292d832683260"
            							}, {
            								"attributes": [{
            									"Key": "values",
            									"Value": "text textarea select multi-select button checkbox hidden password radio reset submit"
            								}, {
            									"Key": "label",
            									"Value": "Form field type"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "enumeration"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "type",
            								"nodePosition": 2,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "00229ac7d98712c7ea762380c9d0ad6e"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Form field value"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "value",
            								"nodePosition": 3,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "e547b9e22a20fe4b8b2fec1c365b412e"
            							}, {
            								"attributes": [{
            									"Key": "MaxChoices",
            									"Value": ""
            								}, {
            									"Key": "PageSize",
            									"Value": "10"
            								}, {
            									"Key": "Values",
            									"Value": ""
            								}, {
            									"Key": "label",
            									"Value": "Type of validation for this field"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "multiselect"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "validationType",
            								"nodePosition": 4,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "ea5e9133cd2ae36bd4d5efbc63bb8603"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "The CSS class name for this field"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "cssClass",
            								"nodePosition": 5,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "02690a79b162e70d5105d51eec0b8d85"
            							}, {
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Enclosed",
            									"Value": "false"
            								}, {
            									"Key": "AllowEnclosureChange",
            									"Value": "false"
            								}, {
            									"Key": "label",
            									"Value": "Additional Validation Info"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "Type",
            									"Value": "GroupStart"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "AdditionalValidationInfo",
            								"nodePosition": 6,
            								"pageBuilderTemplateName": "",
            								"childElements": [{
            									"attributes": [{
            										"Key": "label",
            										"Value": "Trigger"
            									}, {
            										"Key": "readonly",
            										"Value": "false"
            									}, {
            										"Key": "hidden",
            										"Value": "false"
            									}, {
            										"Key": "required",
            										"Value": "false"
            									}, {
            										"Key": "type",
            										"Value": "boolean"
            									}],
            									"childName": null,
            									"childParentId": null,
            									"childSchemaId": null,
            									"childSchemaName": null,
            									"deletedAttributes": null,
            									"nodeName": "Trigger",
            									"nodePosition": 0,
            									"pageBuilderTemplateName": "",
            									"childElements": [],
            									"disabled": false,
            									"nodeValue": null,
            									"uniqueId": "b5941360-7df3-4d37-9f69-aafeeee07c25"
            								}, {
            									"attributes": [{
            										"Key": "label",
            										"Value": "min"
            									}, {
            										"Key": "readonly",
            										"Value": "false"
            									}, {
            										"Key": "hidden",
            										"Value": "false"
            									}, {
            										"Key": "required",
            										"Value": "false"
            									}, {
            										"Key": "type",
            										"Value": "string"
            									}],
            									"childName": null,
            									"childParentId": null,
            									"childSchemaId": null,
            									"childSchemaName": null,
            									"deletedAttributes": null,
            									"nodeName": "min",
            									"nodePosition": 1,
            									"pageBuilderTemplateName": "",
            									"childElements": [],
            									"disabled": false,
            									"nodeValue": null,
            									"uniqueId": "9ba3cf6b-d7ce-4ac5-9db9-403c0bb763c4"
            								}, {
            									"attributes": [{
            										"Key": "label",
            										"Value": "max"
            									}, {
            										"Key": "readonly",
            										"Value": "false"
            									}, {
            										"Key": "hidden",
            										"Value": "false"
            									}, {
            										"Key": "required",
            										"Value": "false"
            									}, {
            										"Key": "type",
            										"Value": "string"
            									}],
            									"childName": null,
            									"childParentId": null,
            									"childSchemaId": null,
            									"childSchemaName": null,
            									"deletedAttributes": null,
            									"nodeName": "max",
            									"nodePosition": 2,
            									"pageBuilderTemplateName": "",
            									"childElements": [],
            									"disabled": false,
            									"nodeValue": null,
            									"uniqueId": "901a1453-ceb6-4495-bf24-592656dd56a0"
            								}, {
            									"attributes": [{
            										"Key": "label",
            										"Value": "Validation Error Message"
            									}, {
            										"Key": "readonly",
            										"Value": "false"
            									}, {
            										"Key": "hidden",
            										"Value": "false"
            									}, {
            										"Key": "required",
            										"Value": "false"
            									}, {
            										"Key": "type",
            										"Value": "string"
            									}],
            									"childName": null,
            									"childParentId": null,
            									"childSchemaId": null,
            									"childSchemaName": null,
            									"deletedAttributes": null,
            									"nodeName": "ValidationErrorMessage",
            									"nodePosition": 3,
            									"pageBuilderTemplateName": "",
            									"childElements": [],
            									"disabled": false,
            									"nodeValue": null,
            									"uniqueId": "dc01c153-0da3-47e0-b934-a36ac7afbc6d"
            								}],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "15480383-21ca-4099-b5ce-d2b70b4c9d42"
            							}, {
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Enclosed",
            									"Value": "false"
            								}, {
            									"Key": "AllowEnclosureChange",
            									"Value": "false"
            								}, {
            									"Key": "label",
            									"Value": "Child Options"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "Type",
            									"Value": "GroupStart"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "ChildOptions",
            								"nodePosition": 7,
            								"pageBuilderTemplateName": "",
            								"childElements": [{
            									"attributes": [{
            										"Key": "Expanded",
            										"Value": "false"
            									}, {
            										"Key": "Navigation",
            										"Value": "Children"
            									}, {
            										"Key": "GenerationOrder",
            										"Value": "down"
            									}, {
            										"Key": "StartPage",
            										"Value": ""
            									}, {
            										"Key": "MaxNodes",
            										"Value": ""
            									}, {
            										"Key": "MaxDepth",
            										"Value": ""
            									}, {
            										"Key": "Query",
            										"Value": ""
            									}, {
            										"Key": "label",
            										"Value": "Options"
            									}, {
            										"Key": "readonly",
            										"Value": "false"
            									}, {
            										"Key": "hidden",
            										"Value": "false"
            									}, {
            										"Key": "required",
            										"Value": "false"
            									}, {
            										"Key": "Type",
            										"Value": "Navigation"
            									}],
            									"childName": null,
            									"childParentId": null,
            									"childSchemaId": null,
            									"childSchemaName": null,
            									"deletedAttributes": null,
            									"nodeName": "Options",
            									"nodePosition": 0,
            									"pageBuilderTemplateName": "",
            									"childElements": [{
            										"attributes": [],
            										"childName": null,
            										"childParentId": null,
            										"childSchemaId": null,
            										"childSchemaName": null,
            										"deletedAttributes": null,
            										"nodeName": "Exports",
            										"nodePosition": -1,
            										"pageBuilderTemplateName": null,
            										"childElements": [],
            										"disabled": false,
            										"nodeValue": "",
            										"uniqueId": null
            									}],
            									"disabled": false,
            									"nodeValue": "Children",
            									"uniqueId": "efd397be-f86e-4c3d-b3e9-06472d42ac3e"
            								}, {
            									"attributes": [{
            										"Key": "Component",
            										"Value": ""
            									}, {
            										"Key": "CompTypes",
            										"Value": "DbQuery;DBQuery"
            									}, {
            										"Key": "WrappedUp",
            										"Value": "false"
            									}, {
            										"Key": "AllowWrappingChange",
            										"Value": "false"
            									}, {
            										"Key": "label",
            										"Value": "Options from Database"
            									}, {
            										"Key": "readonly",
            										"Value": "false"
            									}, {
            										"Key": "hidden",
            										"Value": "false"
            									}, {
            										"Key": "required",
            										"Value": "false"
            									}, {
            										"Key": "Type",
            										"Value": "Component"
            									}, {
            										"Key": "componentName",
            										"Value": ""
            									}],
            									"childName": null,
            									"childParentId": null,
            									"childSchemaId": null,
            									"childSchemaName": null,
            									"deletedAttributes": null,
            									"nodeName": "OptionsfromDatabase",
            									"nodePosition": 1,
            									"pageBuilderTemplateName": "",
            									"childElements": [],
            									"disabled": false,
            									"nodeValue": "",
            									"uniqueId": "7ffdbdd9-4115-44d7-ad97-0c179b50ce27"
            								}],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "9a9734d9-a18f-4988-b75d-17e3df8302dc"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Trigger"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "boolean"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Trigger",
            								"nodePosition": 8,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "0eac6aa3f5cb1a3345049ec11db19b5a"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "min"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "min",
            								"nodePosition": 9,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "25da34a04954190bfe065b2097d2bd63"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "max"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "max",
            								"nodePosition": 10,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "c456b990aeed5d548df1515cb0ae5f8c"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Validation Error Message"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "ValidationErrorMessage",
            								"nodePosition": 11,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "a018277251c5dae5f46e672e4fd68ee3"
            							}, {
            								"attributes": [{
            									"Key": "Navigation",
            									"Value": "Children"
            								}, {
            									"Key": "GenerationOrder",
            									"Value": "down"
            								}, {
            									"Key": "StartPage",
            									"Value": ""
            								}, {
            									"Key": "MaxNodes",
            									"Value": ""
            								}, {
            									"Key": "MaxDepth",
            									"Value": ""
            								}, {
            									"Key": "Query",
            									"Value": ""
            								}, {
            									"Key": "label",
            									"Value": "Options"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "Type",
            									"Value": "Navigation"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Options",
            								"nodePosition": 12,
            								"pageBuilderTemplateName": "",
            								"childElements": [{
            									"attributes": [],
            									"childName": null,
            									"childParentId": null,
            									"childSchemaId": null,
            									"childSchemaName": null,
            									"deletedAttributes": null,
            									"nodeName": "Exports",
            									"nodePosition": -1,
            									"pageBuilderTemplateName": null,
            									"childElements": [],
            									"disabled": false,
            									"nodeValue": "",
            									"uniqueId": null
            								}],
            								"disabled": false,
            								"nodeValue": "Children",
            								"uniqueId": "91c23370157cd20824e047c4578c8cae"
            							}, {
            								"attributes": [{
            									"Key": "Component",
            									"Value": ""
            								}, {
            									"Key": "CompTypes",
            									"Value": "DbQuery;DBQuery"
            								}, {
            									"Key": "WrappedUp",
            									"Value": "false"
            								}, {
            									"Key": "AllowWrappingChange",
            									"Value": "false"
            								}, {
            									"Key": "label",
            									"Value": "Options from Database"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "Type",
            									"Value": "Component"
            								}, {
            									"Key": "componentName",
            									"Value": ""
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "OptionsfromDatabase",
            								"nodePosition": 13,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "f2d165971b8c7866219210856a78e729"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "f328ec66-e7d9-4fba-b7bb-19942bd23ec5"
            					},
            					"ElementId": "f328ec66-e7d9-4fba-b7bb-19942bd23ec5",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"FormInput\" UID=\"f328ec66-e7d9-4fba-b7bb-19942bd23ec5\" label=\"Form Builder - Input\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><FormBuilder_Input ID=\"\" Name=\"FormInput\" IsComponent=\"true\"><name type=\"string\" UID=\"53ce0385f68ba9e418c0be481b4677aa\" label=\"Form field name\" readonly=\"false\" hidden=\"false\" required=\"true\"><\/name><caption type=\"string\" UID=\"332ca7347ed71056342292d832683260\" label=\"Form field label\" readonly=\"false\" hidden=\"false\" required=\"false\"><\/caption><type type=\"enumeration\" UID=\"00229ac7d98712c7ea762380c9d0ad6e\" label=\"Form field type\" readonly=\"false\" hidden=\"false\" required=\"false\" values=\"text textarea select multi-select button checkbox hidden password radio reset submit\"><\/type><value type=\"string\" UID=\"e547b9e22a20fe4b8b2fec1c365b412e\" label=\"Form field value\" readonly=\"false\" hidden=\"false\" required=\"false\"><\/value><validationType type=\"multiselect\" UID=\"ea5e9133cd2ae36bd4d5efbc63bb8603\" label=\"Type of validation for this field\" readonly=\"false\" hidden=\"false\" required=\"false\" MaxChoices=\"\" PageSize=\"10\" Values=\"\"><\/validationType><cssClass type=\"string\" UID=\"02690a79b162e70d5105d51eec0b8d85\" label=\"The CSS class name for this field\" readonly=\"false\" hidden=\"false\" required=\"false\"><\/cssClass><xPower Type=\"GroupStart\" Name=\"AdditionalValidationInfo\" UID=\"15480383-21ca-4099-b5ce-d2b70b4c9d42\" label=\"Additional Validation Info\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" Enclosed=\"false\" AllowEnclosureChange=\"false\"><Trigger type=\"boolean\" UID=\"b5941360-7df3-4d37-9f69-aafeeee07c25\" label=\"Trigger\" readonly=\"false\" hidden=\"false\" required=\"false\" \/><min type=\"string\" UID=\"9ba3cf6b-d7ce-4ac5-9db9-403c0bb763c4\" label=\"min\" readonly=\"false\" hidden=\"false\" required=\"false\" \/><max type=\"string\" UID=\"901a1453-ceb6-4495-bf24-592656dd56a0\" label=\"max\" readonly=\"false\" hidden=\"false\" required=\"false\" \/><ValidationErrorMessage type=\"string\" UID=\"dc01c153-0da3-47e0-b934-a36ac7afbc6d\" label=\"Validation Error Message\" readonly=\"false\" hidden=\"false\" required=\"false\" \/><\/xPower><xPower Type=\"GroupStart\" Name=\"ChildOptions\" UID=\"9a9734d9-a18f-4988-b75d-17e3df8302dc\" label=\"Child Options\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" Enclosed=\"false\" AllowEnclosureChange=\"false\"><xPower Type=\"Navigation\" Name=\"Options\" Navigation=\"Children\" UID=\"efd397be-f86e-4c3d-b3e9-06472d42ac3e\" label=\"Options\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" GenerationOrder=\"down\" StartPage=\"\" MaxNodes=\"\" MaxDepth=\"\" Query=\"\" \/><xPower Type=\"Component\" Name=\"OptionsfromDatabase\" UID=\"7ffdbdd9-4115-44d7-ad97-0c179b50ce27\" label=\"Options from Database\" readonly=\"false\" hidden=\"false\" required=\"false\" CompTypes=\"DbQuery;DBQuery\" WrappedUp=\"false\" AllowWrappingChange=\"false\" Embedded=\"false\" \/><\/xPower><Trigger type=\"boolean\" UID=\"0eac6aa3f5cb1a3345049ec11db19b5a\" label=\"Trigger\" readonly=\"false\" hidden=\"false\" required=\"false\"><\/Trigger><min type=\"string\" UID=\"25da34a04954190bfe065b2097d2bd63\" label=\"min\" readonly=\"false\" hidden=\"false\" required=\"false\"><\/min><max type=\"string\" UID=\"c456b990aeed5d548df1515cb0ae5f8c\" label=\"max\" readonly=\"false\" hidden=\"false\" required=\"false\"><\/max><ValidationErrorMessage type=\"string\" UID=\"a018277251c5dae5f46e672e4fd68ee3\" label=\"Validation Error Message\" readonly=\"false\" hidden=\"false\" required=\"false\"><\/ValidationErrorMessage><xPower Type=\"Navigation\" Name=\"Options\" Navigation=\"Children\" UID=\"91c23370157cd20824e047c4578c8cae\" label=\"Options\" readonly=\"false\" hidden=\"false\" required=\"false\" GenerationOrder=\"down\" StartPage=\"\" MaxNodes=\"\" MaxDepth=\"\" Query=\"\" \/><xPower Type=\"Component\" Name=\"OptionsfromDatabase\" UID=\"f2d165971b8c7866219210856a78e729\" label=\"Options from Database\" readonly=\"false\" hidden=\"false\" required=\"false\" CompTypes=\"DbQuery;DBQuery\" WrappedUp=\"false\" AllowWrappingChange=\"false\" Embedded=\"false\" \/><\/FormBuilder_Input><\/xPower>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/66",
            					"ComponentSchemaName": "",
            					"ElementName": "HomeSlider",
            					"IconName": "6",
            					"Id": "ComponentContentUnits\/33",
            					"IsComponentUnit": true,
            					"Name": "Home Slider",
            					"Reusable": false,
            					"TemplateName": "HomeSlider",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "HomeSlider"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Home Slider"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "HomeSlider",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "HomeSlider",
            						"deletedAttributes": null,
            						"nodeName": "HomeSlider",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "HomeSlider"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "HomeSlider",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Width",
            									"Value": ""
            								}, {
            									"Key": "Height",
            									"Value": ""
            								}, {
            									"Key": "Border",
            									"Value": ""
            								}, {
            									"Key": "HSpace",
            									"Value": ""
            								}, {
            									"Key": "VSpace",
            									"Value": ""
            								}, {
            									"Key": "Alignment",
            									"Value": ""
            								}, {
            									"Key": "label",
            									"Value": "Previous Button"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "imagefile"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "PreviousButton",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "prebuilt\/plugins\/horizontal-parallax\/images\/bt-prev1.png",
            								"uniqueId": "2ea9ac4c6ce88048910a5e90fa90ac2d"
            							}, {
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Width",
            									"Value": ""
            								}, {
            									"Key": "Height",
            									"Value": ""
            								}, {
            									"Key": "Border",
            									"Value": ""
            								}, {
            									"Key": "HSpace",
            									"Value": ""
            								}, {
            									"Key": "VSpace",
            									"Value": ""
            								}, {
            									"Key": "Alignment",
            									"Value": ""
            								}, {
            									"Key": "label",
            									"Value": "Next Button"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "imagefile"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "NextButton",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "prebuilt\/plugins\/horizontal-parallax\/images\/bt-next1.png",
            								"uniqueId": "b99fd6e193904e1a16665f862833c885"
            							}, {
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Enclosed",
            									"Value": "false"
            								}, {
            									"Key": "AllowEnclosureChange",
            									"Value": "false"
            								}, {
            									"Key": "label",
            									"Value": "Sliders"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "Type",
            									"Value": "List"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Sliders",
            								"nodePosition": 2,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "40a033ef9d8438e6e479ac6b8bb8d2a9"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "cba0dd2b-cada-4f09-b661-995ed577deff"
            					},
            					"ElementId": "cba0dd2b-cada-4f09-b661-995ed577deff",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"HomeSlider\" UID=\"cba0dd2b-cada-4f09-b661-995ed577deff\" label=\"Home Slider\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><HomeSlider ID=\"\" Name=\"HomeSlider\" IsComponent=\"true\"><PreviousButton type=\"imagefile\" UID=\"2ea9ac4c6ce88048910a5e90fa90ac2d\" label=\"Previous Button\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" Width=\"\" Height=\"\" Border=\"\" HSpace=\"\" VSpace=\"\" Alignment=\"\">prebuilt\/plugins\/horizontal-parallax\/images\/bt-prev1.png<\/PreviousButton><NextButton type=\"imagefile\" UID=\"b99fd6e193904e1a16665f862833c885\" label=\"Next Button\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" Width=\"\" Height=\"\" Border=\"\" HSpace=\"\" VSpace=\"\" Alignment=\"\">prebuilt\/plugins\/horizontal-parallax\/images\/bt-next1.png<\/NextButton><xPower Type=\"List\" Name=\"Sliders\" UID=\"40a033ef9d8438e6e479ac6b8bb8d2a9\" label=\"Sliders\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" Enclosed=\"false\" AllowEnclosureChange=\"false\" ItemName=\"Slider\" ItemLabel=\"Slider Frame\" ItemType=\"Component\" \/><\/HomeSlider><\/xPower>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/193",
            					"ComponentSchemaName": "",
            					"ElementName": "RecentEntries",
            					"IconName": "3",
            					"Id": "ComponentContentUnits\/161",
            					"IsComponentUnit": true,
            					"Name": "Recent Entries",
            					"Reusable": false,
            					"TemplateName": "RecentEntries",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "RecentEntries"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Recent Entries"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "RecentEntries",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "RecentEntries",
            						"deletedAttributes": null,
            						"nodeName": "RecentEntries",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "RecentEntries"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "RecentEntries",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "label",
            									"Value": "Title"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Title",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "Recent Entries",
            								"uniqueId": "f747439e48e68cc28c3f81861471a6df"
            							}, {
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Enclosed",
            									"Value": "false"
            								}, {
            									"Key": "AllowEnclosureChange",
            									"Value": "false"
            								}, {
            									"Key": "label",
            									"Value": "Items"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "Type",
            									"Value": "List"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Items",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [{
            									"attributes": [{
            										"Key": "Expanded",
            										"Value": "false"
            									}, {
            										"Key": "Width",
            										"Value": ""
            									}, {
            										"Key": "Height",
            										"Value": ""
            									}, {
            										"Key": "Border",
            										"Value": ""
            									}, {
            										"Key": "HSpace",
            										"Value": ""
            									}, {
            										"Key": "VSpace",
            										"Value": ""
            									}, {
            										"Key": "Alignment",
            										"Value": ""
            									}, {
            										"Key": "label",
            										"Value": ""
            									}, {
            										"Key": "readonly",
            										"Value": "false"
            									}, {
            										"Key": "hidden",
            										"Value": "false"
            									}, {
            										"Key": "required",
            										"Value": "false"
            									}, {
            										"Key": "type",
            										"Value": "imagefile"
            									}],
            									"childName": null,
            									"childParentId": null,
            									"childSchemaId": null,
            									"childSchemaName": null,
            									"deletedAttributes": null,
            									"nodeName": "Image",
            									"nodePosition": 0,
            									"pageBuilderTemplateName": "",
            									"childElements": [],
            									"disabled": false,
            									"nodeValue": null,
            									"uniqueId": "2ca634c3-9aca-4322-af86-d401ad43cade"
            								}],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "5c159cebf9e373425594e3bb8e92a1e1"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "3514c108-49d2-47ca-9a8c-32bdc8275e6f"
            					},
            					"ElementId": "3514c108-49d2-47ca-9a8c-32bdc8275e6f",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"RecentEntries\" UID=\"3514c108-49d2-47ca-9a8c-32bdc8275e6f\" label=\"Recent Entries\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><RecentEntries ID=\"\" Name=\"RecentEntries\" IsComponent=\"true\"><Title type=\"string\" UID=\"f747439e48e68cc28c3f81861471a6df\" label=\"Title\" readonly=\"false\" hidden=\"false\" required=\"false\">Recent Entries<\/Title><xPower Type=\"List\" Name=\"Items\" UID=\"5c159cebf9e373425594e3bb8e92a1e1\" label=\"Items\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" Enclosed=\"false\" AllowEnclosureChange=\"false\" ItemName=\"Image\" ItemLabel=\"\" ItemType=\"\"><Image type=\"imagefile\" UID=\"2ca634c3-9aca-4322-af86-d401ad43cade\" label=\"\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" Width=\"\" Height=\"\" Border=\"\" HSpace=\"\" VSpace=\"\" Alignment=\"\" \/><\/xPower><\/RecentEntries><\/xPower>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/193",
            					"ComponentSchemaName": "",
            					"ElementName": "RecentPosts",
            					"IconName": "-1",
            					"Id": "ComponentContentUnits\/225",
            					"IsComponentUnit": true,
            					"Name": "Recent Posts",
            					"Reusable": false,
            					"TemplateName": "RecentPosts",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "RecentPosts"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Recent Posts"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "RecentPosts",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "RecentEntries",
            						"deletedAttributes": null,
            						"nodeName": "RecentPosts",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "RecentPosts"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "RecentEntries",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "label",
            									"Value": "Title"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Title",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "Recent Blogs",
            								"uniqueId": "33863836d1a5e71692f7184960928942"
            							}, {
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Enclosed",
            									"Value": "false"
            								}, {
            									"Key": "AllowEnclosureChange",
            									"Value": "false"
            								}, {
            									"Key": "label",
            									"Value": "Items"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "Type",
            									"Value": "List"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Items",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "e2597fa243ce4c5c281f76c546debc8f"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "38b447d6-ec42-4e5e-9ab4-90fc73f5e1d3"
            					},
            					"ElementId": "38b447d6-ec42-4e5e-9ab4-90fc73f5e1d3",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"RecentPosts\" UID=\"38b447d6-ec42-4e5e-9ab4-90fc73f5e1d3\" label=\"Recent Posts\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><RecentEntries ID=\"\" Name=\"RecentPosts\" IsComponent=\"true\"><Title type=\"string\" UID=\"33863836d1a5e71692f7184960928942\" label=\"Title\" readonly=\"false\" hidden=\"false\" required=\"false\">Recent Blogs<\/Title><xPower Type=\"List\" Name=\"Items\" UID=\"e2597fa243ce4c5c281f76c546debc8f\" label=\"Items\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" Enclosed=\"false\" AllowEnclosureChange=\"false\" ItemName=\"Image\" ItemLabel=\"\" ItemType=\"\" \/><\/RecentEntries><\/xPower>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/129",
            					"ComponentSchemaName": "",
            					"ElementName": "RecentWorks",
            					"IconName": "-1",
            					"Id": "ComponentContentUnits\/97",
            					"IsComponentUnit": true,
            					"Name": "Recent Works",
            					"Reusable": false,
            					"TemplateName": "RecentWorks",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "RecentWorks"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Recent Works"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "RecentWorks",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "RecentWorks",
            						"deletedAttributes": null,
            						"nodeName": "RecentWorks",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "RecentWorks"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "RecentWorks",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "label",
            									"Value": "Title"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Title",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "Recent Works",
            								"uniqueId": "0616631c77dc43ac1455c3b6ec328014"
            							}, {
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Enclosed",
            									"Value": "false"
            								}, {
            									"Key": "AllowEnclosureChange",
            									"Value": "false"
            								}, {
            									"Key": "label",
            									"Value": "Items"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "Type",
            									"Value": "List"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Items",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [{
            									"attributes": [{
            										"Key": "Component",
            										"Value": ""
            									}, {
            										"Key": "CompTypes",
            										"Value": ""
            									}, {
            										"Key": "WrappedUp",
            										"Value": ""
            									}, {
            										"Key": "AllowWrappingChange",
            										"Value": ""
            									}, {
            										"Key": "label",
            										"Value": ""
            									}, {
            										"Key": "readonly",
            										"Value": "false"
            									}, {
            										"Key": "hidden",
            										"Value": "false"
            									}, {
            										"Key": "required",
            										"Value": "false"
            									}, {
            										"Key": "Type",
            										"Value": "Component"
            									}, {
            										"Key": "componentName",
            										"Value": ""
            									}],
            									"childName": null,
            									"childParentId": null,
            									"childSchemaId": null,
            									"childSchemaName": null,
            									"deletedAttributes": null,
            									"nodeName": "Item",
            									"nodePosition": 0,
            									"pageBuilderTemplateName": "",
            									"childElements": [],
            									"disabled": false,
            									"nodeValue": "",
            									"uniqueId": "000a28ab-f88f-4261-ac72-38b4ea19b285"
            								}],
            								"disabled": false,
            								"nodeValue": "",
            								"uniqueId": "01b54516fe4ec571b503fe10f751f9ac"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "53bab1ae-23d9-4a9b-aaec-c08e4168f2ea"
            					},
            					"ElementId": "53bab1ae-23d9-4a9b-aaec-c08e4168f2ea",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"RecentWorks\" UID=\"53bab1ae-23d9-4a9b-aaec-c08e4168f2ea\" label=\"Recent Works\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><RecentWorks ID=\"\" Name=\"RecentWorks\" IsComponent=\"true\"><Title type=\"string\" UID=\"0616631c77dc43ac1455c3b6ec328014\" label=\"Title\" readonly=\"false\" hidden=\"false\" required=\"false\">Recent Works<\/Title><xPower Type=\"List\" Name=\"Items\" UID=\"01b54516fe4ec571b503fe10f751f9ac\" label=\"Items\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" Enclosed=\"false\" AllowEnclosureChange=\"false\" ItemName=\"Item\" ItemLabel=\"\" ItemType=\"Component\"><xPower Type=\"Component\" Name=\"Item\" UID=\"000a28ab-f88f-4261-ac72-38b4ea19b285\" label=\"\" readonly=\"false\" hidden=\"false\" required=\"false\" CompTypes=\"\" WrappedUp=\"\" AllowWrappingChange=\"\" \/><\/xPower><\/RecentWorks><\/xPower>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/195",
            					"ComponentSchemaName": "",
            					"ElementName": "ServiceBlock",
            					"IconName": "11",
            					"Id": "ComponentContentUnits\/162",
            					"IsComponentUnit": true,
            					"Name": "Service Block",
            					"Reusable": true,
            					"TemplateName": "ServiceBlock",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "ServiceBlock"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Service Block"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "ServiceBlock",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "ServiceBlock",
            						"deletedAttributes": null,
            						"nodeName": "ServiceBlock",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "ServiceBlock"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "ServiceBlock",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "label",
            									"Value": "Title"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Title",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "[Service Name]",
            								"uniqueId": "deacb923e4d4ded26cd8ccf122001628"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Summary"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Summary",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "[Summary]",
            								"uniqueId": "1272b0ff677526e2d5c701b32a56092b"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Block Class"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "BlockClass",
            								"nodePosition": 2,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "servive-block-green",
            								"uniqueId": "c7ebb8f09d6e21b1a114faea651924cb"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Icon Class"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "IconClass",
            								"nodePosition": 3,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "icon-bel",
            								"uniqueId": "fcafd9b65e3ab9e7587a19bf4db7386d"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "79a43249-38a9-49bf-a99a-8ebffdc7f898"
            					},
            					"ElementId": "79a43249-38a9-49bf-a99a-8ebffdc7f898",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"ServiceBlock\" UID=\"79a43249-38a9-49bf-a99a-8ebffdc7f898\" label=\"Service Block\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><ServiceBlock ID=\"\" Name=\"ServiceBlock\" IsComponent=\"true\"><Title type=\"string\" UID=\"deacb923e4d4ded26cd8ccf122001628\" label=\"Title\" readonly=\"false\" hidden=\"false\" required=\"false\">[Service Name]<\/Title><Summary type=\"string\" UID=\"1272b0ff677526e2d5c701b32a56092b\" label=\"Summary\" readonly=\"false\" hidden=\"false\" required=\"false\">[Summary]<\/Summary><BlockClass type=\"string\" UID=\"c7ebb8f09d6e21b1a114faea651924cb\" label=\"Block Class\" readonly=\"false\" hidden=\"false\" required=\"false\">servive-block-green<\/BlockClass><IconClass type=\"string\" UID=\"fcafd9b65e3ab9e7587a19bf4db7386d\" label=\"Icon Class\" readonly=\"false\" hidden=\"false\" required=\"false\">icon-bel<\/IconClass><\/ServiceBlock><\/xPower>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/161",
            					"ComponentSchemaName": "",
            					"ElementName": "Testimonial",
            					"IconName": "5",
            					"Id": "ComponentContentUnits\/129",
            					"IsComponentUnit": true,
            					"Name": "Testimonial",
            					"Reusable": false,
            					"TemplateName": "Testimonial",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "Testimonial"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Testimonial"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "Testimonial",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "Testimonial",
            						"deletedAttributes": null,
            						"nodeName": "Testimonial",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "Testimonial"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "Testimonial",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "label",
            									"Value": "Title"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Title",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "Testimonial",
            								"uniqueId": "3e853fa69e2025d27bb88cf6a7f813ad"
            							}, {
            								"attributes": [{
            									"Key": "Height",
            									"Value": ""
            								}, {
            									"Key": "label",
            									"Value": "Copy"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "xhtml"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Copy",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "[Copy]",
            								"uniqueId": "f2d9bf8ea63399cbc9539129bfbfa91e"
            							}, {
            								"attributes": [{
            									"Key": "Expanded",
            									"Value": "false"
            								}, {
            									"Key": "Width",
            									"Value": ""
            								}, {
            									"Key": "Height",
            									"Value": ""
            								}, {
            									"Key": "Border",
            									"Value": ""
            								}, {
            									"Key": "HSpace",
            									"Value": ""
            								}, {
            									"Key": "VSpace",
            									"Value": ""
            								}, {
            									"Key": "Alignment",
            									"Value": ""
            								}, {
            									"Key": "label",
            									"Value": "Image"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "imagefile"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Image",
            								"nodePosition": 2,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "testimonials\/img2.jpg",
            								"uniqueId": "b0d7b192cd83cc2e38f81962d1d662c0"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Quote"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Quote",
            								"nodePosition": 3,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "[Quote]",
            								"uniqueId": "de1b380536531abac7ed4787736bd6ee"
            							}, {
            								"attributes": [{
            									"Key": "label",
            									"Value": "Quote Authro"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "QuoteAuthro",
            								"nodePosition": 4,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "[Author]",
            								"uniqueId": "7dcb1ef21d33e6a873d3723671572b22"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "78a35995-fc8e-4b22-b231-14adc1662967"
            					},
            					"ElementId": "78a35995-fc8e-4b22-b231-14adc1662967",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"Testimonial\" UID=\"78a35995-fc8e-4b22-b231-14adc1662967\" label=\"Testimonial\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><Testimonial ID=\"\" Name=\"Testimonial\" IsComponent=\"true\"><Title type=\"string\" UID=\"3e853fa69e2025d27bb88cf6a7f813ad\" label=\"Title\" readonly=\"false\" hidden=\"false\" required=\"false\">Testimonial<\/Title><Copy type=\"xhtml\" UID=\"f2d9bf8ea63399cbc9539129bfbfa91e\" label=\"Copy\" readonly=\"false\" hidden=\"false\" required=\"false\" Height=\"\">[Copy]<\/Copy><Image type=\"imagefile\" UID=\"b0d7b192cd83cc2e38f81962d1d662c0\" label=\"Image\" readonly=\"false\" hidden=\"false\" required=\"false\" Expanded=\"false\" Width=\"\" Height=\"\" Border=\"\" HSpace=\"\" VSpace=\"\" Alignment=\"\">testimonials\/img2.jpg<\/Image><Quote type=\"string\" UID=\"de1b380536531abac7ed4787736bd6ee\" label=\"Quote\" readonly=\"false\" hidden=\"false\" required=\"false\">[Quote]<\/Quote><QuoteAuthro type=\"string\" UID=\"7dcb1ef21d33e6a873d3723671572b22\" label=\"Quote Authro\" readonly=\"false\" hidden=\"false\" required=\"false\">[Author]<\/QuoteAuthro><\/Testimonial><\/xPower>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "schemas\/226",
            					"ComponentSchemaName": "",
            					"ElementName": "ContentBlock",
            					"IconName": "2",
            					"Id": "ComponentContentUnits\/226",
            					"IsComponentUnit": true,
            					"Name": "Titled Content Block",
            					"Reusable": true,
            					"TemplateName": "ContentBlock",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Component",
            							"Value": ""
            						}, {
            							"Key": "Name",
            							"Value": "ContentBlock"
            						}, {
            							"Key": "WrappedUp",
            							"Value": "true"
            						}, {
            							"Key": "AllowWrappingChange",
            							"Value": "false"
            						}, {
            							"Key": "label",
            							"Value": "Titled Content Block"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Component"
            						}, {
            							"Key": "componentName",
            							"Value": ""
            						}],
            						"childName": "ContentBlock",
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": "TitledContentBlock",
            						"deletedAttributes": null,
            						"nodeName": "ContentBlock",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [{
            								"Key": "ID",
            								"Value": ""
            							}, {
            								"Key": "Name",
            								"Value": "ContentBlock"
            							}],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "TitledContentBlock",
            							"nodePosition": 0,
            							"pageBuilderTemplateName": null,
            							"childElements": [{
            								"attributes": [{
            									"Key": "label",
            									"Value": "Title"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "string"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Title",
            								"nodePosition": 0,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "Title",
            								"uniqueId": "c3d44d750c9598a923077b8e35013c2c"
            							}, {
            								"attributes": [{
            									"Key": "Height",
            									"Value": ""
            								}, {
            									"Key": "label",
            									"Value": "Content"
            								}, {
            									"Key": "readonly",
            									"Value": "false"
            								}, {
            									"Key": "hidden",
            									"Value": "false"
            								}, {
            									"Key": "required",
            									"Value": "false"
            								}, {
            									"Key": "type",
            									"Value": "xhtml"
            								}],
            								"childName": null,
            								"childParentId": null,
            								"childSchemaId": null,
            								"childSchemaName": null,
            								"deletedAttributes": null,
            								"nodeName": "Content",
            								"nodePosition": 1,
            								"pageBuilderTemplateName": "",
            								"childElements": [],
            								"disabled": false,
            								"nodeValue": "Lorem ipsum dolor sit amet, no animal eloquentiam sit, ad pro commune delicata definitiones. No vis doctus prodesset dissentiunt, eius ridens sit ne. Eum elit libris inimicus ex. Labore similique expetendis pri te, erat vivendum delicatissimi eam cu, ne tempor legendos deseruisse usu. Eu quo invenire eloquentiam.  Eu nec persius mediocrem reprehendunt, eu graeco nonumes interesset eos, nam fugit quaerendum et. Per soluta possim ut. Volutpat repudiare definiebas eos ei. Ne eos iusto copiosae, est tamquam imperdiet id. Ne duo diam natum graece. Scribentur eloquentiam philosophia ne mel.",
            								"uniqueId": "7bd2ddc241f8bea084b19afb7c524b08"
            							}],
            							"disabled": false,
            							"nodeValue": null,
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "",
            						"uniqueId": "5e9f1374-2e95-42be-8723-73653c0bad01"
            					},
            					"ElementId": "5e9f1374-2e95-42be-8723-73653c0bad01",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Component\" Name=\"ContentBlock\" UID=\"5e9f1374-2e95-42be-8723-73653c0bad01\" label=\"Titled Content Block\" readonly=\"false\" hidden=\"false\" required=\"false\" WrappedUp=\"true\" AllowWrappingChange=\"false\" Embedded=\"true\"><TitledContentBlock ID=\"\" Name=\"ContentBlock\" IsComponent=\"true\"><Title type=\"string\" UID=\"c3d44d750c9598a923077b8e35013c2c\" label=\"Title\" readonly=\"false\" hidden=\"false\" required=\"false\">Title<\/Title><Content type=\"xhtml\" UID=\"7bd2ddc241f8bea084b19afb7c524b08\" label=\"Content\" readonly=\"false\" hidden=\"false\" required=\"false\" Height=\"\">Lorem ipsum dolor sit amet, no animal eloquentiam sit, ad pro commune delicata definitiones. No vis doctus prodesset dissentiunt, eius ridens sit ne. Eum elit libris inimicus ex. Labore similique expetendis pri te, erat vivendum delicatissimi eam cu, ne tempor legendos deseruisse usu. Eu quo invenire eloquentiam.  Eu nec persius mediocrem reprehendunt, eu graeco nonumes interesset eos, nam fugit quaerendum et. Per soluta possim ut. Volutpat repudiare definiebas eos ei. Ne eos iusto copiosae, est tamquam imperdiet id. Ne duo diam natum graece. Scribentur eloquentiam philosophia ne mel.<\/Content><\/TitledContentBlock><\/xPower>"
            				}],
            				"FieldContentUnits": [{
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "",
            					"ComponentSchemaName": "",
            					"ElementName": "BodyCopy",
            					"IconName": "document16",
            					"Id": "ContentUnits\/2",
            					"IsComponentUnit": false,
            					"Name": "BodyCopy",
            					"Reusable": false,
            					"TemplateName": "BodyCopy",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Height",
            							"Value": ""
            						}, {
            							"Key": "label",
            							"Value": "Body Copy"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "type",
            							"Value": "xhtml"
            						}],
            						"childName": null,
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": null,
            						"deletedAttributes": null,
            						"nodeName": "BodyCopy",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [],
            						"disabled": false,
            						"nodeValue": "[BodyCopy]",
            						"uniqueId": "0b2eda16-a0ed-47b7-a5e2-2c5d31159036"
            					},
            					"ElementId": "0b2eda16-a0ed-47b7-a5e2-2c5d31159036",
            					"ElementSchemaType": null,
            					"ElementXml": "<BodyCopy type=\"xhtml\" UID=\"0b2eda16-a0ed-47b7-a5e2-2c5d31159036\" label=\"Body Copy\" readonly=\"false\" hidden=\"false\" required=\"false\" Height=\"\">[BodyCopy]<\/BodyCopy>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "",
            					"ComponentSchemaName": "",
            					"ElementName": "AncestorNavigation",
            					"IconName": "document16",
            					"Id": "ContentUnits\/33",
            					"IsComponentUnit": false,
            					"Name": "Bread Crumbs",
            					"Reusable": false,
            					"TemplateName": "AncestorNavigation",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Navigation",
            							"Value": "Ancestors"
            						}, {
            							"Key": "GenerationOrder",
            							"Value": "down"
            						}, {
            							"Key": "StartPage",
            							"Value": "x2"
            						}, {
            							"Key": "MaxNodes",
            							"Value": ""
            						}, {
            							"Key": "MaxDepth",
            							"Value": ""
            						}, {
            							"Key": "Query",
            							"Value": ""
            						}, {
            							"Key": "label",
            							"Value": "Ancestor Navigation"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "Type",
            							"Value": "Navigation"
            						}],
            						"childName": null,
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": null,
            						"deletedAttributes": null,
            						"nodeName": "AncestorNavigation",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [{
            							"attributes": [],
            							"childName": null,
            							"childParentId": null,
            							"childSchemaId": null,
            							"childSchemaName": null,
            							"deletedAttributes": null,
            							"nodeName": "Exports",
            							"nodePosition": -1,
            							"pageBuilderTemplateName": null,
            							"childElements": [],
            							"disabled": false,
            							"nodeValue": "",
            							"uniqueId": null
            						}],
            						"disabled": false,
            						"nodeValue": "Ancestors",
            						"uniqueId": "830faa03-1154-4c54-b706-69d06c5893f3"
            					},
            					"ElementId": "830faa03-1154-4c54-b706-69d06c5893f3",
            					"ElementSchemaType": null,
            					"ElementXml": "<xPower Type=\"Navigation\" Name=\"AncestorNavigation\" Navigation=\"Ancestors\" UID=\"830faa03-1154-4c54-b706-69d06c5893f3\" label=\"Ancestor Navigation\" readonly=\"false\" hidden=\"false\" required=\"false\" GenerationOrder=\"down\" StartPage=\"x2\" MaxNodes=\"\" MaxDepth=\"\" Query=\"\" \/>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "",
            					"ComponentSchemaName": "",
            					"ElementName": "FeaturedImage",
            					"IconName": "image16",
            					"Id": "ContentUnits\/3",
            					"IsComponentUnit": false,
            					"Name": "Featured Image",
            					"Reusable": true,
            					"TemplateName": "FeaturedImage",
            					"ElementData": {
            						"attributes": [{
            							"Key": "Width",
            							"Value": ""
            						}, {
            							"Key": "Height",
            							"Value": ""
            						}, {
            							"Key": "Border",
            							"Value": ""
            						}, {
            							"Key": "HSpace",
            							"Value": ""
            						}, {
            							"Key": "VSpace",
            							"Value": ""
            						}, {
            							"Key": "Alignment",
            							"Value": ""
            						}, {
            							"Key": "label",
            							"Value": "FeaturedImage"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "type",
            							"Value": "imagefile"
            						}],
            						"childName": null,
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": null,
            						"deletedAttributes": null,
            						"nodeName": "FeaturedImage",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [],
            						"disabled": false,
            						"nodeValue": "logo.png",
            						"uniqueId": "b57f11ef-e6ce-4aa6-8d4f-ccf1264d6ebc"
            					},
            					"ElementId": "b57f11ef-e6ce-4aa6-8d4f-ccf1264d6ebc",
            					"ElementSchemaType": null,
            					"ElementXml": "<FeaturedImage type=\"imagefile\" UID=\"b57f11ef-e6ce-4aa6-8d4f-ccf1264d6ebc\" label=\"FeaturedImage\" readonly=\"false\" hidden=\"false\" required=\"false\" Width=\"\" Height=\"\" Border=\"\" HSpace=\"\" VSpace=\"\" Alignment=\"\">logo.png<\/FeaturedImage>"
            				}, {
            					"AllowedSchemas": [],
            					"ComponentSchemaId": "",
            					"ComponentSchemaName": "",
            					"ElementName": "Title",
            					"IconName": "document16",
            					"Id": "ContentUnits\/1",
            					"IsComponentUnit": false,
            					"Name": "Title",
            					"Reusable": false,
            					"TemplateName": "Title",
            					"ElementData": {
            						"attributes": [{
            							"Key": "label",
            							"Value": "Title"
            						}, {
            							"Key": "readonly",
            							"Value": "false"
            						}, {
            							"Key": "hidden",
            							"Value": "false"
            						}, {
            							"Key": "required",
            							"Value": "false"
            						}, {
            							"Key": "type",
            							"Value": "string"
            						}],
            						"childName": null,
            						"childParentId": null,
            						"childSchemaId": null,
            						"childSchemaName": null,
            						"deletedAttributes": null,
            						"nodeName": "Title",
            						"nodePosition": 0,
            						"pageBuilderTemplateName": "",
            						"childElements": [],
            						"disabled": false,
            						"nodeValue": "[Title]",
            						"uniqueId": "88c72bcb-c2bf-451a-86a1-8388e11057ec"
            					},
            					"ElementId": "88c72bcb-c2bf-451a-86a1-8388e11057ec",
            					"ElementSchemaType": null,
            					"ElementXml": "<Title type=\"string\" UID=\"88c72bcb-c2bf-451a-86a1-8388e11057ec\" label=\"Title\" readonly=\"false\" hidden=\"false\" required=\"false\">[Title]<\/Title>"
            				}]
            			},
            			"MobilePresentations": [],
            			"Presentations": []
            		},
            		"systemSettings": {
            			"fileLocations": {
            				"imageUrlPrefix": "",
            				"mediaUrlPrefix": ""
            			}
            		}
            	}
            }
             ]]>
             </code>
             </example>
             </returns>
             <remarks>
             <para>This operation is used by Ingeniux CMS site client to retrieve dummy Page content for Component embedding.</para>
             </remarks>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.Rename(System.String,System.String,System.String)">
            <summary>
            Renames a Page
            </summary>
            <param name="pageId">Id of the Page to rename</param>
            <param name="newPageName">New name for the Page</param>
            <param name="pubTarget">Id of current Publishing Target</param>
            <returns>
            <para>Information of the Page Command action and the properties of the Page after renaming</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "contentChanged": false,
                    "pageAction": "rename",
                    "pageProperties": {
                        "name": "Listing",
                        "allowedCategoryRoots": [],
                        "ancestors": ["x1", "x2"],
                        "assignedGroup": null,
                        "assignedUser": {
                            "name": "Turtle Master",
                            "email": "",
                            "userId": "INGENIUX\\awang"
                        },
                        "canClaimPage": false,
                        "canTranslate": false,
                        "checkedOut": true,
                        "error": null,
                        "icon": 99,
                        "isAssignedToOtherUser": false,
                        "isEditable": true,
                        "isInWorkflow": false,
                        "justRecycled": false,
                        "languageRootId": "x112",
                        "lingualMaps": {
                            "clones": [{
                                "name": "List",
                                "id": "x117",
                                "locale": "zh-cn"
                            }],
                            "master": null
                        },
                        "locale": "en-us",
                        "localeInherited": false,
                        "markedForPublish": false,
                        "markedForPublishAny": false,
                        "markedForPublishPropagated": false,
                        "nextPageId": null,
                        "nextPageIndex": 0,
                        "noDnd": false,
                        "numChildPages": 2,
                        "pageId": "x112",
                        "parentId": null,
                        "pendingMasterVersion": 0,
                        "referenceProps": {
                            "created": "20140121T22:53:23",
                            "createdBy": "INGENIUX\\awang",
                            "endDate": "00010101T00:00:00",
                            "lastModified": "20140123T23:49:33",
                            "lastModifiedBy": "User\/INGENIUX___awang",
                            "publishAs": "",
                            "startDate": "00010101T00:00:00"
                        },
                        "remoteServer": "",
                        "schemaFriendlyName": "ListTest",
                        "schemaName": "ListTest",
                        "schemaOnLatestVersion": true,
                        "securityLevel": 2,
                        "userCanCopyPage": true,
                        "workflow": null
                    },
                    "pages": null,
                    "queryString": {
                        "assignTargetId": null,
                        "assignToGroup": null,
                        "comment": null,
                        "includeChildren": false,
                        "newPageName": "Listing",
                        "pageAction": null,
                        "pageId": null,
                        "pageIds": null,
                        "transitionId": null
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Page with given Id doesn't exist, returns error status</para>
            <para>Page must be checked out to rename, otherwise returns error status</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.Save(System.String,IngeniuxCMService.PageSaveData,System.String)">
            <summary>
            Saves a Page with updated content.
            </summary>
            <param name="pageId">Id of the Page to save</param>
            <param name="pageData">
            <para>Page's new content, including updated fields, and presentation information (for Pages)</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                    "nodeName": "DbQuery",
                    "nodePosition": 0,
                    "attributes": [{
                        "Key": "Name",
                        "Value": "dbquery"
                    }],
                    "selectedVersion": 0,
                    "childElements": [{
                        "nodeName": "Query",
                        "nodeValue": "SELECT * FROM dbo.Table_Users ",
                        "nodePosition": 1,
                        "attributes": [{
                            "Key": "label",
                            "Value": "Query"
                        }, {
                            "Key": "readonly",
                            "Value": "false"
                        }, {
                            "Key": "hidden",
                            "Value": "false"
                        }, {
                            "Key": "required",
                            "Value": "false"
                        }, {
                            "Key": "type",
                            "Value": "string"
                        }],
                        "childElements": [],
                        "deletedAttributes": [],
                        "metaData": {
                            "deleted": false,
                            "insertPosition": null
                        },
                        "uniqueId": "61fab88f-2762-4ae9-b733-ae05168f6d80"
                    }, {
                        "nodeName": "Advanced",
                        "nodePosition": 2,
                        "attributes": [{
                            "Key": "Expanded",
                            "Value": true
                        }, {
                            "Key": "Enclosed",
                            "Value": ""
                        }, {
                            "Key": "AllowEnclosureChange",
                            "Value": "false"
                        }, {
                            "Key": "GroupStart",
                            "Value": ""
                        }, {
                            "Key": "label",
                            "Value": "Advanced"
                        }, {
                            "Key": "readonly",
                            "Value": "false"
                        }, {
                            "Key": "hidden",
                            "Value": "false"
                        }, {
                            "Key": "required",
                            "Value": "false"
                        }, {
                            "Key": "Type",
                            "Value": "GroupStart"
                        }],
                        "childElements": [{
                            "nodeName": "Timeout",
                            "nodeValue": "10 ",
                            "nodePosition": 0,
                            "attributes": [{
                                "Key": "label",
                                "Value": "Time out (seconds)"
                            }, {
                                "Key": "readonly",
                                "Value": "false"
                            }, {
                                "Key": "hidden",
                                "Value": "false"
                            }, {
                                "Key": "required",
                                "Value": "false"
                            }, {
                                "Key": "type",
                                "Value": "string"
                            }],
                            "childElements": [],
                            "deletedAttributes": [],
                            "metaData": {
                                "deleted": false,
                                "insertPosition": null
                            },
                            "uniqueId": "42d8a0d0-9fe7-435b-bab0-973983954c78"
                        }],
                        "deletedAttributes": [],
                        "metaData": {
                            "deleted": false,
                            "insertPosition": null
                        },
                        "uniqueId": "e9f44042-d70c-4b28-9d2f-201da77f71ba"
                    }],
                    "metaData": {},
                    "presentations": {
                        "Presentations": [],
                        "MobilePresentations": []
                    }
                }
            ]]>
            </code>
            </example>
            <remarks>
            <para>The new Page content data doesn't need to include every single field on the Page. If updated fields need to be saved.</para>
            <para>Save operation will also renames page, if new Page name is provided in root level "attributes" collection.</para>
            </remarks>
            </param>
            <param name="pubTarget"></param>
            <returns>
            <para>Information of the Page Command action and the properties of the Page after saving</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "contentChanged": false,
                    "pageAction": "save",
                    "pageProperties": {
                        "name": "dbquery",
                        "allowedCategoryRoots": [],
                        "ancestors": ["x1", "x2"],
                        "assignedGroup": null,
                        "assignedUser": {
                            "name": "Turtle Master",
                            "email": "",
                            "userId": "INGENIUX\\awang"
                        },
                        "canClaimPage": false,
                        "canTranslate": false,
                        "checkedOut": true,
                        "error": null,
                        "icon": 4,
                        "isAssignedToOtherUser": false,
                        "isEditable": true,
                        "isInWorkflow": false,
                        "justRecycled": false,
                        "languageRootId": "",
                        "lingualMaps": {
                            "clones": [],
                            "master": null
                        },
                        "locale": "",
                        "localeInherited": true,
                        "markedForPublish": false,
                        "markedForPublishAny": false,
                        "markedForPublishPropagated": false,
                        "nextPageId": null,
                        "nextPageIndex": 0,
                        "noDnd": false,
                        "numChildPages": 0,
                        "pageId": "x99",
                        "parentId": null,
                        "pendingMasterVersion": 0,
                        "referenceProps": {
                            "created": "20140109T22:46:19",
                            "createdBy": "INGENIUX\\awang",
                            "endDate": "00010101T00:00:00",
                            "lastModified": "20140127T17:38:55",
                            "lastModifiedBy": "User\/INGENIUX___awang",
                            "publishAs": "",
                            "startDate": "00010101T00:00:00"
                        },
                        "remoteServer": "",
                        "schemaFriendlyName": "",
                        "schemaName": "DbQuery",
                        "schemaOnLatestVersion": true,
                        "securityLevel": 2,
                        "userCanCopyPage": true,
                        "workflow": null
                    },
                    "pages": null,
                    "queryString": null
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Page with given Id doesn't exist, returns error status</para>
            <para>Page must be checked out to save, otherwise returns error status</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.UndoCheckout(System.String,System.Boolean,System.String)">
            <summary>
            Abandons all changes made in the Check out version of Page, change Page state back to Checked in.
            </summary>
            <param name="pageId">Id of the the Page to undo check out on</param>
            <param name="includeChildren">Specified whether to perform undo check out on all descendant of the given Page</param>
            <param name="pubTarget">Id of current Publishing Targett</param>
            <returns>
            <para>Information of the Page Command action and the properties of the Page after undo check out</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "contentChanged": false,
                    "pageAction": "undocheckout",
                    "pageProperties": {
                        "name": "dbquery",
                        "allowedCategoryRoots": [],
                        "ancestors": ["x1", "x2"],
                        "assignedGroup": null,
                        "assignedUser": null,
                        "canClaimPage": false,
                        "canTranslate": false,
                        "checkedOut": false,
                        "error": null,
                        "icon": 4,
                        "isAssignedToOtherUser": false,
                        "isEditable": false,
                        "isInWorkflow": false,
                        "justRecycled": false,
                        "languageRootId": "",
                        "lingualMaps": {
                            "clones": [],
                            "master": null
                        },
                        "locale": "",
                        "localeInherited": true,
                        "markedForPublish": false,
                        "markedForPublishAny": false,
                        "markedForPublishPropagated": false,
                        "nextPageId": null,
                        "nextPageIndex": 0,
                        "noDnd": false,
                        "numChildPages": 0,
                        "pageId": "x99",
                        "parentId": null,
                        "pendingMasterVersion": 0,
                        "referenceProps": {
                            "created": "20140109T22:46:19",
                            "createdBy": "INGENIUX\\awang",
                            "endDate": "00010101T00:00:00",
                            "lastModified": "20140127T18:17:05",
                            "lastModifiedBy": "User\/INGENIUX___awang",
                            "publishAs": "",
                            "startDate": "00010101T00:00:00"
                        },
                        "remoteServer": "",
                        "schemaFriendlyName": null,
                        "schemaName": "DbQuery",
                        "schemaOnLatestVersion": false,
                        "securityLevel": 2,
                        "userCanCopyPage": true,
                        "workflow": null
                    },
                    "pages": [{
                        "id": "x99",
                        "props": {
                            "name": "dbquery",
                            "allowedCategoryRoots": [],
                            "ancestors": ["x1", "x2"],
                            "assignedGroup": null,
                            "assignedUser": null,
                            "canClaimPage": false,
                            "canTranslate": false,
                            "checkedOut": false,
                            "error": null,
                            "icon": 4,
                            "isAssignedToOtherUser": false,
                            "isEditable": false,
                            "isInWorkflow": false,
                            "justRecycled": false,
                            "languageRootId": "",
                            "lingualMaps": {
                                "clones": [],
                                "master": null
                            },
                            "locale": "",
                            "localeInherited": true,
                            "markedForPublish": false,
                            "markedForPublishAny": false,
                            "markedForPublishPropagated": false,
                            "nextPageId": null,
                            "nextPageIndex": 0,
                            "noDnd": false,
                            "numChildPages": 0,
                            "pageId": "x99",
                            "parentId": null,
                            "pendingMasterVersion": 0,
                            "referenceProps": {
                                "created": "20140109T22:46:19",
                                "createdBy": "INGENIUX\\awang",
                                "endDate": "00010101T00:00:00",
                                "lastModified": "20140127T18:17:05",
                                "lastModifiedBy": "User\/INGENIUX___awang",
                                "publishAs": "",
                                "startDate": "00010101T00:00:00"
                            },
                            "remoteServer": "",
                            "schemaFriendlyName": null,
                            "schemaName": "DbQuery",
                            "schemaOnLatestVersion": false,
                            "securityLevel": 2,
                            "userCanCopyPage": true,
                            "workflow": null
                        }
                    }],
                    "queryString": {
                        "assignTargetId": null,
                        "assignToGroup": null,
                        "comment": null,
                        "includeChildren": false,
                        "newPageName": null,
                        "pageAction": null,
                        "pageId": null,
                        "pageIds": null,
                        "transitionId": null
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Page is not checked out, operation and the events before/after will not be carried out. This also means Before/After Undo Checkout custom hooks will be carried out either.</para>
            <para>When include children on this operation, only the checked out Pages in the descendants will be affected.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.QuickSearchPage(System.String,System.String,System.Boolean)">
            <summary>
            Search Pages by the initial characters in their names
            </summary>
            <param name="search">Initial characters in Page names, not case-sensitive</param>
            <param name="masterPageId">The Id of Master Page in a lingual map. This parameter is only needed when searching for Page that are available to map to the given master Page as clone.</param>
            <param name="includeLocale">Specifies whether to include Page's lingual information in the search results</param>
            <returns>
            <para>Array of search result entries. Each entry is a 2 items string array. First item is the Page's name, includes lingual information is specified; Second item is the Page Id</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            //When search text is  "home", returns the following result, without lingual information
            
            {
                "code": 0,
                "error": null,
                "message": [
            		["HomeSlider (x33)", "x33"], 
            		["HomeSlider (x51)", "x51"], 
            		["HomeSlider (x69)", "x69"], 
            		["HomeSlider (x31)", "x31"],
            		["HomeSlider (x17)", "x17"], 
            		["Home (x5)", "x5"]]
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.GetPageTranslationData(System.String)">
            <summary>
            Retrieves a clone Page's page data together with the page data of its master Page.
            </summary>
            <param name="pageId">Id of the clone Page</param>
            <returns>
            <para>The content of current clone Page and the content of its master Page</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            t = {
                "code": 0,
                "error": null,
                "message": {
                    "current": {
                        "documentElement": {
                            "attributes": [{
                                "Key": "File",
                                "Value": ""
                            }, {
                                "Key": "Thumbnail",
                                "Value": ""
                            }, {
                                "Key": "Height",
                                "Value": ""
                            }, {
                                "Key": "Width",
                                "Value": ""
                            }, {
                                "Key": "AlternateText",
                                "Value": ""
                            }, {
                                "Key": "Alignment",
                                "Value": ""
                            }, {
                                "Key": "Border",
                                "Value": ""
                            }, {
                                "Key": "HSpace",
                                "Value": ""
                            }, {
                                "Key": "VSpace",
                                "Value": ""
                            }, {
                                "Key": "UseMap",
                                "Value": ""
                            }, {
                                "Key": "HREF",
                                "Value": ""
                            }, {
                                "Key": "Target",
                                "Value": ""
                            }, {
                                "Key": "ID",
                                "Value": "x118"
                            }, {
                                "Key": "Name",
                                "Value": "zBrush"
                            }],
                            "childName": null,
                            "childParentId": null,
                            "childSchemaId": null,
                            "childSchemaName": null,
                            "deletedAttributes": null,
                            "nodeName": "Image",
                            "nodePosition": 0,
                            "pageBuilderTemplateName": null,
                            "childElements": [{
                                "attributes": [{
                                    "Key": "label",
                                    "Value": ""
                                }, {
                                    "Key": "readonly",
                                    "Value": "false"
                                }, {
                                    "Key": "hidden",
                                    "Value": "false"
                                }, {
                                    "Key": "required",
                                    "Value": "false"
                                }, {
                                    "Key": "type",
                                    "Value": "string"
                                }],
                                "childName": null,
                                "childParentId": null,
                                "childSchemaId": null,
                                "childSchemaName": null,
                                "deletedAttributes": null,
                                "nodeName": "Keywords",
                                "nodePosition": 0,
                                "pageBuilderTemplateName": "",
                                "childElements": [],
                                "disabled": false,
                                "nodeValue": null,
                                "uniqueId": "85428643-8460-4142-952d-efc514e3b4b7"
                            }],
                            "disabled": false,
                            "nodeValue": null,
                            "uniqueId": null
                        },
                        "errors": [],
                        "metadata": {
                            "properties": {
                                "name": "zBrush",
                                "allowedCategoryRoots": [],
                                "ancestors": ["x1", "x2", "x117", "x120"],
                                "assignedGroup": null,
                                "assignedUser": {
                                    "name": "Turtle Master",
                                    "email": "",
                                    "userId": "INGENIUX\\awang"
                                },
                                "canClaimPage": false,
                                "canTranslate": true,
                                "checkedOut": true,
                                "error": null,
                                "icon": 3,
                                "isAssignedToOtherUser": false,
                                "isEditable": true,
                                "isInWorkflow": false,
                                "justRecycled": false,
                                "languageRootId": "x117",
                                "lingualMaps": {
                                    "clones": [],
                                    "master": {
                                        "name": "zBrush",
                                        "id": "x116",
                                        "locale": "en-us"
                                    }
                                },
                                "locale": "zh-cn",
                                "localeInherited": true,
                                "markedForPublish": false,
                                "markedForPublishAny": false,
                                "markedForPublishPropagated": false,
                                "nextPageId": null,
                                "nextPageIndex": 0,
                                "noDnd": false,
                                "numChildPages": 1,
                                "pageId": "x118",
                                "parentId": null,
                                "pendingMasterVersion": 0,
                                "referenceProps": {
                                    "created": "20140123T23:49:20",
                                    "createdBy": "INGENIUX\\awang",
                                    "endDate": "00010101T00:00:00",
                                    "lastModified": "20140127T21:53:02",
                                    "lastModifiedBy": "User\/INGENIUX___awang",
                                    "publishAs": "",
                                    "startDate": "00010101T00:00:00"
                                },
                                "remoteServer": "",
                                "schemaFriendlyName": "Image File",
                                "schemaName": "Image",
                                "schemaOnLatestVersion": true,
                                "securityLevel": 2,
                                "userCanCopyPage": true,
                                "workflow": null
                            },
                            "tabData": {
                                "contentUnitsManagerTab": false,
                                "customTabs": [{
                                    "Key": "CustomTabSettings\/1",
                                    "Value": {
                                        "name": "Analytics",
                                        "id": "CustomTabSettings\/1",
                                        "allowPinning": false,
                                        "appendPageId": true,
                                        "autoSelect": false,
                                        "icon": "images\/icons\/default\/analytic16.png",
                                        "isGlobal": true,
                                        "resourceId": "analytics_title",
                                        "show": true,
                                        "url": "analytics\/default.aspx"
                                    }
                                }],
                                "editTab": true,
                                "historyTab": true,
                                "overviewTab": false,
                                "pcrManagerTab": false,
                                "previewTab": false,
                                "publishManagerTab": false,
                                "publishMonitorTab": false,
                                "redirectsTab": false,
                                "reportsTab": false,
                                "schemaDesignerTab": false,
                                "siteDefinitionLocalizationTab": false,
                                "siteSearcherTab": false,
                                "systemOptionsTab": false,
                                "taxonomyAdminTab": false,
                                "taxonomyTab": true,
                                "translateTab": true,
                                "userManagerTab": false,
                                "workFlowAdministratorTab": false,
                                "xmlTab": true
                            }
                        },
                        "presentations": null,
                        "systemSettings": {
                            "fileLocations": {
                                "imageUrlPrefix": "",
                                "mediaUrlPrefix": ""
                            }
                        }
                    },
                    "diff": {
                        "documentElement": {
                            "attributes": [{
                                "Key": "File",
                                "Value": "icons\/zBrush.gif"
                            }, {
                                "Key": "Thumbnail",
                                "Value": ""
                            }, {
                                "Key": "Height",
                                "Value": "50"
                            }, {
                                "Key": "Width",
                                "Value": "237"
                            }, {
                                "Key": "AlternateText",
                                "Value": "Paint Brush"
                            }, {
                                "Key": "Alignment",
                                "Value": "left"
                            }, {
                                "Key": "Border",
                                "Value": "0"
                            }, {
                                "Key": "HSpace",
                                "Value": "0"
                            }, {
                                "Key": "VSpace",
                                "Value": "0"
                            }, {
                                "Key": "UseMap",
                                "Value": ""
                            }, {
                                "Key": "HREF",
                                "Value": "http:\/\/www.ingeniux.com\/images\/zbrush.png"
                            }, {
                                "Key": "Target",
                                "Value": ""
                            }, {
                                "Key": "ID",
                                "Value": "x116"
                            }, {
                                "Key": "Name",
                                "Value": "zBrush"
                            }],
                            "childName": null,
                            "childParentId": null,
                            "childSchemaId": null,
                            "childSchemaName": null,
                            "deletedAttributes": null,
                            "nodeName": "Image",
                            "nodePosition": 0,
                            "pageBuilderTemplateName": null,
                            "childElements": [{
                                "attributes": [{
                                    "Key": "label",
                                    "Value": ""
                                }, {
                                    "Key": "readonly",
                                    "Value": "false"
                                }, {
                                    "Key": "hidden",
                                    "Value": "false"
                                }, {
                                    "Key": "required",
                                    "Value": "false"
                                }, {
                                    "Key": "type",
                                    "Value": "string"
                                }],
                                "childName": null,
                                "childParentId": null,
                                "childSchemaId": null,
                                "childSchemaName": null,
                                "deletedAttributes": null,
                                "nodeName": "Keywords",
                                "nodePosition": 0,
                                "pageBuilderTemplateName": "",
                                "childElements": [],
                                "disabled": false,
                                "nodeValue": "Paint Brush",
                                "uniqueId": "85428643-8460-4142-952d-efc514e3b4b7"
                            }],
                            "disabled": false,
                            "nodeValue": null,
                            "uniqueId": null
                        },
                        "errors": [],
                        "metadata": {
                            "properties": {
                                "name": "zBrush",
                                "allowedCategoryRoots": [],
                                "ancestors": ["x1", "x2", "x112"],
                                "assignedGroup": null,
                                "assignedUser": null,
                                "canClaimPage": false,
                                "canTranslate": false,
                                "checkedOut": false,
                                "error": null,
                                "icon": 3,
                                "isAssignedToOtherUser": false,
                                "isEditable": false,
                                "isInWorkflow": false,
                                "justRecycled": false,
                                "languageRootId": "x112",
                                "lingualMaps": {
                                    "clones": [{
                                        "name": "zBrush",
                                        "id": "x118",
                                        "locale": "zh-cn"
                                    }],
                                    "master": null
                                },
                                "locale": "en-us",
                                "localeInherited": true,
                                "markedForPublish": false,
                                "markedForPublishAny": false,
                                "markedForPublishPropagated": false,
                                "nextPageId": null,
                                "nextPageIndex": 0,
                                "noDnd": false,
                                "numChildPages": 0,
                                "pageId": "x116",
                                "parentId": null,
                                "pendingMasterVersion": 0,
                                "referenceProps": {
                                    "created": "20140122T00:37:10",
                                    "createdBy": "INGENIUX\\awang",
                                    "endDate": "00010101T00:00:00",
                                    "lastModified": "20140127T21:24:37",
                                    "lastModifiedBy": "User\/INGENIUX___awang",
                                    "publishAs": "",
                                    "startDate": "00010101T00:00:00"
                                },
                                "remoteServer": "",
                                "schemaFriendlyName": "Image File",
                                "schemaName": "Image",
                                "schemaOnLatestVersion": true,
                                "securityLevel": 2,
                                "userCanCopyPage": true,
                                "workflow": null
                            },
                            "tabData": {
                                "contentUnitsManagerTab": false,
                                "customTabs": [{
                                    "Key": "CustomTabSettings\/1",
                                    "Value": {
                                        "name": "Analytics",
                                        "id": "CustomTabSettings\/1",
                                        "allowPinning": false,
                                        "appendPageId": true,
                                        "autoSelect": false,
                                        "icon": "images\/icons\/default\/analytic16.png",
                                        "isGlobal": true,
                                        "resourceId": "analytics_title",
                                        "show": true,
                                        "url": "analytics\/default.aspx"
                                    }
                                }],
                                "editTab": true,
                                "historyTab": true,
                                "overviewTab": false,
                                "pcrManagerTab": false,
                                "previewTab": false,
                                "publishManagerTab": false,
                                "publishMonitorTab": false,
                                "redirectsTab": false,
                                "reportsTab": false,
                                "schemaDesignerTab": false,
                                "siteDefinitionLocalizationTab": false,
                                "siteSearcherTab": false,
                                "systemOptionsTab": false,
                                "taxonomyAdminTab": false,
                                "taxonomyTab": true,
                                "translateTab": false,
                                "userManagerTab": false,
                                "workFlowAdministratorTab": false,
                                "xmlTab": true
                            }
                        },
                        "presentations": null,
                        "systemSettings": {
                            "fileLocations": {
                                "imageUrlPrefix": "",
                                "mediaUrlPrefix": ""
                            }
                        }
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>This operation is used by Ingeniux CMS site to construct Page translation editor.</remarks>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.GetPageVersion(System.String,System.Int32,System.Boolean)">
            <summary>
            Retrieves the content of a Page's specific version, also specifies whether to produce diffing results.
            </summary>
            <param name="pageId">Id of the Page</param>
            <param name="versionId">Id of the Page's specific version</param>
            <param name="diffPage">Whether or not to return content with diffing html markup</param>
            <returns>
            <para>Content of Page's specific version, with or without diffing html markup.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "documentElement": {
                        "attributes": [{
                            "Key": "ID",
                            "Value": "PageVersion_x70_<span style=\"background-color:#CCFFFF; text-decoration: underline\">CheckedOu<\/span><span style=\"background-color:#FFCCCC;text-decoration: line-through;\">6<\/span> <span style=\"background-color:#CCFFFF; text-decoration: underline\">t<\/span>"
                        }, {
                            "Key": "Name",
                            "Value": "ContactUs"
                        }],
                        "childName": null,
                        "childParentId": null,
                        "childSchemaId": null,
                        "childSchemaName": null,
                        "deletedAttributes": null,
                        "nodeName": "ContactInformation",
                        "nodePosition": 0,
                        "pageBuilderTemplateName": null,
                        "childElements": [{
                            "attributes": [{
                                "Key": "label",
                                "Value": "Title"
                            }, {
                                "Key": "readonly",
                                "Value": "false"
                            }, {
                                "Key": "hidden",
                                "Value": "false"
                            }, {
                                "Key": "required",
                                "Value": "false"
                            }, {
                                "Key": "type",
                                "Value": "string"
                            }],
                            "childName": null,
                            "childParentId": null,
                            "childSchemaId": null,
                            "childSchemaName": null,
                            "deletedAttributes": null,
                            "nodeName": "Title",
                            "nodePosition": 0,
                            "pageBuilderTemplateName": "",
                            "childElements": [],
                            "disabled": false,
                            "nodeValue": "Contact <span style=\"background-color:#CCFFFF; text-decoration: underline\">Ingeniux<\/span><span style=\"background-color:#FFCCCC;text-decoration: line-through;\">Us<\/span>",
                            "uniqueId": "2abedeae62ae45621decdc263c9eadd8"
                        }, {
                            "attributes": [{
                                "Key": "label",
                                "Value": "Company"
                            }, {
                                "Key": "readonly",
                                "Value": "false"
                            }, {
                                "Key": "hidden",
                                "Value": "false"
                            }, {
                                "Key": "required",
                                "Value": "false"
                            }, {
                                "Key": "type",
                                "Value": "string"
                            }],
                            "childName": null,
                            "childParentId": null,
                            "childSchemaId": null,
                            "childSchemaName": null,
                            "deletedAttributes": null,
                            "nodeName": "Company",
                            "nodePosition": 1,
                            "pageBuilderTemplateName": "",
                            "childElements": [],
                            "disabled": false,
                            "nodeValue": "INGENIUX | Web Experience Management",
                            "uniqueId": "68e792a32ee940e39174f57f455fe839"
                        }, {
                            "attributes": [{
                                "Key": "label",
                                "Value": "Address"
                            }, {
                                "Key": "readonly",
                                "Value": "false"
                            }, {
                                "Key": "hidden",
                                "Value": "false"
                            }, {
                                "Key": "required",
                                "Value": "false"
                            }, {
                                "Key": "type",
                                "Value": "string"
                            }],
                            "childName": null,
                            "childParentId": null,
                            "childSchemaId": null,
                            "childSchemaName": null,
                            "deletedAttributes": null,
                            "nodeName": "Address",
                            "nodePosition": 2,
                            "pageBuilderTemplateName": "",
                            "childElements": [],
                            "disabled": false,
                            "nodeValue": "1601 2nd Avenue, 5th Floor | Seattle, WA 98101",
                            "uniqueId": "6c13023cdb8db1f26f5308f9f6dfbe59"
                        }, {
                            "attributes": [{
                                "Key": "label",
                                "Value": "Email"
                            }, {
                                "Key": "readonly",
                                "Value": "false"
                            }, {
                                "Key": "hidden",
                                "Value": "false"
                            }, {
                                "Key": "required",
                                "Value": "false"
                            }, {
                                "Key": "type",
                                "Value": "string"
                            }],
                            "childName": null,
                            "childParentId": null,
                            "childSchemaId": null,
                            "childSchemaName": null,
                            "deletedAttributes": null,
                            "nodeName": "Email",
                            "nodePosition": 3,
                            "pageBuilderTemplateName": "",
                            "childElements": [],
                            "disabled": false,
                            "nodeValue": "info@ingeniux.com",
                            "uniqueId": "931009fc717f4d211254f888a7e85a47"
                        }, {
                            "attributes": [{
                                "Key": "label",
                                "Value": "Phone"
                            }, {
                                "Key": "readonly",
                                "Value": "false"
                            }, {
                                "Key": "hidden",
                                "Value": "false"
                            }, {
                                "Key": "required",
                                "Value": "false"
                            }, {
                                "Key": "type",
                                "Value": "string"
                            }],
                            "childName": null,
                            "childParentId": null,
                            "childSchemaId": null,
                            "childSchemaName": null,
                            "deletedAttributes": null,
                            "nodeName": "Phone",
                            "nodePosition": 4,
                            "pageBuilderTemplateName": "",
                            "childElements": [],
                            "disabled": false,
                            "nodeValue": "1 (206) 788-4300",
                            "uniqueId": "af03d546e7604118269dbd00afbe6a2f"
                        }, {
                            "attributes": [{
                                "Key": "label",
                                "Value": "Web"
                            }, {
                                "Key": "readonly",
                                "Value": "false"
                            }, {
                                "Key": "hidden",
                                "Value": "false"
                            }, {
                                "Key": "required",
                                "Value": "false"
                            }, {
                                "Key": "type",
                                "Value": "string"
                            }],
                            "childName": null,
                            "childParentId": null,
                            "childSchemaId": null,
                            "childSchemaName": null,
                            "deletedAttributes": null,
                            "nodeName": "Web",
                            "nodePosition": 5,
                            "pageBuilderTemplateName": "",
                            "childElements": [],
                            "disabled": false,
                            "nodeValue": "http:\/\/www.ingeniux.com",
                            "uniqueId": "5fa33a76f7481f537777648303783e90"
                        }],
                        "disabled": false,
                        "nodeValue": null,
                        "uniqueId": null
                    },
                    "errors": null,
                    "metadata": {
                        "properties": {
                            "name": null,
                            "allowedCategoryRoots": null,
                            "ancestors": null,
                            "assignedGroup": null,
                            "assignedUser": null,
                            "canClaimPage": false,
                            "canTranslate": false,
                            "checkedOut": false,
                            "error": null,
                            "icon": 0,
                            "isAssignedToOtherUser": false,
                            "isEditable": false,
                            "isInWorkflow": false,
                            "justRecycled": false,
                            "languageRootId": null,
                            "lingualMaps": null,
                            "locale": null,
                            "localeInherited": false,
                            "markedForPublish": false,
                            "markedForPublishAny": false,
                            "markedForPublishPropagated": false,
                            "nextPageId": null,
                            "nextPageIndex": 0,
                            "noDnd": false,
                            "numChildPages": 0,
                            "pageId": null,
                            "parentId": null,
                            "pendingMasterVersion": 0,
                            "referenceProps": null,
                            "remoteServer": null,
                            "schemaFriendlyName": null,
                            "schemaName": null,
                            "schemaOnLatestVersion": false,
                            "securityLevel": 0,
                            "userCanCopyPage": false,
                            "workflow": null
                        },
                        "tabData": null
                    },
                    "presentations": null,
                    "systemSettings": {
                        "fileLocations": null
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.GetVersionHistory(System.String)">
            <summary>
            Retrieve the list of version summary information the given Page has
            </summary>
            <param name="pageId">Id of the Page to retrieve version listing for</param>
            <returns>
            <para>Array of version summary entries</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "CurrentVersion": true,
                    "Date": "20140127T15:56:00",
                    "MasterVersion": -1,
                    "Name": "ContactUs",
                    "PubTargets": "{\"version\":7,\"targets\":[]}",
                    "User": "Turtle Master [INGENIUX\\awang]",
                    "Version": 7
                }, {
                    "CurrentVersion": false,
                    "Date": "20140127T22:50:00",
                    "MasterVersion": -1,
                    "Name": "ContactUs",
                    "PubTargets": "{\"version\":6,\"targets\":[]}",
                    "User": "Turtle Master [INGENIUX\\awang]",
                    "Version": 6
                }]
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.SendMail(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Sends an email out, using the Ingeniux CMS site mail settings. The email message will be plain text.
            </summary>
            <param name="to">Email recipient addresses</param>
            <param name="cc">Email Carbon Copy addresses</param>
            <param name="bcc">Email Blind Carbon Copy addresses</param>
            <param name="subject">Subject of Email</param>
            <param name="body">Body of Email</param>
            <returns>
            <para>Hard-coded response in user interface language indicating mail has been sent. If any error occurred, error status will be returned.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            //UI language is en-us:
            
            {
                "code": 0,
                "error": null,
                "message": "Email message sent."
            }
            
            //UI language is "zh-cn":
            
            {
                "code": 0,
                "error": null,
                "message": "电邮发送成功。"
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.Rollback(System.String,System.String)">
            <summary>
            Rolls back the Page to its previous version. After rolling back, Page will keep it current version number, but its content was changed to the previous version's content; and 
            it will be in checked in state.
            </summary>
            <param name="pageId">Id of the Page to roll back</param>
            <param name="pubTarget">Id of current Publishing Target</param>
            <returns>
            <para>Information of the Page Command action and the properties of the Page after rollback</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "contentChanged": false,
                    "pageAction": "rollback",
                    "pageProperties": {
                        "name": "ContactUs",
                        "allowedCategoryRoots": [],
                        "ancestors": ["x1", "x2", "x3"],
                        "assignedGroup": null,
                        "assignedUser": null,
                        "canClaimPage": false,
                        "canTranslate": false,
                        "checkedOut": false,
                        "error": null,
                        "icon": 5,
                        "isAssignedToOtherUser": false,
                        "isEditable": false,
                        "isInWorkflow": false,
                        "justRecycled": false,
                        "languageRootId": "",
                        "lingualMaps": {
                            "clones": [],
                            "master": null
                        },
                        "locale": "",
                        "localeInherited": true,
                        "markedForPublish": false,
                        "markedForPublishAny": false,
                        "markedForPublishPropagated": false,
                        "nextPageId": null,
                        "nextPageIndex": 0,
                        "noDnd": false,
                        "numChildPages": 0,
                        "pageId": "x70",
                        "parentId": null,
                        "pendingMasterVersion": 0,
                        "referenceProps": {
                            "created": "20131218T23:22:52",
                            "createdBy": "INGENIUX\\awang",
                            "endDate": "00010101T00:00:00",
                            "lastModified": "20140128T01:27:35",
                            "lastModifiedBy": "User\/INGENIUX___awang",
                            "publishAs": "",
                            "startDate": "00010101T00:00:00"
                        },
                        "remoteServer": "",
                        "schemaFriendlyName": null,
                        "schemaName": "ContactInformation",
                        "schemaOnLatestVersion": false,
                        "securityLevel": 2,
                        "userCanCopyPage": true,
                        "workflow": null
                    },
                    "pages": [{
                        "id": "x70",
                        "props": {
                            "name": "ContactUs",
                            "allowedCategoryRoots": [],
                            "ancestors": ["x1", "x2", "x3"],
                            "assignedGroup": null,
                            "assignedUser": null,
                            "canClaimPage": false,
                            "canTranslate": false,
                            "checkedOut": false,
                            "error": null,
                            "icon": 5,
                            "isAssignedToOtherUser": false,
                            "isEditable": false,
                            "isInWorkflow": false,
                            "justRecycled": false,
                            "languageRootId": "",
                            "lingualMaps": {
                                "clones": [],
                                "master": null
                            },
                            "locale": "",
                            "localeInherited": true,
                            "markedForPublish": false,
                            "markedForPublishAny": false,
                            "markedForPublishPropagated": false,
                            "nextPageId": null,
                            "nextPageIndex": 0,
                            "noDnd": false,
                            "numChildPages": 0,
                            "pageId": "x70",
                            "parentId": null,
                            "pendingMasterVersion": 0,
                            "referenceProps": {
                                "created": "20131218T23:22:52",
                                "createdBy": "INGENIUX\\awang",
                                "endDate": "00010101T00:00:00",
                                "lastModified": "20140128T01:27:35",
                                "lastModifiedBy": "User\/INGENIUX___awang",
                                "publishAs": "",
                                "startDate": "00010101T00:00:00"
                            },
                            "remoteServer": "",
                            "schemaFriendlyName": null,
                            "schemaName": "ContactInformation",
                            "schemaOnLatestVersion": false,
                            "securityLevel": 2,
                            "userCanCopyPage": true,
                            "workflow": null
                        }
                    }],
                    "queryString": {
                        "assignTargetId": null,
                        "assignToGroup": null,
                        "comment": null,
                        "includeChildren": false,
                        "newPageName": null,
                        "pageAction": null,
                        "pageId": null,
                        "pageIds": null,
                        "transitionId": null
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.UpdatePageSchema(System.String,System.Boolean)">
            <summary>
            Update the Schema of the Page based on current Page content, only applies to Page's with presentations.
            If Page has no presentations, returns error status.
            </summary>
            <param name="pageId">Id of the Page to use to Update schema with</param>
            <param name="schemaInDraftMode">Specifies to put the updated Schema in draft mode or not. Updated Schema in draft mode will not affect created Page content until saved to a new version.</param>
            <returns>The Id of the updated Schema</returns>
            <remarks>
            <para>If Page doesn't exist, returns error status</para>
            <para>If Page's Schema was for some reason deleted (e.g. direct removal in Content Store database), returns error status</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.SaveNewSchemaFromPage(System.String,System.String)">
            <summary>
            <para>
            Creates a new Schema based on given Page's content, only applies to Page's with presentations.
            If Page has no presentations, returns error status.
            </para>
            <para>
            There are 2 Schemas with the same Root name allowed, one with Presentation, one without. Once this operation is carried out once
            on a Schema, it cannot be called again on the Pages with the new schema.
            </para>
            <para>
            After the new Schema is saved, the Page used to create this Schema will be used the new schema instead of its previous one.
            All other Pages using the previous schema will not be affected.
            </para>
            </summary>
            <param name="pageId">Id of the Page to create new Schema with</param>
            <param name="schemaFriendlyName">Friendly Name of the new Schema, must not matching the Page's current Schema's friendly name.</param>
            <returns>Id of newly created Schema</returns>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.GetAllSchemas">
            <summary>
            Retrieves a list of simplified inform entries on all Schemas of the site
            </summary>
            <returns>
            <para>Array of Schema basic information</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "ID": "Schema_Folder",
                    "Name": "Folder",
                    "FriendlyName": "Folder",
                    "Icon": 1,
                    "IsComponent": true
                }, {
                    "ID": "Schema_Image",
                    "Name": "Image",
                    "FriendlyName": "Image File",
                    "Icon": 3,
                    "IsComponent": true
                }, {
                    "ID": "Schema_Insert",
                    "Name": "Insert",
                    "FriendlyName": "Insert",
                    "Icon": 4,
                    "IsComponent": true
                }, {
                    "ID": "Schema_Media",
                    "Name": "Media",
                    "FriendlyName": "Media File",
                    "Icon": 6,
                    "IsComponent": true
                }, {
                    "ID": "Schema_Navigation",
                    "Name": "Navigation",
                    "FriendlyName": "Navigation",
                    "Icon": 4,
                    "IsComponent": true
                }, {
                    "ID": "schemas\/33",
                    "Name": "Home",
                    "FriendlyName": "Home Page",
                    "Icon": 8,
                    "IsComponent": false
                }, {
                    "ID": "schemas\/66",
                    "Name": "HomeSlider",
                    "FriendlyName": "Home Slider",
                    "Icon": 99,
                    "IsComponent": true
                }, {
                    "ID": "schemas\/65",
                    "Name": "SliderFrame",
                    "FriendlyName": "SliderFrame",
                    "Icon": 3,
                    "IsComponent": true
                }, {
                    "ID": "schemas\/129",
                    "Name": "RecentWorks",
                    "FriendlyName": "Recent Works",
                    "Icon": 6,
                    "IsComponent": true
                }, {
                    "ID": "schemas\/161",
                    "Name": "Testimonial",
                    "FriendlyName": "Testimonial",
                    "Icon": 5,
                    "IsComponent": true
                }, {
                    "ID": "schemas\/193",
                    "Name": "RecentEntries",
                    "FriendlyName": "Recent Entries",
                    "Icon": 3,
                    "IsComponent": true
                }, {
                    "ID": "schemas\/195",
                    "Name": "ServiceBlock",
                    "FriendlyName": "Service Block",
                    "Icon": 11,
                    "IsComponent": true
                }, {
                    "ID": "schemas\/194",
                    "Name": "Details",
                    "FriendlyName": "Details",
                    "Icon": 2,
                    "IsComponent": false
                }, {
                    "ID": "schemas\/97",
                    "Name": "FeatureItem",
                    "FriendlyName": "Feature Item",
                    "Icon": 2,
                    "IsComponent": true
                }, {
                    "ID": "schemas\/225",
                    "Name": "FeaturePhoto",
                    "FriendlyName": "Feature Photo",
                    "Icon": 3,
                    "IsComponent": true
                }, {
                    "ID": "schemas\/226",
                    "Name": "TitledContentBlock",
                    "FriendlyName": "Titled Content Block",
                    "Icon": 99,
                    "IsComponent": true
                }, {
                    "ID": "schemas\/227",
                    "Name": "ContactInformation",
                    "FriendlyName": "Contact Information",
                    "Icon": 5,
                    "IsComponent": true
                }, {
                    "ID": "schemas\/1",
                    "Name": "SiteControl",
                    "FriendlyName": "Site Control",
                    "Icon": 99,
                    "IsComponent": true
                }, {
                    "ID": "schemas\/FormBuilder_Captcha",
                    "Name": "FormBuilder_Captcha",
                    "FriendlyName": "Form - Captcha",
                    "Icon": 12,
                    "IsComponent": true
                }, {
                    "ID": "schemas\/FormBuilder_DynamicDiv",
                    "Name": "FormBuilder_DynamicDiv",
                    "FriendlyName": "Form - Dynamic Div",
                    "Icon": 11,
                    "IsComponent": true
                }, {
                    "ID": "schemas\/FormBuilder_Fieldset",
                    "Name": "FormBuilder_Fieldset",
                    "FriendlyName": "Form - Fieldset",
                    "Icon": 10,
                    "IsComponent": true
                }, {
                    "ID": "schemas\/FormBuilder_HtmlInput",
                    "Name": "FormBuilder_HtmlInput",
                    "FriendlyName": "Form - Html Input",
                    "Icon": 11,
                    "IsComponent": true
                }, {
                    "ID": "schemas\/FormBuilder_Choice",
                    "Name": "FormBuilder_Choice",
                    "FriendlyName": "Form - Radio\/Dropdown list choice component",
                    "Icon": 11,
                    "IsComponent": true
                }, {
                    "ID": "schemas\/FormProcessorPage",
                    "Name": "FormProcessorPage",
                    "FriendlyName": "Form Processor Page",
                    "Icon": 9,
                    "IsComponent": false
                }, {
                    "ID": "schemas\/FormBuilder_Input",
                    "Name": "FormBuilder_Input",
                    "FriendlyName": "Form - Input",
                    "Icon": 11,
                    "IsComponent": true
                }, {
                    "ID": "schemas\/FormJQuery",
                    "Name": "FormJQuery",
                    "FriendlyName": "Form - JQuery",
                    "Icon": 11,
                    "IsComponent": true
                }, {
                    "ID": "schemas\/257",
                    "Name": "InsertTest",
                    "FriendlyName": "Insert Test",
                    "Icon": 99,
                    "IsComponent": true
                }, {
                    "ID": "schemas\/258",
                    "Name": "InsertTest",
                    "FriendlyName": "Insert Test",
                    "Icon": 99,
                    "IsComponent": true
                }, {
                    "ID": "Schema_DataBaseQuery",
                    "Name": "DataBaseQuery",
                    "FriendlyName": "DEX - Database Query Component",
                    "Icon": 9,
                    "IsComponent": true
                }, {
                    "ID": "Schema_EmailerComponent",
                    "Name": "EmailerComponent",
                    "FriendlyName": "DEX - SMTP Emailer Component",
                    "Icon": 9,
                    "IsComponent": true
                }, {
                    "ID": "Schema_JSONServiceClient",
                    "Name": "JSONServiceClient",
                    "FriendlyName": "DEX - RESTful\/JSON Web Service Client",
                    "Icon": 9,
                    "IsComponent": true
                }, {
                    "ID": "Schema_PollServiceComponent",
                    "Name": "PollServiceComponent",
                    "FriendlyName": "DEX - Poll Service Component",
                    "Icon": 9,
                    "IsComponent": true
                }, {
                    "ID": "schemas\/FormFilteredResultPage",
                    "Name": "FormFilteredResultPage",
                    "FriendlyName": "Form - Filtered Result Page",
                    "Icon": 1,
                    "IsComponent": false
                }, {
                    "ID": "Schema_SOAPServiceClient",
                    "Name": "SOAPServiceClient",
                    "FriendlyName": "DEX - SOAP Web Service Client",
                    "Icon": 9,
                    "IsComponent": true
                }, {
                    "ID": "schemas\/449",
                    "Name": "CompTest",
                    "FriendlyName": "CompTest",
                    "Icon": 9,
                    "IsComponent": true
                }, {
                    "ID": "schemas\/450",
                    "Name": "ListTest",
                    "FriendlyName": "ListTest",
                    "Icon": 99,
                    "IsComponent": true
                }, {
                    "ID": "Schema_BinaryDocument",
                    "Name": "BinaryDocument",
                    "FriendlyName": "Binary Document",
                    "Icon": 2,
                    "IsComponent": true
                }]
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.PageCommandsServices.GetGlobalVariables">
            <summary>
            Retrieves the collection of names of Global Variables. Divided to Static variables and Dynamic variables
            </summary>
            <returns>Object contains 2 string arrays</returns>
            <example>
            <code language="javascript">
            <![CDATA[
            {
            	StaticVariables: ["Root", "CorpName"],
            	DynamicVariables: ["SiteUrl"]
            }
            ]]>
            </code>
            </example>
        </member>
        <member name="M:IngeniuxCMService.PageDataUtilities.BuildChildElements(Ingeniux.CMS.IElement,IngeniuxCMService.PageDataRequestParameters,System.Boolean)">
            <summary>
            Builds an element, including its children.
            </summary>
            <param name="element">The element to convert</param>
            <param name="requestParameters">Request parameters</param>
            <returns>Serializable element info object</returns>
        </member>
        <member name="M:IngeniuxCMService.PageDataUtilities.Diff(IngeniuxCMService.PageElementData,IngeniuxCMService.PageElementData,Ingeniux.CMS.Models.BasicDiffController)">
            <summary>
            This method updates the newData to including diffing information.
            </summary>
            <param name="newData"></param>
            <param name="originalData"></param>
        </member>
        <member name="M:IngeniuxCMService.PageSaveDataUtilities.SavePage(Ingeniux.CMS.IPage,IngeniuxCMService.PageSaveData)">
            <summary>
            Save page data
            </summary>
            <param name="page"></param>
            <param name="pageData"></param>
            <returns>True if required refresh, in this case, it is only when embedded component sharing happened</returns>
        </member>
        <member name="T:IngeniuxCMService.ISSMapServices">
            <summary>
            This service contract is where user agents,
            sites, and mobile-device manipulations are located. In the future, it will be where all publishing system
            manipulation takes place. 
            </summary>
        </member>
        <member name="T:IngeniuxCMService.MobileDeviceServices">
            <summary>
            Provide the functionality to work with mobile devices emulations for page preview.
            </summary>
        </member>
        <member name="M:IngeniuxCMService.MobileDeviceServices.GetDevicesInformation">
             <summary>
             Retrieves the list of Mobile Devices emulation entries and status
             </summary>
             <returns>
             <para>The object containing whether Mobile Devices emulation is enabled, the generic device information, list of device bundles (emulation entries), and whether is download of device database is going on.</para>
             <example>
             Sample JSON return
             <code language="javascript">
             <![CDATA[
            {
            	"code": 0,
            	"error": null,
            	"message": {
            		"DeviceBundles": [{
            			"DeviceIds": null,
            			"Devices": [{
            				"FullName": "Samsung - Galaxy S 4G (Android 1.0)",
            				"Height": 800,
            				"ID": "16553-17979-21556-18092",
            				"IsTablet": false,
            				"Manufacturer": "Samsung",
            				"Platform": "Android",
            				"UserAgent": "Android\/1.0 (SGH-T959V FROYO)",
            				"Version": "1.0",
            				"Width": 480
            			}],
            			"Name": "Galaxy S 4",
            			"RepresentativeDeviceId": "16553-17979-21556-18092",
            			"ScreenHeight": 800,
            			"ScreenWidth": 480,
            			"UserAgent": "IGXGeneric\/PreviewDevice (asdfsdf)"
            		}, {
            			"DeviceIds": null,
            			"Devices": [{
            				"FullName": "Apple - iPhone (iOS 7.0)",
            				"Height": 480,
            				"ID": "12280-17779-24305-18092",
            				"IsTablet": false,
            				"Manufacturer": "Apple",
            				"Platform": "iOS",
            				"UserAgent": "Apple iPhone v7.0 Stocks v3.0.11A465",
            				"Version": "7.0",
            				"Width": 320
            			}],
            			"Name": "Iphone",
            			"RepresentativeDeviceId": "12280-17779-24305-18092",
            			"ScreenHeight": 480,
            			"ScreenWidth": 320,
            			"UserAgent": "Apple iPhone v7.0 Stocks v3.0.11A465"
            		}],
            		"DevicesEnabled": true,
            		"Downloading": false,
            		"GenericDevice": {
            			"ScreenHeight": 320,
            			"ScreenWidth": 240,
            			"UserAgent": "IGXGenericPreviewDevice|240|320"
            		},
            		"Message": ""
            	}
            }
             ]]>
             </code>
             </example>
             </returns>
        </member>
        <member name="M:IngeniuxCMService.MobileDeviceServices.UpdateGenericDevice(IngeniuxCMService.ScreenSize)">
            <summary>
            Updates Generic Device information. Generic Device is the fall back emulation for all mobile devices that can be detected as mobile, but cannot obtain the resolution information.
            Setting up the resolution for Generic Device will allow testing of Preview on these unknown mobile devices.
            </summary>
            <param name="data">
            <para>The screen size of Generic Mobile Device</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "ScreenWidth": 240,
                    "ScreenHeight": 320
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Updated Generic Device resolution</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "ScreenHeight": 320,
                    "ScreenWidth": 240
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.MobileDeviceServices.UpdateDeviceBundle(IngeniuxCMService.DeviceBundleRepresentation)">
            <summary>
            Updates an existing Device Bundle information, including Bundle name, Devices coverred, and representative Device.
            Will return error state if Bundle doesn't exist.
            </summary>
            <param name="data">
            <para>
            The new Device bundle information
            </para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "Name": "Galaxy S 4",
                    "DeviceIds": ["16553-17979-21556-18092", 
            			"13064-17979-21556-18092", 
            			"16362-17979-21556-18092"],
                    "RepresentativeDeviceId": "16553-17979-21556-18092"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>
            The final Bundle information after update
            </para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "DeviceIds": ["16553-17979-21556-18092", 
            			"13064-17979-21556-18092", 
            			"16362-17979-21556-18092"],
                    "Devices": null,
                    "Name": "Galaxy S 4",
                    "RepresentativeDeviceId": "16553-17979-21556-18092",
                    "ScreenHeight": 0,
                    "ScreenWidth": 0,
                    "UserAgent": null
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.MobileDeviceServices.DeleteDeviceBundle(System.String)">
            <summary>
            Deletes a Device Bundle that matches the given Bundle name. Will return error state if Bundle doesn't exist.
            </summary>
            <param name="data">
            <para>Name of Device Bundle to be deleted</para>
            </param>
            <returns>True of Bundle is deleted</returns>
        </member>
        <member name="M:IngeniuxCMService.MobileDeviceServices.CreateDeviceBundle(IngeniuxCMService.DeviceBundleRepresentation)">
            <summary>
            Creates a new Device Bundle. Will throw error if another Device Bundle with the same name already exists.
            </summary>
            <param name="data">
            <para>The information of the new Device Bundle to create</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "Name": "iphone",
                    "DeviceIds": ["12280-18117-22901-18092", 
            			"12280-18117-22902-18092"],
                    "RepresentativeDeviceId": "12280-18117-22901-18092"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>The information of created Device Bundle</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "DeviceIds": null,
                    "Devices": [{
                        "FullName": "Apple - iPhone (iOS 7.3)",
                        "Height": 480,
                        "ID": "12280-18117-22901-18092",
                        "IsTablet": false,
                        "Manufacturer": "Apple",
                        "Platform": "iOS",
                        "UserAgent": "Mozilla\/5.0 (iPhone; CPU iPhone OS 5_1_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Mercury\/7.3 Mobile\/9B206 Safari\/7534.48.3",
                        "Version": "7.3",
                        "Width": 320
                    }, {
                        "FullName": "Apple - iPhone (iOS 7.4)",
                        "Height": 480,
                        "ID": "12280-18117-22902-18092",
                        "IsTablet": false,
                        "Manufacturer": "Apple",
                        "Platform": "iOS",
                        "UserAgent": "Mozilla\/5.0 (iPhone; CPU iPhone OS 5_1_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Mercury\/7.4.2 Mobile\/9B206 Safari\/7534.48.3",
                        "Version": "7.4",
                        "Width": 320
                    }],
                    "Name": "iphone",
                    "RepresentativeDeviceId": "12280-18117-22901-18092",
                    "ScreenHeight": 480,
                    "ScreenWidth": 320,
                    "UserAgent": "Mozilla\/5.0 (iPhone; CPU iPhone OS 5_1_1 like Mac OS X) AppleWebKit\/534.46 (KHTML, like Gecko) Mercury\/7.3 Mobile\/9B206 Safari\/7534.48.3"
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.MobileDeviceServices.GetDeviceCandidates(IngeniuxCMService.DeviceListingFilter)">
            <summary>
            Retrieves Mobile Devices listing, that matches search criteria, from Mobile Device library.
            </summary>
            <param name="data">
            <para>Criteria to generate the listing. Because there are 50,000 devices and growing, the result will provided in paginated fashion.</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "ExcludeIds": ["18736-18111-24178-18092", 
            			"18736-18111-24343-18092"],
                    "Manufacturer": "HTC",
                    "Width": 480,
                    "Height": 800,
                    "NameFilter": "HTC one",
                    "start": 200,
                    "count": 100
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Listing of Devices matching the search criteria, and the list count</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "Devices": [{
                        "FullName": "HTC - One SU (Android 4.2)",
                        "Height": 800,
                        "ID": "20294-18111-22589-18092",
                        "IsTablet": false,
                        "Manufacturer": "HTC",
                        "Platform": "Android",
                        "UserAgent": "Mozilla\/5.0 (Linux; U; Android 4.1.1; zh-cn; HTC T528w Build\/JRO03H) AppleWebKit\/533.1 (KHTML, like Gecko)Version\/4.0 MQQBrowser\/4.2 Mobile Safari\/533.1",
                        "Version": "4.2",
                        "Width": 480
                    }, {
                        "FullName": "HTC - One SU (Android 4.3)",
                        "Height": 800,
                        "ID": "20294-18111-22879-18092",
                        "IsTablet": false,
                        "Manufacturer": "HTC",
                        "Platform": "Android",
                        "UserAgent": "Mozilla\/5.0 (Linux; U; Android 4.1.1; zh-cn; HTC T528w Build\/JRO03H) AppleWebKit\/533.1 (KHTML, like Gecko)Version\/4.0 MQQBrowser\/4.3 Mobile Safari\/533.1",
                        "Version": "4.3",
                        "Width": 480
                    }, {
                        "FullName": "HTC - One SU (Android 4.5)",
                        "Height": 800,
                        "ID": "20294-18111-24683-18092",
                        "IsTablet": false,
                        "Manufacturer": "HTC",
                        "Platform": "Android",
                        "UserAgent": "Mozilla\/5.0 (Linux; U; Android 4.1.1; zh-cn; HTC T528w Build\/JRO03H) AppleWebKit\/533.1 (KHTML, like Gecko)Version\/4.0 MQQBrowser\/4.5 Mobile Safari\/533.1",
                        "Version": "4.5",
                        "Width": 480
                    }, {
                        "FullName": "HTC - One SU (Android 9.0)",
                        "Height": 800,
                        "ID": "20294-18111-22261-18092",
                        "IsTablet": false,
                        "Manufacturer": "HTC",
                        "Platform": "Android",
                        "UserAgent": "Mozilla\/5.0 (Linux; U; Android 4.1.1; zh-CN; HTC T528w Build\/JRO03H) AppleWebKit\/534.31 (KHTML, like Gecko) UCBrowser\/9.0.1.294 U3\/0.8.0 Mobile Safari\/534.31",
                        "Version": "9.0",
                        "Width": 480
                    }],
                    "TotalCount": 248
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.MobileDeviceServices.SetEnabled(System.Boolean)">
            <summary>
            Toggles the Mobile Devices Emulation on or off.
            </summary>
            <param name="data">True to enable Mobile Devices Emulation, False to disable</param>
            <returns>True if Mobile Device Emulation is enabled, False if not</returns>
        </member>
        <member name="T:IngeniuxCMService.SSMapServices">
            <summary>
            Provides the functionality to manage site branding objects: user agents and sites.
            </summary>
        </member>
        <member name="M:IngeniuxCMService.SSMapServices.ListUserAgentsAndSites">
            <summary>
            Retrieves the listing of basic information of all User Agents and Site Brandings
            </summary>
            <returns>
            <para>Object containing collections of basic information of User Agents and Site Brandings</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "Sites": [{
                        "Name": "Corporation",
                        "SearchString": "corp",
                        "SiteGroup": "Corp"
                    }, {
                        "Name": "Support",
                        "SearchString": "support",
                        "SiteGroup": "Support"
                    }],
                    "UserAgents": [{
                        "ContentType": "text\/html",
                        "FileExtension": "xml",
                        "Name": "IE",
                        "SearchString": "ie"
                    }, {
                        "ContentType": "text\/html",
                        "FileExtension": "xml",
                        "Name": "Chrome",
                        "SearchString": "chrome"
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.SSMapServices.ReorderUserAgents(System.String[])">
            <summary>
            Reorders collection of User Agents based on provided sequence of names. The order of User Agents are important, since it will determine with User Agent branding gets evaluated and used first.
            </summary>
            <param name="data">
            <para>Array of names of User Agents, reflecting the updated order</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": ["Chrome", "IE"]
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Array of User Agent names reflecting the updated order</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": ["Chrome", "IE"]
            }
            ]]>
            </code>
            </example>
            </returns>
            <seealso cref="M:IngeniuxCMService.SSMapServices.ReorderSites(System.String[])"/>
        </member>
        <member name="M:IngeniuxCMService.SSMapServices.ReorderSites(System.String[])">
            <summary>
            Reorders collection of Site Brandins based on provided sequence of names. The order of Site Branding are important, since it will determine with Site Branding gets evaluated and used first.
            </summary>
            <param name="data">
            <para>Array of names of Site Brandings, reflecting the updated order</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": ["Support", "Corporation"]
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Array of Site Branding names reflecting the updated order</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": ["Support", "Corporation"]
            }
            ]]>
            </code>
            </example>
            </returns>
            <seealso cref="M:IngeniuxCMService.SSMapServices.ReorderUserAgents(System.String[])"/>
        </member>
        <member name="M:IngeniuxCMService.SSMapServices.DeleteUserAgent(System.String)">
            <summary>
            Deletes a User Agent Branding by its name
            </summary>
            <param name="data">Name of the User Agent to be deleted</param>
            <returns>Deleted User Agent Branding name</returns>
            <remarks>
            <para>If User Agent with matching name doesn't exist, returns error status</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SSMapServices.DeleteSite(System.String)">
            <summary>
            Deletes a Site Branding by its name
            </summary>
            <param name="data">Name of the Site Branding to be deleted</param>
            <returns>Deleted Site Branding's name</returns>
        </member>
        <member name="M:IngeniuxCMService.SSMapServices.UpdateUserAgent(IngeniuxCMService.UserAgentMgrInfo)">
            <summary>
            Updates a User Agent Branding
            </summary>
            <param name="data">
            <para>Information to update the User Agent</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "Name": "Chrome",
                    "SearchString": "chrome",
                    "ContentType": "text/html",
                    "FileExtension": "xml"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Information of User Agent after update</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "ContentType": "text\/html",
                    "FileExtension": "xml",
                    "Name": "Chrome",
                    "SearchString": "chrome"
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If User Agent with matching name doesn't exist, returns error status</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SSMapServices.UpdateSite(IngeniuxCMService.SiteMgrInfo)">
            <summary>
            Updates a Site Branding
            </summary>
            <param name="data">Information to update the Site Branding</param>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "Name": "Support",
                    "SearchString": "support",
                    "SiteGroup": "Support"
                }
            }
            ]]>
            </code>
            </example>
            <returns>
            <para>Information of Site Branding after update</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "Name": "Support",
                    "SearchString": "support",
                    "SiteGroup": "Support"
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Site Branding with matching name doesn't exist, returns error status</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SSMapServices.CreateUserAgent(IngeniuxCMService.UserAgentMgrInfo)">
            <summary>
            Creates a new User Agent based on provided information
            </summary>
            <param name="data">
            <para>Information of new User Agent to create</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "Name": "Safari",
                    "SearchString": "safari",
                    "ContentType": "text/html",
                    "FileExtension": "xml"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Information of the created User Agent</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "ContentType": "text\/html",
                    "FileExtension": "xml",
                    "Name": "Safari",
                    "SearchString": "safari"
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If another User Agent with the same name already exists, returns error status</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SSMapServices.CreateSite(IngeniuxCMService.SiteMgrInfo)">
            <summary>
            Creates a new Site Branding with provided information
            </summary>
            <param name="data">Information to create the Site Branding</param>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "Name": "Marketing",
                    "SearchString": "marketing",
                    "SiteGroup": "marketing"
                }
            }
            ]]>
            </code>
            </example>
            <returns>
            <para>Information of created Site Branding</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "Name": "Marketing",
                    "SearchString": "marketing",
                    "SiteGroup": "marketing"
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If another Site Branding with the same name already exists, returns error status</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.IPublishingMonitorServices.GetCurrentTasks">
            <summary>
            The new service that returns current publish and replication tasks together.
            </summary>
            <param name="locale"></param>
            <returns></returns>
        </member>
        <member name="M:IngeniuxCMService.IPublishingMonitorServices.GetPendingPublishes">
            <summary>
            The new service that returns a list of pending publishes.
            </summary>
            <param name="locale"></param>
            <returns></returns>
        </member>
        <member name="T:IngeniuxCMService.Properties.Resources">
            <summary>
              A strongly typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:IngeniuxCMService.Properties.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance this class uses.
            </summary>
        </member>
        <member name="P:IngeniuxCMService.Properties.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:IngeniuxCMService.Properties.Resources.CannotCreateFieldChoicesProviderFactoryNul">
            <summary>
              Looks up a localized string similar to CannotCreateFieldChoicesProviderFactory, null common object provided.
            </summary>
        </member>
        <member name="P:IngeniuxCMService.Properties.Resources.CannotPerformPublishMonitorActionsWithoutL">
            <summary>
              Looks up a localized string similar to CannotPerformPublishMonitorActionsWithoutLoggingIn.
            </summary>
        </member>
        <member name="P:IngeniuxCMService.Properties.Resources.ErrorCompilingCustomHookCsX0">
            <summary>
              Looks up a localized string similar to ErrorCompilingCustomHook.cs: {0}.
            </summary>
        </member>
        <member name="P:IngeniuxCMService.Properties.Resources.ErrorCompilingGet_element_valuesCsX0">
            <summary>
              Looks up a localized string similar to ErrorCompilingGet_element_values.cs: {0}..
            </summary>
        </member>
        <member name="P:IngeniuxCMService.Properties.Resources.ErrorInitializingIngeniuxCMSServiceRequest">
            <summary>
              Looks up a localized string similar to ErrorInitializingIngeniuxCMSServiceRequest: Error occurred initializing Custom Hooks:{0}.
            </summary>
        </member>
        <member name="P:IngeniuxCMService.Properties.Resources.ErrorRegisteringEnumerationChoicesProvider">
            <summary>
              Looks up a localized string similar to ErrorRegisteringEnumerationChoicesProvider plugin &quot;{0}&quot;: {1} 
            {2}.
            </summary>
        </member>
        <member name="P:IngeniuxCMService.Properties.Resources.FieldTypeGroups">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
            &lt;FieldTypeGroups&gt;
            	&lt;Group Name=&quot;Attributes&quot;&gt;
            		&lt;FieldType ID=&quot;1&quot;/&gt;
            	&lt;/Group&gt;
            	&lt;Group Name=&quot;Text&quot;&gt;
            		&lt;FieldType ID=&quot;2&quot;/&gt;
            		&lt;FieldType ID=&quot;3&quot;/&gt;
            	&lt;/Group&gt;
            	&lt;Group Name=&quot;Assets&quot;&gt;
            		&lt;FieldType ID=&quot;12&quot;/&gt;
            		&lt;FieldType ID=&quot;13&quot;/&gt;
            		&lt;FieldType ID=&quot;14&quot;/&gt;
            	&lt;/Group&gt;
            	&lt;Group Name=&quot;Links&quot;&gt;
            		&lt;FieldType ID=&quot;6&quot;/&gt;
            		&lt;FieldType ID=&quot;26&quot;/&gt;
            	&lt;/Group&gt;
            	&lt;Group Name=&quot;Functional&quot;&gt;
            		&lt;FieldType ID=&quot;4&quot;/&gt;
            		&lt;FieldType ID=&quot;7&quot;/&gt;
            		&lt;FieldType ID=&quot;17&quot;/&gt;
            		&lt;FieldType ID=&quot;18&quot;/&gt;
            	 [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:IngeniuxCMService.Properties.Resources.sysOptConfig">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
            &lt;sysOptConfig desc=&quot;SysOptRootDesc&quot; id=&quot;SysOptRoot&quot; name=&quot;SysOptRootName&quot; type=&quot;container&quot;&gt;
              &lt;children&gt;
                &lt;item desc=&quot;CMSSettingsRootDesc&quot; id=&quot;DTSettingsRoot&quot; name=&quot;CMSSettingsRootName&quot; navName=&quot;CMSSettingsRootNavName&quot; type=&quot;container&quot;&gt;
                  &lt;children&gt;
                    &lt;item desc=&quot;toolbarButttonConfigDesc&quot; id=&quot;toolbarButtonConfig&quot; name=&quot;toolbarButttonConfigName&quot; navName=&quot;toolbarButttonConfigNavName&quot; type=&quot;contextsetting&quot;&gt;
                      &lt;contextDisplayItem id=&quot;toolbarButto [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:IngeniuxCMService.Properties.Resources.sysOptToSettingsMapper">
             <summary>
               Looks up a localized string similar to &lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot; ?&gt;
            &lt;sysOptToSettingsMapper&gt;
              &lt;settings&gt;
                &lt;XSLFOProcessor&gt;
                  &lt;configFile secName=&quot;ApacheFOP&quot; setName=&quot;ConfigFile&quot;/&gt;
                  &lt;debugMode defaultValue=&quot;false&quot; secName=&quot;ApacheFOP&quot; setName=&quot;DebugMode&quot;/&gt;
                  &lt;noAnno defaultValue=&quot;false&quot; secName=&quot;ApacheFOP&quot; setName=&quot;NoAnnot&quot;/&gt;
                  &lt;noCopy defaultValue=&quot;false&quot; secName=&quot;ApacheFOP&quot; setName=&quot;NoCopy&quot;/&gt;
                  &lt;noEdit defaultValue=&quot;false&quot; secName=&quot;ApacheFOP&quot; setName=&quot;NoEdit&quot;/&gt;
                  &lt;noPrint defaultValue=&quot;false&quot; secN [rest of string was truncated]&quot;;.
             </summary>
        </member>
        <member name="P:IngeniuxCMService.PublishingStatus.EstimatedEndTime">
            <summary>
            UTC time string of estimated completion
            </summary>
        </member>
        <member name="P:IngeniuxCMService.PublishingStatus.EstimatedEndTimeObject">
            <summary>
            UTC time
            </summary>
        </member>
        <member name="T:IngeniuxCMService.ReplicationSessionRepresentation">
            <summary>
            The simle version of the ReplicationSession for serialization only
            </summary>
        </member>
        <member name="T:IngeniuxCMService.PublishingMonitorServices">
            <summary>
            Provides the functionality to monitor publishing and replication status.
            </summary>
        </member>
        <member name="M:IngeniuxCMService.PublishingMonitorServices.GetTaskPages(System.String)">
            <summary>
            Retrieves the list of Pages to be published in the given on-going or pending Publishing Task
            </summary>
            <param name="data">Id of Publishing Task</param>
            <returns>
            <para>Array of Ids of Pages that will be published by the Publishing Task</para>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.PublishingMonitorServices.RemoveTask(System.String)">
            <summary>
            Removes a pending Publishing Task. Please note that on-going Publishing Task cannot be removed.
            </summary>
            <param name="data">Id of Publishing Task</param>
            <returns>
            <para>Id of the Publishing Task that was removed</para>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.PublishingMonitorServices.MoveTask(IngeniuxCMService.MoveTaskRequest)">
            <summary>
            Repositions a Publishing Task to be executed earlier or later
            </summary>
            <param name="data">Information regarding how to move the Publishing Tasks</param>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                SourceID: "PublishingTasks/4",
                TargetID: "PublishingTasks/2",
                After: false
            }
            ]]>
            </code>
            </example>
            <returns>
            <para>When successful, returns the original request data</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "SourceID": "PublishingTasks/4",
                    "TargetID": "PublishingTasks/2",
                    "After": false
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.PublishingMonitorServices.GetCurrentTasks">
            <summary>
            Retrieves the on-going Publishing Task and Replication Tasks status, also the pending publishing tasks and recently completed publishes.
            </summary>
            <returns>
            <para>Current publishing status object</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "PendingItemsCount": 0,
                    "Publishing": {
                        "EstimatedStartTime": "",
                        "ID": "TaskMonitor_PublishingTargets\/1",
                        "IsFullPublish": true,
                        "Name": "Live Monitor",
                        "PagesCount": 15,
                        "PubTargetName": "Live",
                        "RootPageID": "x2",
                        "SubmitTime": "20140128T19:35:38",
                        "SubmitUserID": "INGENIUX\\awang",
                        "WaitingForSync": false,
                        "AverageMilliSecondsPerPage": 0,
                        "AveragePagesPerSecond": 0,
                        "CurrentStatus": "Copying \"Prebuilt\" directory",
                        "Errors": null,
                        "EstimatedEndTime": "",
                        "Inactive": false,
                        "PagesPublished": 0,
                        "PercentCompleted": 1157,
                        "StartTime": "20140128T19:35:38",
                        "TasksCount": 0,
                        "UpdateTime": "20140128T11:35:39"
                    },
                    "RecentCompletedPublishes": [{
                        "AveragePagePublishMillis": 0,
                        "CompletionTime": "20140127T10:18:18",
                        "Entries": [{
                            "Error": "Specified argument was out of the range of valid values.\u000d\u000aParameter name: size",
                            "PageID": "",
                            "Success": false,
                            "SuccessMessage": "Failed"
                        }],
                        "Error": "",
                        "Incremental": null,
                        "PublishedPages": [""],
                        "PublishingTargetID": "PublishingTargets\/1",
                        "PublishingTargetName": "Live",
                        "ReplicationCompletionTime": "",
                        "ReplicationsToPerform": 0,
                        "StartTime": "2014-01-27 10:18:18",
                        "TotalPagesPublished": 0,
                        "TotalTimeSeconds": 0,
                        "UserID": "INGENIUX\\awang",
                        "UserName": "Turtle Master"
                    }],
                    "Replications": {
                        "Tasks": []
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.PublishingMonitorServices.GetPendingPublishes">
            <summary>
            Retrieves the listing of pending Publishing Tasks
            </summary>
            <returns>
            <para>Collection of pending Publishing Tasks</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "Pending": [{
                        "ID": "PublishingTasks/233",
                        "Name": "Staging Monitor",
                        "PubTargetName": "Staging",
                        "RootPageID": "x5",
                        "IsFullPublish": false,
                        "SubmitTime": "20140128T19:37:43",
                        "SubmitUserID": "ingeniux\\awang",
                        "Pages": ["x89", "x11", "x12", "x15", "x9"],
                        "PagesCount": 5
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.PublishingMonitorServices.GetPublishLogsForPubTarget(System.String)">
            <summary>
            Retrieves the collection of Publishing Logs basic information for specific Publishing Target.
            Each log contains the information of a completed Publishing Task.
            </summary>
            <param name="pubTargetId">Id of Publishing Target to get logs for</param>
            <returns>
            <para>Array of Publishing Logs for given Publishing Target</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "FileName": "publishLog_PublishingTargets_1-2014-01-28-11-37-41.xml",
                    "PublishTime": "2014-01-28-11-37",
                    "PublishingTargetID": "PublishingTargets\/1"
                }, {
                    "FileName": "publishLog_PublishingTargets_1-2014-01-28-11-37-05.xml",
                    "PublishTime": "2014-01-28-11-37",
                    "PublishingTargetID": "PublishingTargets\/1"
                }, {
                    "FileName": "publishLog_PublishingTargets_1-2014-01-28-11-37-00.xml",
                    "PublishTime": "2014-01-28-11-37",
                    "PublishingTargetID": "PublishingTargets\/1"
                }, {
                    "FileName": "publishLog_PublishingTargets_1-2014-01-28-11-36-57.xml",
                    "PublishTime": "2014-01-28-11-36",
                    "PublishingTargetID": "PublishingTargets\/1"
                }, {
                    "FileName": "publishLog_PublishingTargets_1-2014-01-28-11-35-47.xml",
                    "PublishTime": "2014-01-28-11-35",
                    "PublishingTargetID": "PublishingTargets\/1"
                }, {
                    "FileName": "publishLog_PublishingTargets_1-2014-01-27-10-18-29.xml",
                    "PublishTime": "2014-01-27-10-18",
                    "PublishingTargetID": "PublishingTargets\/1"
                }, {
                    "FileName": "publishLog_PublishingTargets_1-2013-12-11-16-56-35.xml",
                    "PublishTime": "2013-12-11-16-56",
                    "PublishingTargetID": "PublishingTargets\/1"
                }, {
                    "FileName": "publishLog_PublishingTargets_1-2013-12-11-16-56-29.xml",
                    "PublishTime": "2013-12-11-16-56",
                    "PublishingTargetID": "PublishingTargets\/1"
                }, {
                    "FileName": "publishLog_PublishingTargets_1-2013-12-11-14-34-18.xml",
                    "PublishTime": "2013-12-11-14-34",
                    "PublishingTargetID": "PublishingTargets\/1"
                }, {
                    "FileName": "publishLog_PublishingTargets_1-2013-12-11-12-18-55.xml",
                    "PublishTime": "2013-12-11-12-18",
                    "PublishingTargetID": "PublishingTargets\/1"
                }, {
                    "FileName": "publishLog_PublishingTargets_1-2013-12-11-11-54-52.xml",
                    "PublishTime": "2013-12-11-11-54",
                    "PublishingTargetID": "PublishingTargets\/1"
                }, {
                    "FileName": "publishLog_PublishingTargets_1-2013-12-11-11-54-25.xml",
                    "PublishTime": "2013-12-11-11-54",
                    "PublishingTargetID": "PublishingTargets\/1"
                }, {
                    "FileName": "publishLog_PublishingTargets_1-2013-12-11-11-53-23.xml",
                    "PublishTime": "2013-12-11-11-53",
                    "PublishingTargetID": "PublishingTargets\/1"
                }, {
                    "FileName": "publishLog_PublishingTargets_1-2013-12-11-11-20-32.xml",
                    "PublishTime": "2013-12-11-11-20",
                    "PublishingTargetID": "PublishingTargets\/1"
                }, {
                    "FileName": "publishLog_PublishingTargets_1-2013-12-11-11-15-15.xml",
                    "PublishTime": "2013-12-11-11-15",
                    "PublishingTargetID": "PublishingTargets\/1"
                }]
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>If Publishing Target doesn't exist, or it has never had a successful publish, returns empty collection</remarks>
        </member>
        <member name="M:IngeniuxCMService.PublishingMonitorServices.GetPublishLogDetails(System.String)">
            <summary>
            Retrieves the full details of a Publish Log
            </summary>
            <param name="fileName">The file name of the Publish Log, no directory information</param>		
            <returns>
            <para>Full details of Publish Log</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "AveragePagePublishMillis": 24.67,
                    "CompletionTime": "20140128T11:37:40",
                    "Entries": [{
                        "Error": "",
                        "PageID": "x89",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x13",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x12",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x3",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x4",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x2",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x10",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x9",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x6",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x14",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x7",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x8",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x99",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x11",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x5",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }],
                    "Error": "",
                    "Incremental": "false",
                    "PublishedPages": ["x89", "x13", "x12", "x3", "x4", "x2", "x10", "x9", "x6", "x14", "x7", "x8", "x99", "x11", "x5"],
                    "PublishingTargetID": "PublishingTargets\/1",
                    "PublishingTargetName": "Live",
                    "ReplicationCompletionTime": "",
                    "ReplicationsToPerform": 0,
                    "StartTime": "2014-01-28 11:37:39",
                    "TotalPagesPublished": 15,
                    "TotalTimeSeconds": 1.51,
                    "UserID": "INGENIUX\\awang",
                    "UserName": "Turtle Master"
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.PublishingMonitorServices.GetRepLogsForRepTarget(System.String,System.String)">
            <summary>
            Retrieves the Replication Logs for specific Replication Target under a Publishing Target
            </summary>
            <param name="pubTargetId">Id of Publishing Target</param>
            <param name="repTargetId">Id of Replication Target, must be under the given Publishing Target</param>
            <returns>
            <para>Collection of Replication Log entries, contains basic information of each log</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "FileName": "replicationLog_PublishingTargets_1_bc24ec5353c9417590dbcc27ee56f005_2014-01-28-21-08-52.xml",
                    "ReplicationTargetID": "20",
                    "StartTime": "2014-01-28-21-08"
                }, {
                    "FileName": "replicationLog_PublishingTargets_1_bc24ec5353c9417590dbcc27ee56f005_2014-01-28-21-07-36.xml",
                    "ReplicationTargetID": "20",
                    "StartTime": "2014-01-28-21-07"
                }]
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>Event if Publishing Target or Replication Target no longer exist, there are might still be logs kept around.</para>
            <para>If Replication Target is not under Publishing Target, we will have empty collection returned.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.PublishingMonitorServices.GetReplicationLogDetails(System.String)">
            <summary>
            Retrieves the full details of a Replication Log
            </summary>
            <param name="fileName">File name of Replication Log, no directory information</param>
            <returns>
            <para>Full details of Replication Log</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "AveragePagePublishMillis": 27.67,
                    "CompletionTime": "20140128T13:08:51",
                    "Entries": [{
                        "Error": "",
                        "PageID": "x99",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x6",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x10",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x3",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x4",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x7",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x89",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x14",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x9",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x11",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x12",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x2",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x13",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x8",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }, {
                        "Error": "",
                        "PageID": "x5",
                        "Success": true,
                        "SuccessMessage": "Successful"
                    }],
                    "Error": "",
                    "Incremental": "false",
                    "PublishedPages": ["x99", "x6", "x10", "x3", "x4", "x7", "x89", "x14", "x9", "x11", "x12", "x2", "x13", "x8", "x5"],
                    "PublishingTargetID": "PublishingTargets\/1",
                    "PublishingTargetName": "Live",
                    "ReplicationCompletionTime": "20140128T13:08:59",
                    "ReplicationsToPerform": 1,
                    "StartTime": "2014-01-28 13:08:49",
                    "TotalPagesPublished": 15,
                    "TotalTimeSeconds": 2.08,
                    "UserID": "INGENIUX\\awang",
                    "UserName": "Turtle Master"
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If for any reason replication could not complete, then "Stopping Error" will be provided.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "CancelledByUser": false,
                    "PublishingTargetID": "PublishingTargets\/1",
                    "Replicated": 0,
                    "ReplicatedItems": [],
                    "ReplicationTargetID": "bc24ec5353c9417590dbcc27ee56f005",
                    "Skipped": 0,
                    "SkippedItems": [],
                    "StartTime": "2014-01-28 21:07:36",
                    "StoppingError": "Access to the path 'G:\\SyncTests\\file\\errors' is denied.",
                    "TotalTimeSeconds": 0
                }
            }
            ]]>
            </code>
            </example>
            </remarks>
        </member>
        <member name="F:IngeniuxCMService.PublishCompletionLog.ReplicationCompletionTime">
            <summary>
            This is an expensive operation; use only when necessary.
            </summary>
        </member>
        <member name="T:IngeniuxCMService.ReplicationCompleteLogModel">
            <summary>
            Service model to include l10n strings. Also, replicated is merged with deleted.
            </summary>
        </member>
        <member name="M:IngeniuxCMService.ISchemaDesignerServices.SyncPagesToSchema(IngeniuxCMService.SchemaSyncRequest)">
            <remarks>Merges the SchemaSyncModule with SchemaSync ASP. Also covers preSchemaSync in order to reduce that step.
            Parameter changed from a double-serialized JSON string to a real object. The client side may 
            need to adapt to this change.</remarks>
        </member>
        <member name="T:IngeniuxCMService.SchemaDesignerServices">
            <summary>
            Provides the functionality to manage schemas.
            </summary>
        </member>
        <member name="M:IngeniuxCMService.SchemaDesignerServices.GetSchemaFieldCandidates">
            <summary>
            Gets all Field types as candidates for Schema construction. The collection is grouped by purpose or application of the Field type.
            </summary>
            <returns>
            <para>2 level collection of all Schema Field types</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "Groups": [{
                        "FieldTypes": [{
                            "ElementTypeName": "string",
                            "HasExports": false,
                            "ID": "1",
                            "IconName": "new16",
                            "IsXpower": false,
                            "Label": "Attribute",
                            "Name": "Attribute",
                            "Properties": []
                        }],
                        "GroupLabel": "Attribute",
                        "GroupName": "Attributes"
                    }, {
                        "FieldTypes": [{
                            "ElementTypeName": "string",
                            "HasExports": false,
                            "ID": "2",
                            "IconName": "document16",
                            "IsXpower": false,
                            "Label": "Plain Text",
                            "Name": "Text Element",
                            "Properties": []
                        }, {
                            "ElementTypeName": "dhtml",
                            "HasExports": false,
                            "ID": "3",
                            "IconName": "edit16",
                            "IsXpower": false,
                            "Label": "XHTML Editor",
                            "Name": "XHTML Element",
                            "Properties": [{
                                "ChoicesValue": "",
                                "Label": "Height",
                                "Name": "Height",
                                "Type": "integer"
                            }]
                        }],
                        "GroupLabel": "Text",
                        "GroupName": "Text"
                    }, {
                        "FieldTypes": [{
                            "ElementTypeName": "imagefile",
                            "HasExports": false,
                            "ID": "12",
                            "IconName": "image16",
                            "IsXpower": false,
                            "Label": "Image",
                            "Name": "Image File",
                            "Properties": [{
                                "ChoicesValue": "",
                                "Label": "Expanded by Default",
                                "Name": "Expanded",
                                "Type": "boolean"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Width",
                                "Name": "Width",
                                "Type": "integer"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Height",
                                "Name": "Height",
                                "Type": "integer"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Border",
                                "Name": "Border",
                                "Type": "integer"
                            }, {
                                "ChoicesValue": "",
                                "Label": "",
                                "Name": "HSpace",
                                "Type": "integer"
                            }, {
                                "ChoicesValue": "",
                                "Label": "",
                                "Name": "VSpace",
                                "Type": "integer"
                            }, {
                                "ChoicesValue": ";left;right;top;bottom;middle;baseline;texttop;absbottom;absmiddle",
                                "Label": "Alignment",
                                "Name": "Alignment",
                                "Type": "enumeration"
                            }]
                        }, {
                            "ElementTypeName": "mediafile",
                            "HasExports": false,
                            "ID": "13",
                            "IconName": "media16",
                            "IsXpower": false,
                            "Label": "Media",
                            "Name": "Media File",
                            "Properties": [{
                                "ChoicesValue": "",
                                "Label": "Expanded by Default",
                                "Name": "Expanded",
                                "Type": "boolean"
                            }]
                        }, {
                            "ElementTypeName": "document",
                            "HasExports": false,
                            "ID": "14",
                            "IconName": "document16",
                            "IsXpower": false,
                            "Label": "Document",
                            "Name": "Document",
                            "Properties": []
                        }],
                        "GroupLabel": "Assets",
                        "GroupName": "Assets"
                    }, {
                        "FieldTypes": [{
                            "ElementTypeName": "Link",
                            "HasExports": true,
                            "ID": "6",
                            "IconName": "link16",
                            "IsXpower": true,
                            "Label": "Link",
                            "Name": "Link",
                            "Properties": [{
                                "ChoicesValue": "",
                                "Label": "Expanded by Default",
                                "Name": "Expanded",
                                "Type": "boolean"
                            }, {
                                "ChoicesValue": ";external;document",
                                "Label": "Link",
                                "Name": "Link",
                                "Type": "enumeration"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Link Text",
                                "Name": "LinkText",
                                "Type": ""
                            }, {
                                "ChoicesValue": "",
                                "Label": "",
                                "Name": "URL",
                                "Type": ""
                            }, {
                                "ChoicesValue": ";_blank;_self;_parent",
                                "Label": "Target",
                                "Name": "Target",
                                "Type": "enumeration"
                            }]
                        }, {
                            "ElementTypeName": "LinkSet",
                            "HasExports": true,
                            "ID": "26",
                            "IconName": "linkset16",
                            "IsXpower": true,
                            "Label": "LinkSet",
                            "Name": "LinkSet",
                            "Properties": [{
                                "ChoicesValue": "",
                                "Label": "Page Types",
                                "Name": "QuerySchemas",
                                "Type": "schemas"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Start Pages",
                                "Name": "QueryLocationRoots",
                                "Type": "pages"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Title",
                                "Name": "Title",
                                "Type": ""
                            }, {
                                "ChoicesValue": "",
                                "Label": "",
                                "Name": "Values",
                                "Type": "choices_pipe"
                            }]
                        }],
                        "GroupLabel": "Links",
                        "GroupName": "Links"
                    }, {
                        "FieldTypes": [{
                            "ElementTypeName": "Component",
                            "HasExports": false,
                            "ID": "4",
                            "IconName": "component16",
                            "IsXpower": true,
                            "Label": "Component",
                            "Name": "Component",
                            "Properties": [{
                                "ChoicesValue": "",
                                "Label": "Component",
                                "Name": "Component",
                                "Type": "page"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Component Types",
                                "Name": "CompTypes",
                                "Type": "schemas"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Wrapped in Expanded Xml",
                                "Name": "WrappedUp",
                                "Type": "boolean"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Allow changing xml wrapping",
                                "Name": "AllowWrappingChange",
                                "Type": "boolean"
                            }]
                        }, {
                            "ElementTypeName": "Insert",
                            "HasExports": false,
                            "ID": "7",
                            "IconName": "insert16",
                            "IsXpower": true,
                            "Label": "Insert",
                            "Name": "Insert",
                            "Properties": [{
                                "ChoicesValue": "",
                                "Label": "Insert URL",
                                "Name": "Insert",
                                "Type": ""
                            }, {
                                "ChoicesValue": "",
                                "Label": "Well-Formed",
                                "Name": "WellFormed",
                                "Type": "boolean"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Extract HTML Body",
                                "Name": "ExtractHTMLBody",
                                "Type": "boolean"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Timeout (seconds)",
                                "Name": "Timeout",
                                "Type": "integer"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Cache Duration (seconds)",
                                "Name": "CacheDuration",
                                "Type": "integer"
                            }]
                        }, {
                            "ElementTypeName": "ComExecute",
                            "HasExports": false,
                            "ID": "17",
                            "IconName": "comcomponent16",
                            "IsXpower": true,
                            "Label": "ComExecute",
                            "Name": "ComExecute",
                            "Properties": [{
                                "ChoicesValue": "",
                                "Label": "Template Schema",
                                "Name": "schema",
                                "Type": ""
                            }, {
                                "ChoicesValue": "",
                                "Label": "Override Edit Form (Optional)",
                                "Name": "EditForm",
                                "Type": ""
                            }]
                        }, {
                            "ElementTypeName": "password",
                            "HasExports": false,
                            "ID": "25",
                            "IconName": "comcomponent16",
                            "IsXpower": true,
                            "Label": "Password",
                            "Name": "password",
                            "Properties": []
                        }],
                        "GroupLabel": "Functional",
                        "GroupName": "Functional"
                    }, {
                        "FieldTypes": [{
                            "ElementTypeName": "GroupStart",
                            "HasExports": false,
                            "ID": "15",
                            "IconName": "group16",
                            "IsXpower": true,
                            "Label": "Group Start",
                            "Name": "GroupStart",
                            "Properties": [{
                                "ChoicesValue": "",
                                "Label": "Expanded by Default",
                                "Name": "Expanded",
                                "Type": "boolean"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Grouped in Expanded Xml",
                                "Name": "Enclosed",
                                "Type": "boolean"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Allow changing Xml Grouping",
                                "Name": "AllowEnclosureChange",
                                "Type": "boolean"
                            }]
                        }, {
                            "ElementTypeName": "",
                            "HasExports": false,
                            "ID": "16",
                            "IconName": "group16",
                            "IsXpower": true,
                            "Label": "Group End",
                            "Name": "GroupEnd",
                            "Properties": []
                        }, {
                            "ElementTypeName": "List",
                            "HasExports": false,
                            "ID": "5",
                            "IconName": "group16",
                            "IsXpower": true,
                            "Label": "List",
                            "Name": "List",
                            "Properties": [{
                                "ChoicesValue": "",
                                "Label": "Expanded by Default",
                                "Name": "Expanded",
                                "Type": "boolean"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Grouped in Expanded Xml",
                                "Name": "Enclosed",
                                "Type": "boolean"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Allow changing Xml Grouping",
                                "Name": "AllowEnclosureChange",
                                "Type": "boolean"
                            }]
                        }],
                        "GroupLabel": "Organizational",
                        "GroupName": "Organizational"
                    }, {
                        "FieldTypes": [{
                            "ElementTypeName": "Navigation",
                            "HasExports": true,
                            "ID": "8",
                            "IconName": "navigation16",
                            "IsXpower": true,
                            "Label": "Navigation",
                            "Name": "Navigation",
                            "Properties": [{
                                "ChoicesValue": "",
                                "Label": "Expanded by Default",
                                "Name": "Expanded",
                                "Type": "boolean"
                            }, {
                                "ChoicesValue": "Children;Ancestors;Sibling;Sequential;SubTree",
                                "Label": "Navigation Type",
                                "Name": "Navigation",
                                "Type": "enumeration"
                            }, {
                                "ChoicesValue": "up;down",
                                "Label": "Generation Order",
                                "Name": "GenerationOrder",
                                "Type": "enumeration"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Start Page",
                                "Name": "StartPage",
                                "Type": "page"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Maximum Nodes",
                                "Name": "MaxNodes",
                                "Type": ""
                            }, {
                                "ChoicesValue": "",
                                "Label": "Maximum Depth",
                                "Name": "MaxDepth",
                                "Type": ""
                            }, {
                                "ChoicesValue": "",
                                "Label": "Query",
                                "Name": "Query",
                                "Type": ""
                            }]
                        }, {
                            "ElementTypeName": "TaxonomyNavigation",
                            "HasExports": true,
                            "ID": "23",
                            "IconName": "navigation16",
                            "IsXpower": true,
                            "Label": "Taxonomy Navigation",
                            "Name": "TaxonomyNavigation",
                            "Properties": [{
                                "ChoicesValue": "",
                                "Label": "Start Categories",
                                "Name": "StartNodes",
                                "Type": "categories"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Include Pages",
                                "Name": "IncludePages",
                                "Type": "boolean"
                            }, {
                                "ChoicesValue": "-1;0;1;2;3;4;5;6;7;8;9;10;11;12;13;14;15;16;17;18;19;20",
                                "Label": "Depth",
                                "Name": "Depth",
                                "Type": "enumeration"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Page Types",
                                "Name": "FilterSchemas",
                                "Type": "schemas"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Start Pages",
                                "Name": "FilterParentPages",
                                "Type": "pages"
                            }]
                        }, {
                            "ElementTypeName": "References",
                            "HasExports": true,
                            "ID": "24",
                            "IconName": "references16",
                            "IsXpower": true,
                            "Label": "References Navigation",
                            "Name": "References",
                            "Properties": [{
                                "ChoicesValue": "0;1;2;3;4;5;6;7;8;9;10;",
                                "Label": "Depth",
                                "Name": "Depth",
                                "Type": "enumeration"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Page Types",
                                "Name": "QuerySchemas",
                                "Type": "schemas"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Start Pages",
                                "Name": "QueryLocationRoots",
                                "Type": "pages"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Cross References",
                                "Name": "IncludeCrossReferences",
                                "Type": "boolean"
                            }]
                        }],
                        "GroupLabel": "Navigation",
                        "GroupName": "Navigation"
                    }, {
                        "FieldTypes": [{
                            "ElementTypeName": "date",
                            "HasExports": false,
                            "ID": "10",
                            "IconName": "datetime16",
                            "IsXpower": false,
                            "Label": "Date",
                            "Name": "Date",
                            "Properties": [{
                                "ChoicesValue": "localdateshort;localdateshorttime;localdatelong;localdatelongtime",
                                "Label": "Field Type",
                                "Name": "display",
                                "Type": "enumeration"
                            }]
                        }, {
                            "ElementTypeName": "localdate",
                            "HasExports": false,
                            "ID": "27",
                            "IconName": "datetime16",
                            "IsXpower": false,
                            "Label": "Local Date",
                            "Name": "Local Date",
                            "Properties": []
                        }, {
                            "ElementTypeName": "localtime",
                            "HasExports": false,
                            "ID": "28",
                            "IconName": "datetime16",
                            "IsXpower": false,
                            "Label": "Local Time",
                            "Name": "Local Time",
                            "Properties": [{
                                "ChoicesValue": "",
                                "Label": "Timezone Name",
                                "Name": "TimezoneName",
                                "Type": ""
                            }, {
                                "ChoicesValue": "",
                                "Label": "Timezone Offset",
                                "Name": "TimezoneOffset",
                                "Type": ""
                            }]
                        }],
                        "GroupLabel": "Date \/ Time",
                        "GroupName": "DateTime"
                    }, {
                        "FieldTypes": [{
                            "ElementTypeName": "boolean",
                            "HasExports": false,
                            "ID": "9",
                            "IconName": "check16",
                            "IsXpower": false,
                            "Label": "Checkbox",
                            "Name": "Checkbox",
                            "Properties": []
                        }, {
                            "ElementTypeName": "enumeration",
                            "HasExports": false,
                            "ID": "11",
                            "IconName": "dropdown16",
                            "IsXpower": false,
                            "Label": "Dropdown List",
                            "Name": "Dropdown List",
                            "Properties": [{
                                "ChoicesValue": "",
                                "Label": "Choices",
                                "Name": "values",
                                "Type": "choices_space"
                            }]
                        }, {
                            "ElementTypeName": "multiselect",
                            "HasExports": false,
                            "ID": "19",
                            "IconName": "dropdown16",
                            "IsXpower": false,
                            "Label": "Multi-Select: Hard-coded choices",
                            "Name": "Multi-Select: Hard-coded choices",
                            "Properties": [{
                                "ChoicesValue": "",
                                "Label": "Maximum Choices",
                                "Name": "MaxChoices",
                                "Type": "integer"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Page Size",
                                "Name": "PageSize",
                                "Type": "integer"
                            }, {
                                "ChoicesValue": "",
                                "Label": "",
                                "Name": "Values",
                                "Type": "choices_pipe"
                            }]
                        }, {
                            "ElementTypeName": "multiselect",
                            "HasExports": false,
                            "ID": "20",
                            "IconName": "dropdown16",
                            "IsXpower": false,
                            "Label": "Multi-Select: Choices from Database Query",
                            "Name": "Multi-Select: Choices from Database Query",
                            "Properties": [{
                                "ChoicesValue": "",
                                "Label": "Maximum Choices",
                                "Name": "MaxChoices",
                                "Type": "integer"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Page Size",
                                "Name": "PageSize",
                                "Type": "integer"
                            }, {
                                "ChoicesValue": "",
                                "Label": "DSN",
                                "Name": "DSN",
                                "Type": ""
                            }, {
                                "ChoicesValue": "",
                                "Label": "SQL",
                                "Name": "SQL",
                                "Type": ""
                            }]
                        }, {
                            "ElementTypeName": "multiselect",
                            "HasExports": false,
                            "ID": "21",
                            "IconName": "dropdown16",
                            "IsXpower": false,
                            "Label": "Multi-Select: Choices from CMS node-set",
                            "Name": "Multi-Select: Choices from CMS node-set",
                            "Properties": [{
                                "ChoicesValue": "",
                                "Label": "Maximum Choices",
                                "Name": "MaxChoices",
                                "Type": "integer"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Page Size",
                                "Name": "PageSize",
                                "Type": "integer"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Page Types",
                                "Name": "Query_PageType",
                                "Type": "schema"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Start Page",
                                "Name": "Query_LocationRoot",
                                "Type": "page"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Fields to Include",
                                "Name": "Query_SelectedFields",
                                "Type": "choices_pipe"
                            }, {
                                "ChoicesValue": "",
                                "Label": "",
                                "Name": "AdditionalFilter_XPathQuery",
                                "Type": ""
                            }]
                        }, {
                            "ElementTypeName": "multiselect",
                            "HasExports": false,
                            "ID": "22",
                            "IconName": "dropdown16",
                            "IsXpower": false,
                            "Label": "Multi-Select: Choices from external scripting",
                            "Name": "Multi-Select: Choices from external scripting",
                            "Properties": [{
                                "ChoicesValue": "",
                                "Label": "Maximum Choices",
                                "Name": "MaxChoices",
                                "Type": "integer"
                            }, {
                                "ChoicesValue": "",
                                "Label": "Page Size",
                                "Name": "PageSize",
                                "Type": "integer"
                            }]
                        }],
                        "GroupLabel": "Selection",
                        "GroupName": "Selection"
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>The Field types will only be changed when upgrade Ingeniux CMS product and site, therefore, normally this operation only needs to be called once.</remarks>
        </member>
        <member name="M:IngeniuxCMService.SchemaDesignerServices.GetFavoriteSchemaFields">
            <summary>
            Retrieves the collection of Schema Field Favorites.
            Favorites are collection Fields with information of each Field already populated. The purpose of favorites is to place a group of fields that are used often across Schemas conveniently.
            </summary>
            <returns>
            <para>Collection of Schema Field Favorites</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "Creator": "INGENIUX\\awang",
                    "Fields": [{
                        "ChildElementLabel": "",
                        "ChildElementName": "",
                        "ChildElementTypeID": "",
                        "ChildProperties": [],
                        "DefaultValue": "",
                        "Exports": null,
                        "HasExports": true,
                        "HelpText": "",
                        "Hidden": false,
                        "IconName": "link16",
                        "IsXpower": true,
                        "Label": "Site Control",
                        "Name": "SiteControl",
                        "Properties": [{
                            "ChoicesValue": "",
                            "Label": "Expanded by Default",
                            "Name": "Expanded",
                            "Type": "boolean",
                            "Value": ""
                        }, {
                            "ChoicesValue": ";external;document",
                            "Label": "Link",
                            "Name": "Link",
                            "Type": "enumeration",
                            "Value": ""
                        }, {
                            "ChoicesValue": "",
                            "Label": "Link Text",
                            "Name": "LinkText",
                            "Type": "",
                            "Value": ""
                        }, {
                            "ChoicesValue": "",
                            "Label": "",
                            "Name": "URL",
                            "Type": "",
                            "Value": ""
                        }, {
                            "ChoicesValue": ";_blank;_self;_parent",
                            "Label": "Target",
                            "Name": "Target",
                            "Type": "enumeration",
                            "Value": ""
                        }],
                        "Readonly": false,
                        "Required": false,
                        "TypeID": 6,
                        "TypeLabel": "Link",
                        "TypeName": "Link"
                    }],
                    "ID": "SchemaFieldFavorites\/1",
                    "IsPublic": false,
                    "Name": "Site Control"
                }, {
                    "Creator": "INGENIUX\\awang",
                    "Fields": [{
                        "ChildElementLabel": "",
                        "ChildElementName": "",
                        "ChildElementTypeID": "",
                        "ChildProperties": [],
                        "DefaultValue": "",
                        "Exports": null,
                        "HasExports": true,
                        "HelpText": "",
                        "Hidden": false,
                        "IconName": "link16",
                        "IsXpower": true,
                        "Label": "Site Control",
                        "Name": "SiteControl",
                        "Properties": [{
                            "ChoicesValue": "",
                            "Label": "Expanded by Default",
                            "Name": "Expanded",
                            "Type": "boolean",
                            "Value": ""
                        }, {
                            "ChoicesValue": ";external;document",
                            "Label": "Link",
                            "Name": "Link",
                            "Type": "enumeration",
                            "Value": ""
                        }, {
                            "ChoicesValue": "",
                            "Label": "Link Text",
                            "Name": "LinkText",
                            "Type": "",
                            "Value": ""
                        }, {
                            "ChoicesValue": "",
                            "Label": "",
                            "Name": "URL",
                            "Type": "",
                            "Value": ""
                        }, {
                            "ChoicesValue": ";_blank;_self;_parent",
                            "Label": "Target",
                            "Name": "Target",
                            "Type": "enumeration",
                            "Value": ""
                        }],
                        "Readonly": false,
                        "Required": false,
                        "TypeID": 6,
                        "TypeLabel": "Link",
                        "TypeName": "Link"
                    }],
                    "ID": "SchemaFieldFavorites\/2",
                    "IsPublic": false,
                    "Name": "SC"
                }, {
                    "Creator": "INGENIUX\\awang",
                    "Fields": [{
                        "ChildElementLabel": "",
                        "ChildElementName": "",
                        "ChildElementTypeID": "",
                        "ChildProperties": [],
                        "DefaultValue": "",
                        "Exports": null,
                        "HasExports": false,
                        "HelpText": "",
                        "Hidden": false,
                        "IconName": "group16",
                        "IsXpower": true,
                        "Label": "Server Authentication",
                        "Name": "ServerAuthentication",
                        "Properties": [{
                            "ChoicesValue": "",
                            "Label": "Expanded by Default",
                            "Name": "Expanded",
                            "Type": "boolean",
                            "Value": "false"
                        }, {
                            "ChoicesValue": "",
                            "Label": "Grouped in Expanded Xml",
                            "Name": "Enclosed",
                            "Type": "boolean",
                            "Value": "false"
                        }, {
                            "ChoicesValue": "",
                            "Label": "Allow changing Xml Grouping",
                            "Name": "AllowEnclosureChange",
                            "Type": "boolean",
                            "Value": "false"
                        }],
                        "Readonly": false,
                        "Required": false,
                        "TypeID": 15,
                        "TypeLabel": "Group Start",
                        "TypeName": "GroupStart"
                    }, {
                        "ChildElementLabel": "",
                        "ChildElementName": "",
                        "ChildElementTypeID": "",
                        "ChildProperties": [],
                        "DefaultValue": "false",
                        "Exports": null,
                        "HasExports": false,
                        "HelpText": "",
                        "Hidden": false,
                        "IconName": "check16",
                        "IsXpower": false,
                        "Label": "Server Requires Authentication",
                        "Name": "ServerAuth",
                        "Properties": [],
                        "Readonly": false,
                        "Required": false,
                        "TypeID": 9,
                        "TypeLabel": "Checkbox",
                        "TypeName": "Checkbox"
                    }, {
                        "ChildElementLabel": "",
                        "ChildElementName": "",
                        "ChildElementTypeID": "",
                        "ChildProperties": [],
                        "DefaultValue": "",
                        "Exports": null,
                        "HasExports": false,
                        "HelpText": "",
                        "Hidden": false,
                        "IconName": "document16",
                        "IsXpower": false,
                        "Label": "Server Login User Name",
                        "Name": "Username",
                        "Properties": [],
                        "Readonly": false,
                        "Required": false,
                        "TypeID": 2,
                        "TypeLabel": "Plain Text",
                        "TypeName": "Text Element"
                    }, {
                        "ChildElementLabel": "",
                        "ChildElementName": "",
                        "ChildElementTypeID": "",
                        "ChildProperties": [],
                        "DefaultValue": "",
                        "Exports": null,
                        "HasExports": false,
                        "HelpText": "",
                        "Hidden": false,
                        "IconName": "document16",
                        "IsXpower": false,
                        "Label": "Server Login Password",
                        "Name": "Password",
                        "Properties": [],
                        "Readonly": false,
                        "Required": false,
                        "TypeID": 2,
                        "TypeLabel": "Plain Text",
                        "TypeName": "Text Element"
                    }, {
                        "ChildElementLabel": "",
                        "ChildElementName": "",
                        "ChildElementTypeID": "",
                        "ChildProperties": [],
                        "DefaultValue": "",
                        "Exports": null,
                        "HasExports": false,
                        "HelpText": "",
                        "Hidden": false,
                        "IconName": "document16",
                        "IsXpower": false,
                        "Label": "Login User Domain",
                        "Name": "Domain",
                        "Properties": [],
                        "Readonly": false,
                        "Required": false,
                        "TypeID": 2,
                        "TypeLabel": "Plain Text",
                        "TypeName": "Text Element"
                    }, {
                        "ChildElementLabel": "",
                        "ChildElementName": "",
                        "ChildElementTypeID": "",
                        "ChildProperties": [],
                        "DefaultValue": "",
                        "Exports": null,
                        "HasExports": false,
                        "HelpText": null,
                        "Hidden": false,
                        "IconName": "group16",
                        "IsXpower": true,
                        "Label": "GroupEnd",
                        "Name": null,
                        "Properties": [],
                        "Readonly": false,
                        "Required": false,
                        "TypeID": 16,
                        "TypeLabel": "Group End",
                        "TypeName": "GroupEnd"
                    }],
                    "ID": "SchemaFieldFavorites\/33",
                    "IsPublic": false,
                    "Name": "Server Auth"
                }]
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.SchemaDesignerServices.AddFavoriteSchemaField(IngeniuxCMService.SchemaFavoriteEntry)">
            <summary>
            Creates a new Schema Favorite entry
            </summary>
            <param name="data">
            <para>Object containing information of the Favorite entry and all fields included in the entry</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "IsPublic": false,
                    "Creator": "INGENIUX\\awang",
                    "Fields": [{
                        "TypeID": "2",
                        "TypeName": "Text Element",
                        "ElementTypeName": "string",
                        "Required": false,
                        "Readonly": false,
                        "Hidden": false,
                        "UniqueID": null,
                        "Properties": [],
                        "Label": "Title",
                        "Name": "Title",
                        "DefaultValue": "",
                        "HelpText": "",
                        "Exports": "",
                        "TypeLabel": "Plain Text",
                        "IconName": "document16",
                        "IsXpower": false,
                        "HasExports": false
                    }, {
                        "TypeID": "3",
                        "TypeName": "XHTML Element",
                        "ElementTypeName": "dhtml",
                        "Required": false,
                        "Readonly": false,
                        "Hidden": false,
                        "UniqueID": null,
                        "Properties": [{
                            "Name": "Height",
                            "Value": "",
                            "Type": "integer",
                            "Label": "Height"
                        }],
                        "Label": "Body Copy",
                        "Name": "BodyCopy",
                        "DefaultValue": "",
                        "HelpText": "",
                        "Exports": "",
                        "TypeLabel": "XHTML Editor",
                        "IconName": "edit16",
                        "IsXpower": false,
                        "HasExports": false
                    }, {
                        "TypeID": "4",
                        "TypeName": "Component",
                        "ElementTypeName": "Component",
                        "Required": false,
                        "Readonly": false,
                        "Hidden": false,
                        "UniqueID": null,
                        "Properties": [{
                            "Name": "Component",
                            "Value": "x4",
                            "Type": "page",
                            "Label": "Component"
                        }, {
                            "Name": "CompTypes",
                            "Value": "SiteControl",
                            "Type": "schemas",
                            "Label": "Component Types"
                        }, {
                            "Name": "WrappedUp",
                            "Value": "false",
                            "Type": "boolean",
                            "Label": "Wrapped in Expanded Xml"
                        }, {
                            "Name": "AllowWrappingChange",
                            "Value": "false",
                            "Type": "boolean",
                            "Label": "Allow changing xml wrapping"
                        }],
                        "Label": "Site Control",
                        "Name": "SiteControl",
                        "HelpText": "",
                        "Exports": "",
                        "TypeLabel": "Component",
                        "IconName": "component16",
                        "IsXpower": true,
                        "HasExports": false
                    }],
                    "Name": "Common Fields"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Object containing information of the created Schema Field Favorite entry</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "Creator": "INGENIUX\\awang",
                    "Fields": [{
                        "ChildElementLabel": "",
                        "ChildElementName": "",
                        "ChildElementTypeID": "",
                        "ChildProperties": [],
                        "DefaultValue": "",
                        "Exports": null,
                        "HasExports": false,
                        "HelpText": "",
                        "Hidden": false,
                        "IconName": "document16",
                        "IsXpower": false,
                        "Label": "Title",
                        "Name": "Title",
                        "Properties": [],
                        "Readonly": false,
                        "Required": false,
                        "TypeID": 2,
                        "TypeLabel": "Plain Text",
                        "TypeName": "Text Element"
                    }, {
                        "ChildElementLabel": "",
                        "ChildElementName": "",
                        "ChildElementTypeID": "",
                        "ChildProperties": [],
                        "DefaultValue": "",
                        "Exports": null,
                        "HasExports": false,
                        "HelpText": "",
                        "Hidden": false,
                        "IconName": "edit16",
                        "IsXpower": false,
                        "Label": "Body Copy",
                        "Name": "BodyCopy",
                        "Properties": [{
                            "ChoicesValue": "",
                            "Label": "Height",
                            "Name": "Height",
                            "Type": "integer",
                            "Value": ""
                        }],
                        "Readonly": false,
                        "Required": false,
                        "TypeID": 3,
                        "TypeLabel": "XHTML Editor",
                        "TypeName": "XHTML Element"
                    }, {
                        "ChildElementLabel": "",
                        "ChildElementName": "",
                        "ChildElementTypeID": "",
                        "ChildProperties": [],
                        "DefaultValue": "",
                        "Exports": null,
                        "HasExports": false,
                        "HelpText": "",
                        "Hidden": false,
                        "IconName": "component16",
                        "IsXpower": true,
                        "Label": "Site Control",
                        "Name": "SiteControl",
                        "Properties": [{
                            "ChoicesValue": "",
                            "Label": "Component",
                            "Name": "Component",
                            "Type": "page",
                            "Value": "x4"
                        }, {
                            "ChoicesValue": "",
                            "Label": "Component Types",
                            "Name": "CompTypes",
                            "Type": "schemas",
                            "Value": "SiteControl"
                        }, {
                            "ChoicesValue": "",
                            "Label": "Wrapped in Expanded Xml",
                            "Name": "WrappedUp",
                            "Type": "boolean",
                            "Value": "false"
                        }, {
                            "ChoicesValue": "",
                            "Label": "Allow changing xml wrapping",
                            "Name": "AllowWrappingChange",
                            "Type": "boolean",
                            "Value": "false"
                        }],
                        "Readonly": false,
                        "Required": false,
                        "TypeID": 4,
                        "TypeLabel": "Component",
                        "TypeName": "Component"
                    }],
                    "ID": "SchemaFieldFavorites\/129",
                    "IsPublic": false,
                    "Name": "Common Fields"
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>Schema Field Favorite entry names are unique. If the name provided conflicts with a existing entry's name, returns error status</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SchemaDesignerServices.RemoveFavoriteSchemaField(System.String)">
            <summary>
            Removes a Schema Field Favorite entry
            </summary>
            <param name="data">Id of the Schema Field Favorite entry to be removed</param>
            <returns>
            <para>The Id of the remove Schema Field Favorite entry.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": "SchemaFieldFavorites\/2"
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>Non-existing Schema Field Favorite entry will be ignored</remarks>
        </member>
        <member name="M:IngeniuxCMService.SchemaDesignerServices.ToggleFavoriteAvailability(IngeniuxCMService.SchemaPublicSetRequest)">
            <summary>
            Toggles whether the Schema Field Favorite entry is available to everybody, or only the creator.
            </summary>
            <param name="data">
            <para>Information on the Schema Field Favorite entry to toggle availability one</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "FavoriteID": "SchemaFieldFavorites/33",
                    "ToBePublic": true
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>The input data if toggling is successful. Error status if the Schema Field Favorite entry doesn't exist.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "FavoriteID": "SchemaFieldFavorites\/33",
                    "ToBePublic": true
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.SchemaDesignerServices.GetSchemaChangeEfforts(IngeniuxCMService.SchemaChangeEffortAnalysisRequest)">
            <summary>
            Get the change efforts for given Pages to be updated based the latest version of their Schema. Change efforts are used to measure the differences between Page content and its latest version Schema content.
            </summary>
            <param name="data">
            <para>Information of the Schema and the collection of Pages to analyze change efforts on</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "SchemaRootName": "SOAPServiceClient",
                    "Pages": [{
                        "ID": "x108",
                        "CheckedOut": true,
                        "AssignedUser": "INGENIUX\\awang",
                        "AssignedGroup": ""
                    }, {
                        "ID": "x109",
                        "CheckedOut": true,
                        "AssignedUser": "INGENIUX\\awang",
                        "AssignedGroup": ""
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Information of change effort scores calculated for all Pages provided</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "ChangeEfforts": [{
                        "PageID": "x109",
                        "Score": 7
                    }, {
                        "PageID": "x108",
                        "Score": 11
                    }],
                    "SchemaRootName": "SOAPServiceClient"
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.SchemaDesignerServices.GetSchemasSimple">
            <summary>
            Retrieves collection of basic information of all Schemas, grouped into Page Schemas and Component Schemas
            </summary>
            <returns>
            <para>Object containing collection of Page and Component Schemas' basic information</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "compSchemas": [{
                        "FileName": "Folder",
                        "ID": "Schema_Folder",
                        "IsComponent": true,
                        "Name": "Folder",
                        "Version": 1
                    }, {
                        "FileName": "Image",
                        "ID": "Schema_Image",
                        "IsComponent": true,
                        "Name": "Image File",
                        "Version": 1
                    }, {
                        "FileName": "Insert",
                        "ID": "Schema_Insert",
                        "IsComponent": true,
                        "Name": "Insert",
                        "Version": 1
                    }, {
                        "FileName": "Media",
                        "ID": "Schema_Media",
                        "IsComponent": true,
                        "Name": "Media File",
                        "Version": 1
                    }, {
                        "FileName": "Navigation",
                        "ID": "Schema_Navigation",
                        "IsComponent": true,
                        "Name": "Navigation",
                        "Version": 1
                    }, {
                        "FileName": "HomeSlider",
                        "ID": "schemas\/66",
                        "IsComponent": true,
                        "Name": "Home Slider",
                        "Version": 2
                    }],
                    "pageSchemas": [{
                        "FileName": "Home",
                        "ID": "schemas\/33",
                        "IsComponent": false,
                        "Name": "Home Page",
                        "Version": 2
                    }, {
                        "FileName": "Details",
                        "ID": "schemas\/194",
                        "IsComponent": false,
                        "Name": "Details",
                        "Version": 4
                    }, {
                        "FileName": "FormProcessorPage",
                        "ID": "schemas\/FormProcessorPage",
                        "IsComponent": false,
                        "Name": "Form Processor Page",
                        "Version": 0
                    }, {
                        "FileName": "FormFilteredResultPage",
                        "ID": "schemas\/FormFilteredResultPage",
                        "IsComponent": false,
                        "Name": "Form - Filtered Result Page",
                        "Version": 0
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.SchemaDesignerServices.GetSchemas">
            <summary>
            Retrieves listing of all Schemas. They are grouped into Page Schemas, Component Schemas and invalid Schemas
            </summary>
            <returns>
            <para>Object containing collections of Page Schemas, Component Schemas and invalid Schemas</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "compSchemas": [{
                        "CurrentVersion": 3,
                        "Drafting": false,
                        "Error": "",
                        "File": "BinaryDocument",
                        "HasPresentation": false,
                        "ID": "Schema_BinaryDocument",
                        "LastModified": "20140121T17:25:39",
                        "LastModifiedUser": "INGENIUX\\awang",
                        "Name": "{\"Name\":\"Binary Document\",\"Error\":\"\"}",
                        "Root": "BinaryDocument",
                        "Type": "View"
                    }, {
                        "CurrentVersion": 3,
                        "Drafting": false,
                        "Error": "",
                        "File": "CompTest",
                        "HasPresentation": false,
                        "ID": "schemas\/449",
                        "LastModified": "20140121T14:51:17",
                        "LastModifiedUser": "INGENIUX\\awang",
                        "Name": "{\"Name\":\"CompTest\",\"Error\":\"\"}",
                        "Root": "CompTest",
                        "Type": "View"
                    }, {
                        "CurrentVersion": 2,
                        "Drafting": false,
                        "Error": "",
                        "File": "ContactInformation",
                        "HasPresentation": false,
                        "ID": "schemas\/227",
                        "LastModified": "20140109T16:33:08",
                        "LastModifiedUser": "INGENIUX\\awang",
                        "Name": "{\"Name\":\"Contact Information\",\"Error\":\"\"}",
                        "Root": "ContactInformation",
                        "Type": "View"
                    }, {
                        "CurrentVersion": 1,
                        "Drafting": false,
                        "Error": "",
                        "File": "DataBaseQuery",
                        "HasPresentation": false,
                        "ID": "Schema_DataBaseQuery",
                        "LastModified": "20140109T17:07:41",
                        "LastModifiedUser": "INGENIUX\\awang",
                        "Name": "{\"Name\":\"DEX - Database Query Component\",\"Error\":\"\"}",
                        "Root": "DataBaseQuery",
                        "Type": "View"
                    }, {
                        "CurrentVersion": 1,
                        "Drafting": false,
                        "Error": "",
                        "File": "PollServiceComponent",
                        "HasPresentation": false,
                        "ID": "Schema_PollServiceComponent",
                        "LastModified": "20140109T17:07:41",
                        "LastModifiedUser": "INGENIUX\\awang",
                        "Name": "{\"Name\":\"DEX - Poll Service Component\",\"Error\":\"\"}",
                        "Root": "PollServiceComponent",
                        "Type": "View"
                    }, {
                        "CurrentVersion": 1,
                        "Drafting": false,
                        "Error": "",
                        "File": "JSONServiceClient",
                        "HasPresentation": false,
                        "ID": "Schema_JSONServiceClient",
                        "LastModified": "20140109T17:07:41",
                        "LastModifiedUser": "INGENIUX\\awang",
                        "Name": "{\"Name\":\"DEX - RESTful\/JSON Web Service Client\",\"Error\":\"\"}",
                        "Root": "JSONServiceClient",
                        "Type": "View"
                    }],
                    "invalidSchemas": [],
                    "pageSchemas": [{
                        "CurrentVersion": 4,
                        "Drafting": false,
                        "Error": "",
                        "File": "Details",
                        "HasPresentation": false,
                        "ID": "schemas\/194",
                        "LastModified": "20140109T16:33:08",
                        "LastModifiedUser": "INGENIUX\\awang",
                        "Name": "{\"Name\":\"Details\",\"Error\":\"\"}",
                        "Root": "Details",
                        "Type": "View"
                    }, {
                        "CurrentVersion": 0,
                        "Drafting": true,
                        "Error": "",
                        "File": "FormFilteredResultPage",
                        "HasPresentation": false,
                        "ID": "schemas\/FormFilteredResultPage",
                        "LastModified": "20140117T15:53:59",
                        "LastModifiedUser": "INGENIUX\\awang",
                        "Name": "{\"Name\":\"Form - Filtered Result Page\",\"Error\":\"\"}",
                        "Root": "FormFilteredResultPage",
                        "Type": "Stylesheet"
                    }, {
                        "CurrentVersion": 0,
                        "Drafting": false,
                        "Error": "",
                        "File": "FormProcessorPage",
                        "HasPresentation": false,
                        "ID": "schemas\/FormProcessorPage",
                        "LastModified": "20140109T16:33:08",
                        "LastModifiedUser": "INGENIUX\\awang",
                        "Name": "{\"Name\":\"Form Processor Page\",\"Error\":\"\"}",
                        "Root": "FormProcessorPage",
                        "Type": "Stylesheet"
                    }, {
                        "CurrentVersion": 2,
                        "Drafting": false,
                        "Error": "",
                        "File": "Home",
                        "HasPresentation": false,
                        "ID": "schemas\/33",
                        "LastModified": "20140109T16:33:08",
                        "LastModifiedUser": "INGENIUX\\awang",
                        "Name": "{\"Name\":\"Home Page\",\"Error\":\"\"}",
                        "Root": "Home",
                        "Type": "View"
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>Invalid schemas are Schema beyond repair and have to be fixed in the raw data level.</para>
            <para>Each Schema entry has "Error" field, this field is used to indicate what type of fixable error the Schema has. These errors can be fixed via Schema editor.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SchemaDesignerServices.DeleteSchemas(IngeniuxCMService.SchemasDeleteInput)">
            <summary>
            Deletes a collection of Schemas by their unique Ids
            </summary>
            <param name="data">
            <para>Collection of Ids of Schemas to be deletes</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "ids": ["schemas/FormFilteredResultPage", "schemas/FormProcessorPage"]
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>
            Array of Ids of Schemas that cannot be deleted, due to existing Pages created with these Schemas
            </para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [schemas/FormProcessorPage]
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>Any Schemas that has Page created with them cannot be deleted.</para>
            <para>Non-existing Schemas Ids will be ignored.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SchemaDesignerServices.GetSchemaDetails(IngeniuxCMService.SchemaDetailGetInput)">
            <summary>
            Retrieves full details of a single Schema
            </summary>
            <param name="data">
            <para>Object containing Id of the Schema</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "schemaId": "schemas/194"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Full details of the given schema if it exists</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "AllowedCategoryRootIDs": "",
                    "AllowedCategoryRoots": [],
                    "DefaultCategories": [],
                    "DefaultCategoryIDs": "",
                    "Drafting": false,
                    "Fields": [{
                        "ChildElementLabel": null,
                        "ChildElementName": null,
                        "ChildElementTypeID": "1",
                        "ChildProperties": [],
                        "DefaultValue": null,
                        "ElementTypeName": "string",
                        "Exports": "",
                        "HasExports": false,
                        "HelpText": "",
                        "Hidden": false,
                        "IconName": "document16",
                        "IsXpower": false,
                        "Label": "Title",
                        "Name": "Title",
                        "Properties": [],
                        "Readonly": false,
                        "Required": false,
                        "ResersedContentUnitField": false,
                        "TypeID": "2",
                        "TypeLabel": "Plain Text",
                        "TypeName": "Text Element",
                        "UniqueID": null
                    }, {
                        "ChildElementLabel": null,
                        "ChildElementName": null,
                        "ChildElementTypeID": "1",
                        "ChildProperties": [],
                        "DefaultValue": null,
                        "ElementTypeName": "dhtml",
                        "Exports": "",
                        "HasExports": false,
                        "HelpText": "",
                        "Hidden": false,
                        "IconName": "edit16",
                        "IsXpower": false,
                        "Label": "Body Copy",
                        "Name": "BodyCopy",
                        "Properties": [{
                            "Choices": "",
                            "Label": "Height",
                            "Name": "Height",
                            "Type": "integer",
                            "Value": ""
                        }],
                        "Readonly": false,
                        "Required": false,
                        "ResersedContentUnitField": false,
                        "TypeID": "3",
                        "TypeLabel": "XHTML Editor",
                        "TypeName": "XHTML Element",
                        "UniqueID": null
                    }, {
                        "ChildElementLabel": null,
                        "ChildElementName": null,
                        "ChildElementTypeID": "1",
                        "ChildProperties": [],
                        "DefaultValue": null,
                        "ElementTypeName": "Component",
                        "Exports": "",
                        "HasExports": false,
                        "HelpText": "",
                        "Hidden": false,
                        "IconName": "component16",
                        "IsXpower": true,
                        "Label": "Site Control",
                        "Name": "SiteControl",
                        "Properties": [{
                            "Choices": "",
                            "Label": "Component",
                            "Name": "Component",
                            "Type": "page",
                            "Value": "x4"
                        }, {
                            "Choices": "",
                            "Label": "Component Types",
                            "Name": "CompTypes",
                            "Type": "schemas",
                            "Value": "SiteControl"
                        }, {
                            "Choices": "",
                            "Label": "Wrapped in Expanded Xml",
                            "Name": "WrappedUp",
                            "Type": "boolean",
                            "Value": "false"
                        }, {
                            "Choices": "",
                            "Label": "Allow changing xml wrapping",
                            "Name": "AllowWrappingChange",
                            "Type": "boolean",
                            "Value": "false"
                        }],
                        "Readonly": false,
                        "Required": false,
                        "ResersedContentUnitField": false,
                        "TypeID": "4",
                        "TypeLabel": "Component",
                        "TypeName": "Component",
                        "UniqueID": null
                    }, {
                        "ChildElementLabel": null,
                        "ChildElementName": null,
                        "ChildElementTypeID": "1",
                        "ChildProperties": [],
                        "DefaultValue": null,
                        "ElementTypeName": "Navigation",
                        "Exports": "",
                        "HasExports": true,
                        "HelpText": "",
                        "Hidden": false,
                        "IconName": "navigation16",
                        "IsXpower": true,
                        "Label": "Ancestor Navigation",
                        "Name": "AncestorNavigation",
                        "Properties": [{
                            "Choices": "",
                            "Label": "Expanded by Default",
                            "Name": "Expanded",
                            "Type": "boolean",
                            "Value": "false"
                        }, {
                            "Choices": "Children;Ancestors;Sibling;Sequential;SubTree",
                            "Label": "Navigation Type",
                            "Name": "Navigation",
                            "Type": "enumeration",
                            "Value": "Ancestors"
                        }, {
                            "Choices": "up;down",
                            "Label": "Generation Order",
                            "Name": "GenerationOrder",
                            "Type": "enumeration",
                            "Value": "down"
                        }, {
                            "Choices": "",
                            "Label": "Start Page",
                            "Name": "StartPage",
                            "Type": "page",
                            "Value": "x2"
                        }, {
                            "Choices": "",
                            "Label": "Maximum Nodes",
                            "Name": "MaxNodes",
                            "Type": "",
                            "Value": ""
                        }, {
                            "Choices": "",
                            "Label": "Maximum Depth",
                            "Name": "MaxDepth",
                            "Type": "",
                            "Value": ""
                        }, {
                            "Choices": "",
                            "Label": "Query",
                            "Name": "Query",
                            "Type": "",
                            "Value": ""
                        }],
                        "Readonly": false,
                        "Required": false,
                        "ResersedContentUnitField": false,
                        "TypeID": "8",
                        "TypeLabel": "Navigation",
                        "TypeName": "Navigation",
                        "UniqueID": null
                    }],
                    "FriendlyName": "Details",
                    "Icon": 2,
                    "IsComponent": false,
                    "IsDynamicSitePage": true,
                    "OriginPageId": null,
                    "PagesCount": 5,
                    "PresentationsCount": 0,
                    "RootName": "Details",
                    "Stylesheet": "",
                    "UniqueID": "schemas\/194",
                    "Version": 4,
                    "VersionsCount": 2,
                    "VersionsList": [{
                        "Date": "20140120T14:21:50",
                        "User": "User\/INGENIUX___awang",
                        "Version": 3
                    }, {
                        "Date": "20131210T15:36:28",
                        "User": "User\/INGENIUX___awang",
                        "Version": 2
                    }],
                    "ViewName": "Details",
                    "WorkflowDefinitionID": "",
                    "WorkflowDefinitions": []
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Schema doesn't exist, returns error status</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SchemaDesignerServices.SaveSchema(IngeniuxCMService.SchemaDetailsInput)">
            <summary>
            Creates/updates a single Schema
            </summary>
            <param name="data">
            <para>Information on the Schema to be created/updated. When "UniqueID" field is null or empty, creating a new Schema</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "FriendlyName": "Details",
                    "RootName": "Details",
                    "IsComponent": "false",
                    "viewType": "View-DSS",
                    "ViewName": "Details",
                    "Stylesheet": "",
                    "WorkflowDefinitionID": "",
                    "Icon": 2,
                    "DefaultCategoryIDs": "",
                    "AllowedCategoryRootIDs": "",
                    "IsDynamicSitePage": true,
                    "CurrentUser": "INGENIUX\\awang",
                    "UniqueID": "schemas/194",
                    "Fields": [{
                        "TypeID": "2",
                        "TypeName": "Text Element",
                        "ElementTypeName": "string",
                        "Required": false,
                        "Readonly": false,
                        "Hidden": true,
                        "UniqueID": null,
                        "Properties": [],
                        "Label": "Title",
                        "Name": "Title",
                        "DefaultValue": "",
                        "HelpText": "",
                        "Exports": ""
                    }, {
                        "TypeID": "3",
                        "TypeName": "XHTML Element",
                        "ElementTypeName": "dhtml",
                        "Required": false,
                        "Readonly": true,
                        "Hidden": false,
                        "UniqueID": null,
                        "Properties": [{
                            "Name": "Height",
                            "Value": "",
                            "Type": "integer",
                            "Label": "Height"
                        }],
                        "Label": "Body Copy",
                        "Name": "BodyCopy",
                        "DefaultValue": "",
                        "HelpText": "",
                        "Exports": ""
                    }, {
                        "TypeID": "4",
                        "TypeName": "Component",
                        "ElementTypeName": "Component",
                        "Required": false,
                        "Readonly": false,
                        "Hidden": false,
                        "UniqueID": null,
                        "Properties": [{
                            "Name": "Component",
                            "Value": "x4",
                            "Type": "page",
                            "Label": "Component"
                        }, {
                            "Name": "CompTypes",
                            "Value": "SiteControl",
                            "Type": "schemas",
                            "Label": "Component Types"
                        }, {
                            "Name": "WrappedUp",
                            "Value": "false",
                            "Type": "boolean",
                            "Label": "Wrapped in Expanded Xml"
                        }, {
                            "Name": "AllowWrappingChange",
                            "Value": "false",
                            "Type": "boolean",
                            "Label": "Allow changing xml wrapping"
                        }],
                        "Label": "Site Control",
                        "Name": "SiteControl",
                        "HelpText": "",
                        "Exports": ""
                    }, {
                        "TypeID": "8",
                        "TypeName": "Navigation",
                        "ElementTypeName": "Navigation",
                        "Required": false,
                        "Readonly": false,
                        "Hidden": false,
                        "UniqueID": null,
                        "Properties": [{
                            "Name": "Expanded",
                            "Value": "false",
                            "Type": "boolean",
                            "Label": "Expanded by Default"
                        }, {
                            "Name": "Navigation",
                            "Value": "Ancestors",
                            "Type": "enumeration",
                            "Label": "Navigation Type",
                            "Choices": "Children;Ancestors;Sibling;Sequential;SubTree"
                        }, {
                            "Name": "GenerationOrder",
                            "Value": "down",
                            "Type": "enumeration",
                            "Label": "Generation Order",
                            "Choices": "up;down"
                        }, {
                            "Name": "StartPage",
                            "Value": "x2",
                            "Type": "page",
                            "Label": "Start Page"
                        }, {
                            "Name": "MaxNodes",
                            "Value": "",
                            "Type": "",
                            "Label": "Maximum Nodes"
                        }, {
                            "Name": "MaxDepth",
                            "Value": "",
                            "Type": "",
                            "Label": "Maximum Depth"
                        }, {
                            "Name": "Query",
                            "Value": "",
                            "Type": "",
                            "Label": "Query"
                        }],
                        "Label": "Ancestor Navigation",
                        "Name": "AncestorNavigation",
                        "HelpText": "",
                        "Exports": ""
                    }],
                    "saveNewVersion": false
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Full details of created/updated Schema</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "AllowedCategoryRootIDs": "",
                    "AllowedCategoryRoots": [],
                    "DefaultCategories": [],
                    "DefaultCategoryIDs": "",
                    "Drafting": true,
                    "Fields": [{
                        "ChildElementLabel": null,
                        "ChildElementName": null,
                        "ChildElementTypeID": "1",
                        "ChildProperties": [],
                        "DefaultValue": null,
                        "ElementTypeName": "string",
                        "Exports": "",
                        "HasExports": false,
                        "HelpText": "",
                        "Hidden": true,
                        "IconName": "document16",
                        "IsXpower": false,
                        "Label": "Title",
                        "Name": "Title",
                        "Properties": [],
                        "Readonly": false,
                        "Required": false,
                        "ResersedContentUnitField": false,
                        "TypeID": "2",
                        "TypeLabel": "Plain Text",
                        "TypeName": "Text Element",
                        "UniqueID": null
                    }, {
                        "ChildElementLabel": null,
                        "ChildElementName": null,
                        "ChildElementTypeID": "1",
                        "ChildProperties": [],
                        "DefaultValue": null,
                        "ElementTypeName": "dhtml",
                        "Exports": "",
                        "HasExports": false,
                        "HelpText": "",
                        "Hidden": false,
                        "IconName": "edit16",
                        "IsXpower": false,
                        "Label": "Body Copy",
                        "Name": "BodyCopy",
                        "Properties": [{
                            "Choices": "",
                            "Label": "Height",
                            "Name": "Height",
                            "Type": "integer",
                            "Value": ""
                        }],
                        "Readonly": true,
                        "Required": false,
                        "ResersedContentUnitField": false,
                        "TypeID": "3",
                        "TypeLabel": "XHTML Editor",
                        "TypeName": "XHTML Element",
                        "UniqueID": null
                    }, {
                        "ChildElementLabel": null,
                        "ChildElementName": null,
                        "ChildElementTypeID": "1",
                        "ChildProperties": [],
                        "DefaultValue": null,
                        "ElementTypeName": "Component",
                        "Exports": "",
                        "HasExports": false,
                        "HelpText": "",
                        "Hidden": false,
                        "IconName": "component16",
                        "IsXpower": true,
                        "Label": "Site Control",
                        "Name": "SiteControl",
                        "Properties": [{
                            "Choices": "",
                            "Label": "Component",
                            "Name": "Component",
                            "Type": "page",
                            "Value": "x4"
                        }, {
                            "Choices": "",
                            "Label": "Component Types",
                            "Name": "CompTypes",
                            "Type": "schemas",
                            "Value": "SiteControl"
                        }, {
                            "Choices": "",
                            "Label": "Wrapped in Expanded Xml",
                            "Name": "WrappedUp",
                            "Type": "boolean",
                            "Value": "false"
                        }, {
                            "Choices": "",
                            "Label": "Allow changing xml wrapping",
                            "Name": "AllowWrappingChange",
                            "Type": "boolean",
                            "Value": "false"
                        }],
                        "Readonly": false,
                        "Required": false,
                        "ResersedContentUnitField": false,
                        "TypeID": "4",
                        "TypeLabel": "Component",
                        "TypeName": "Component",
                        "UniqueID": null
                    }, {
                        "ChildElementLabel": null,
                        "ChildElementName": null,
                        "ChildElementTypeID": "1",
                        "ChildProperties": [],
                        "DefaultValue": null,
                        "ElementTypeName": "Navigation",
                        "Exports": "",
                        "HasExports": true,
                        "HelpText": "",
                        "Hidden": false,
                        "IconName": "navigation16",
                        "IsXpower": true,
                        "Label": "Ancestor Navigation",
                        "Name": "AncestorNavigation",
                        "Properties": [{
                            "Choices": "",
                            "Label": "Expanded by Default",
                            "Name": "Expanded",
                            "Type": "boolean",
                            "Value": "false"
                        }, {
                            "Choices": "Children;Ancestors;Sibling;Sequential;SubTree",
                            "Label": "Navigation Type",
                            "Name": "Navigation",
                            "Type": "enumeration",
                            "Value": "Ancestors"
                        }, {
                            "Choices": "up;down",
                            "Label": "Generation Order",
                            "Name": "GenerationOrder",
                            "Type": "enumeration",
                            "Value": "down"
                        }, {
                            "Choices": "",
                            "Label": "Start Page",
                            "Name": "StartPage",
                            "Type": "page",
                            "Value": "x2"
                        }, {
                            "Choices": "",
                            "Label": "Maximum Nodes",
                            "Name": "MaxNodes",
                            "Type": "",
                            "Value": ""
                        }, {
                            "Choices": "",
                            "Label": "Maximum Depth",
                            "Name": "MaxDepth",
                            "Type": "",
                            "Value": ""
                        }, {
                            "Choices": "",
                            "Label": "Query",
                            "Name": "Query",
                            "Type": "",
                            "Value": ""
                        }],
                        "Readonly": false,
                        "Required": false,
                        "ResersedContentUnitField": false,
                        "TypeID": "8",
                        "TypeLabel": "Navigation",
                        "TypeName": "Navigation",
                        "UniqueID": null
                    }],
                    "FriendlyName": "Details",
                    "Icon": 2,
                    "IsComponent": false,
                    "IsDynamicSitePage": true,
                    "OriginPageId": null,
                    "PagesCount": 0,
                    "PresentationsCount": 0,
                    "RootName": "Details",
                    "Stylesheet": "",
                    "UniqueID": "schemas\/194",
                    "Version": 4,
                    "VersionsCount": 2,
                    "VersionsList": [{
                        "Date": "20140120T14:21:50",
                        "User": "User\/INGENIUX___awang",
                        "Version": 3
                    }, {
                        "Date": "20131210T15:36:28",
                        "User": "User\/INGENIUX___awang",
                        "Version": 2
                    }],
                    "ViewName": "Details",
                    "WorkflowDefinitionID": "",
                    "WorkflowDefinitions": null
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>Friendly Names of Schemas are unique. If created/updated Schema friendly name matches the friendly name of another Schema, returns error status.</para>
            <para>This operation doesn't change Schema's presentation information.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SchemaDesignerServices.GetSchemaOutofSyncPages(IngeniuxCMService.SchemaOutOfSyncPagesGetInput)">
            <summary>
            Retrieves the out of sync Pages created with given Schema. Out of sync Pages are Pages referring previous versions of the Schema
            </summary>
            <param name="data">
            <para>Object containg the unique Id of the Schema</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "UniqueID": "schemas/194"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Collection of Pages that are using previous version of given Schema</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "ID": "x9",
                    "Name": "Terms|x9",
                    "AssignedGroup": "",
                    "AssignedUser": "INGENIUX\\awang",
                    "CheckedOut": false,
                    "Icon": 2,
                    "RootName": "Details",
                    "SchemaVersion": 3,
                    "Score": -1
                }, {
                    "ID": "x10",
                    "Name": "Features|x10",
                    "AssignedGroup": "",
                    "AssignedUser": "",
                    "CheckedOut": false,
                    "Icon": 2,
                    "RootName": "Details",
                    "SchemaVersion": 3,
                    "Score": -1
                }, {
                    "ID": "x8",
                    "Name": "Services|x8",
                    "AssignedGroup": "",
                    "AssignedUser": "INGENIUX\\awang",
                    "CheckedOut": false,
                    "Icon": 2,
                    "RootName": "Details",
                    "SchemaVersion": 3,
                    "Score": -1
                }]
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Schema doesn't exist, returns error status</para>
            <para>Only Schemas not in draft mode are allowed to retrieve out of sync pages. If Schema is in draft mode, returns error status</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SchemaDesignerServices.SyncPagesToSchema(IngeniuxCMService.SchemaSyncRequest)">
            <summary>
            Synchronizes specified Pages to the latest version of their Schema. This operations will update Pages based on the Schema, but
            adding and removing fields to match the new Schema version. It will not touch any element or attribute values of the Pages.
            </summary>
            <param name="data">
            <para>Object containing Ids of the Pages to be synchronized</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "SchemaRootName": "Details",
                    "PageIDs": ["x9", "x10"]
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Result of Synchronization</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "ErrorPages": [],
                    "SchemaRootName": "Details",
                    "SuccessPageIDs": ["x10", "x9"]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Schema with given Root name doesn't exist, returns error status</para>
            <para>During synchronization, site is locked to prevent any content changes. Site will be unlocked after synchronization is one.</para>
            </remarks>
        </member>
        <member name="T:IngeniuxCMService.ISiteTreeServices">
            <summary>
            Site tree actions. 
            </summary>
            <remarks>Includes functionality of the following classic handlers:
            canMovePage, copyPage, getTreeData, emptyRecycleFolder, newPage, newPageCheck</remarks>
        </member>
        <member name="M:IngeniuxCMService.ISiteTreeServices.GetPageProperties(System.String,System.String)">
            <summary>
            Gets the properties of a single page.
            </summary>
            <param name="pageId"></param>
            <returns></returns>
        </member>
        <member name="M:IngeniuxCMService.ISiteTreeServices.GetChildPages(IngeniuxCMService.TreeNodeInfo,System.String,System.Int32)">
            <summary>
            Gets child pages of a given page.
            </summary>
            <param name="pageId">API change: need to pass in a specific page ID instead of an entire tree node.</param>
            <param name="startingIndex">API change: pass in starting index instead of next page ID.</param>
            <param name="pageSize">Pass in page size, default 50</param>
            <returns></returns>
        </member>
        <member name="M:IngeniuxCMService.ISiteTreeServices.MoveCopyPage(IngeniuxCMService.PageMoveCopyInformation,System.String)">
            <summary>
            Moves copy page.
            </summary>
            <param name="actionData">Information of action data.</param>
            <param name="toCopy"></param>
            <param name="toSmartCopy"></param>
            <returns></returns>
        </member>
        <member name="M:IngeniuxCMService.ISiteTreeServices.RecurseToPage(System.String,System.String)">
            <summary>
            Gets pages ancestor information, and children for each ancestor. This is a expensive call
            </summary>
            <param name="pageId"></param>
            <returns></returns>
        </member>
        <member name="M:IngeniuxCMService.ISiteTreeServices.CanMovePage(System.String[])">
            <summary>
            Checks whether one page can be moved to another location.
            </summary>
            <param name="pageId"></param>
            <returns></returns>
            <remarks>From handler: canMovePage</remarks>
        </member>
        <member name="M:IngeniuxCMService.ISiteTreeServices.MoveCopyPageAdvanced(System.String[],System.String,System.String,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            Moves or copies a page. This one is a more-advanced version of MoveCopyPage, passing it multiple pages to be moved or copied.
            </summary>
            <param name="pageIds"></param>
            <param name="targetId"></param>
            <param name="location"></param>
            <param name="toCopy"></param>
            <param name="isSmartCopy"></param>
            <param name="targetLocale"></param>
            <returns></returns>
            <remarks>It is to be 100 percent compatible with client UI. The multiple move copy was introduced in version 7, invoked via the tree contest menu. From handler: copyPage</remarks>
        </member>
        <member name="M:IngeniuxCMService.ISiteTreeServices.EmptyRecycleFolder">
            <summary>
            Empty recycle folder action
            </summary>
            <returns>Doesn't really need to return anything when successful. Let it return true all the time.</returns>
            <remarks>From handler: emptyRecycleFolder</remarks>
        </member>
        <member name="M:IngeniuxCMService.ISiteTreeServices.CreateNewPage(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new page.
            </summary>
            <param name="parentId"></param>
            <param name="pageName"></param>
            <param name="ruleId"></param>
            <param name="schema"></param>
            <param name="layout"></param>
            <param name="userId"></param>
            <returns>Page properties</returns>
            <remarks>From handler: newPage. Please note that the return object is simplified to page properties only, so UI code needs to change</remarks>
        </member>
        <member name="M:IngeniuxCMService.ISiteTreeServices.NewPageWorkflowCheck(System.String,System.String)">
            <summary>
            	Checks to make sure that the current user can create a page with the given
            	ruleId or schemaFile, by making sure that user is a member of the first
            	workflow transition's group. Both parameters are optional, but if ruleId
            	is specified, then the value of schemaFile is ignored.
            </summary>
            <param name="ruleId"></param>
            <param name="schemaFile"></param>
            <returns></returns>
            <remarks>From handler: newPageCheck</remarks>
        </member>
        <member name="T:IngeniuxCMService.SiteTreeServices">
            <summary>
            Provides the functionality to work with Ingeniux CMS site tree.
            </summary>
        </member>
        <member name="M:IngeniuxCMService.SiteTreeServices.GetPageProperties(System.String,System.String)">
            <summary>
            Retrieves Properties of a single Page node, which includes collection of meta data of the Page.
            </summary>
            <param name="pageId">Id of the Page</param>
            <param name="pubTarget">Id of the current Publishing Target, optional</param>
            <returns>
            <para>Properties of the Page node</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "name": "dbquery",
                    "allowedCategoryRoots": [],
                    "ancestors": ["x1", "x2"],
                    "assignedGroup": null,
                    "assignedUser": null,
                    "canClaimPage": false,
                    "canTranslate": false,
                    "checkedOut": false,
                    "error": null,
                    "icon": 4,
                    "isAssignedToOtherUser": false,
                    "isEditable": false,
                    "isInWorkflow": false,
                    "justRecycled": false,
                    "languageRootId": "",
                    "lingualMaps": {
                        "clones": [],
                        "master": null
                    },
                    "locale": "",
                    "localeInherited": true,
                    "markedForPublish": true,
                    "markedForPublishAny": true,
                    "markedForPublishPropagated": false,
                    "nextPageId": null,
                    "nextPageIndex": 0,
                    "noDnd": false,
                    "numChildPages": 0,
                    "pageId": "x99",
                    "parentId": null,
                    "pendingMasterVersion": 0,
                    "referenceProps": {
                        "created": "20140109T22:46:19",
                        "createdBy": "INGENIUX\\awang",
                        "endDate": "00010101T00:00:00",
                        "lastModified": "20140127T18:17:05",
                        "lastModifiedBy": "User\/INGENIUX___awang",
                        "publishAs": "",
                        "startDate": "00010101T00:00:00"
                    },
                    "remoteServer": "",
                    "schemaFriendlyName": null,
                    "schemaName": "DbQuery",
                    "schemaOnLatestVersion": false,
                    "securityLevel": 2,
                    "userCanCopyPage": true,
                    "workflow": null
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Page doesn't exist, returns error status</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SiteTreeServices.GetChildPages(IngeniuxCMService.TreeNodeInfo,System.String,System.Int32)">
            <summary>
            Retrieves collection of the information of Children of a given Page. Returns up to 50 entries, starting from given index.
            </summary>
            <param name="node">
            <para>Object containing the information of select Page node to retrieve children information for</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "widgetId": "x100",
                "objectId": "x100",
                "index": 1
            }
            ]]>
            </code>
            </example>
            </param>
            <param name="pubTarget">Id of the current Publishing Target, optional</param>
            <param name="nextPageIndex">
            <para>Starting index of the returning page, 0 based.</para>
            <example>
            50 for starting from the 51 first entry and grab next update 50 entries
            </example>
            </param>
            <returns>
            <para>Collection of information on current Page's children, update to 50 entries. Each entry contains properties of the child Page</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "name": "zBrush",
                    "isFolder": false,
                    "objectId": "x116",
                    "props": {
                        "name": "zBrush",
                        "allowedCategoryRoots": [],
                        "ancestors": ["x1", "x2", "x112"],
                        "assignedGroup": null,
                        "assignedUser": null,
                        "canClaimPage": false,
                        "canTranslate": false,
                        "checkedOut": false,
                        "error": null,
                        "icon": 3,
                        "isAssignedToOtherUser": false,
                        "isEditable": false,
                        "isInWorkflow": false,
                        "justRecycled": false,
                        "languageRootId": "x112",
                        "lingualMaps": {
                            "clones": [{
                                "name": "zBrush",
                                "id": "x118",
                                "locale": "zh-cn"
                            }],
                            "master": null
                        },
                        "locale": "en-us",
                        "localeInherited": true,
                        "markedForPublish": false,
                        "markedForPublishAny": false,
                        "markedForPublishPropagated": false,
                        "nextPageId": null,
                        "nextPageIndex": 0,
                        "noDnd": false,
                        "numChildPages": 0,
                        "pageId": "x116",
                        "parentId": null,
                        "pendingMasterVersion": 0,
                        "referenceProps": {
                            "created": "20140122T00:37:10",
                            "createdBy": "INGENIUX\\awang",
                            "endDate": "00010101T00:00:00",
                            "lastModified": "20140127T21:24:37",
                            "lastModifiedBy": "User\/INGENIUX___awang",
                            "publishAs": "",
                            "startDate": "00010101T00:00:00"
                        },
                        "remoteServer": "",
                        "schemaFriendlyName": null,
                        "schemaName": "Image",
                        "schemaOnLatestVersion": false,
                        "securityLevel": 2,
                        "userCanCopyPage": true,
                        "workflow": null
                    },
                    "readOnly": false,
                    "title": "<span unselectable='on'><img src='\/CMStrunk\/images\/icons\/inactive\/image16.png' \/><\/span>&nbsp;<span unselectable='on' class=''>zBrush<\/span>",
                    "widgetId": "x116"
                }, {
                    "name": "zBrush",
                    "isFolder": false,
                    "objectId": "x119",
                    "props": {
                        "name": "zBrush",
                        "allowedCategoryRoots": [],
                        "ancestors": ["x1", "x2", "x112"],
                        "assignedGroup": null,
                        "assignedUser": {
                            "name": "Turtle Master",
                            "email": "awang@ingeniux.com",
                            "userId": "INGENIUX\\awang"
                        },
                        "canClaimPage": false,
                        "canTranslate": false,
                        "checkedOut": true,
                        "error": null,
                        "icon": 3,
                        "isAssignedToOtherUser": false,
                        "isEditable": true,
                        "isInWorkflow": false,
                        "justRecycled": false,
                        "languageRootId": "x112",
                        "lingualMaps": {
                            "clones": [{
                                "name": "zBrush",
                                "id": "x120",
                                "locale": "zh-cn"
                            }],
                            "master": null
                        },
                        "locale": "en-us",
                        "localeInherited": true,
                        "markedForPublish": false,
                        "markedForPublishAny": false,
                        "markedForPublishPropagated": false,
                        "nextPageId": null,
                        "nextPageIndex": 0,
                        "noDnd": false,
                        "numChildPages": 0,
                        "pageId": "x119",
                        "parentId": null,
                        "pendingMasterVersion": 0,
                        "referenceProps": {
                            "created": "20140123T23:49:33",
                            "createdBy": "INGENIUX\\awang",
                            "endDate": "00010101T00:00:00",
                            "lastModified": "20140123T23:49:33",
                            "lastModifiedBy": "User\/INGENIUX___awang",
                            "publishAs": "",
                            "startDate": "00010101T00:00:00"
                        },
                        "remoteServer": "",
                        "schemaFriendlyName": null,
                        "schemaName": "Image",
                        "schemaOnLatestVersion": false,
                        "securityLevel": 2,
                        "userCanCopyPage": true,
                        "workflow": null
                    },
                    "readOnly": false,
                    "title": "<span unselectable='on'><img src='\/CMStrunk\/images\/icons\/over\/image16.png' \/><\/span>&nbsp;<span unselectable='on' class=''>zBrush<\/span>",
                    "widgetId": "x119"
                }]
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Page doesn't exist, returns error status</para>
            <para>This operation will retrieve all to 50 entries. If there are more than 50 child Pages, it will return an additional entry "More Pages..." with id "mpx3". This indicating there are more children to retrieve after current 50 children entries. 
            </para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SiteTreeServices.MoveCopyPage(IngeniuxCMService.PageMoveCopyInformation,System.String)">
            <summary>
            Moves or Copies a Page node from one location to another location. All the descendants of the Page node gets moved/copied together.
            </summary>
            <param name="data">
            <para>Instructions on the Move/Copy action</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "child": {
                    "widgetId": "x108",
                    "objectId": "x108",
                    "index": 1
                },
                "oldParent": {
                    "widgetId": "x100",
                    "objectId": "x100",
                    "index": 1
                },
                "oldParentTree": {
                    "widgetId": "x0",
                    "objectId": ""
                },
                "newParent": {
                    "widgetId": "x103",
                    "objectId": "x103",
                    "index": 4
                },
                "newParentTree": {
                    "widgetId": "x0",
                    "objectId": ""
                },
                "newIndex": 0,
                "deep": true,
                "tree": {
                    "widgetId": "x0",
                    "objectId": ""
                },
                "toCopy": true,
                "toSmartCopy": false
            }
            ]]>
            </code>
            </example>
            </param>
            <param name="pubTarget">Id of the current Publishing Target, optional</param>
            <returns>
            <para>Updated information of the Page node that was moved, or new Page node that from created from the copy action</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "name": "Soap",
                    "isFolder": false,
                    "objectId": "x123",
                    "props": {
                        "name": "Soap",
                        "allowedCategoryRoots": [],
                        "ancestors": ["x1", "x2", "x100", "x103"],
                        "assignedGroup": null,
                        "assignedUser": {
                            "name": "Turtle Master",
                            "email": "awang@ingeniux.com",
                            "userId": "INGENIUX\\awang"
                        },
                        "canClaimPage": false,
                        "canTranslate": false,
                        "checkedOut": true,
                        "error": null,
                        "icon": 9,
                        "isAssignedToOtherUser": false,
                        "isEditable": true,
                        "isInWorkflow": false,
                        "justRecycled": false,
                        "languageRootId": "",
                        "lingualMaps": {
                            "clones": [],
                            "master": null
                        },
                        "locale": "",
                        "localeInherited": true,
                        "markedForPublish": false,
                        "markedForPublishAny": false,
                        "markedForPublishPropagated": false,
                        "nextPageId": null,
                        "nextPageIndex": 0,
                        "noDnd": false,
                        "numChildPages": 0,
                        "pageId": "x123",
                        "parentId": null,
                        "pendingMasterVersion": 0,
                        "referenceProps": {
                            "created": "20140130T18:12:31",
                            "createdBy": "INGENIUX\\awang",
                            "endDate": "00010101T00:00:00",
                            "lastModified": "20140130T18:12:31",
                            "lastModifiedBy": "User\/INGENIUX___awang",
                            "publishAs": "",
                            "startDate": "00010101T00:00:00"
                        },
                        "remoteServer": "",
                        "schemaFriendlyName": null,
                        "schemaName": "SOAPServiceClient",
                        "schemaOnLatestVersion": false,
                        "securityLevel": 2,
                        "userCanCopyPage": true,
                        "workflow": null
                    },
                    "readOnly": false,
                    "title": "<span unselectable='on'><img src='\/CMStrunk\/images\/icons\/over\/comcomponent16.png' \/><\/span>&nbsp;<span unselectable='on' class=''>Soap<\/span>",
                    "widgetId": "x123"
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>This operation put all instructions of the move/copy action info one parameter. 
            For operation that divice instructions into separate parameters, use the <see cref="M:IngeniuxCMService.SiteTreeServices.MoveCopyPageAdvanced(System.String[],System.String,System.String,System.Boolean,System.Boolean,System.String,System.String)"/> opertaion.</para>
            <para>If target parent Page Is is not provided, use "x1", which is the Content Store Id</para>
            <para>If either original Page or target parent Page doesn't exist, returns error status</para>
            </remarks>
            <seealso cref="M:IngeniuxCMService.SiteTreeServices.MoveCopyPageAdvanced(System.String[],System.String,System.String,System.Boolean,System.Boolean,System.String,System.String)"/>
        </member>
        <member name="M:IngeniuxCMService.SiteTreeServices.RecurseToPage(System.String,System.String)">
            <summary>
            Retrieves the entire ancestors collection to the given Page, starting from the Content Store. 
            Each ancestor entry contains its children entries.
            </summary>
            <param name="pageId">Id of the Page to recurse to</param>
            <param name="pubTarget">Id of the current Publishing Target, optional</param>
            <returns>
            <para>The array of ancestors entries, each contains the children Pages listing</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "children": [{
                        "name": "Site",
                        "isFolder": true,
                        "objectId": "x2",
                        "props": {
                            "name": "Site",
                            "allowedCategoryRoots": [],
                            "ancestors": ["x1"],
                            "assignedGroup": null,
                            "assignedUser": {
                                "name": "Turtle Master",
                                "email": "awang@ingeniux.com",
                                "userId": "INGENIUX\\awang"
                            },
                            "canClaimPage": false,
                            "canTranslate": false,
                            "checkedOut": true,
                            "error": null,
                            "icon": 1,
                            "isAssignedToOtherUser": false,
                            "isEditable": true,
                            "isInWorkflow": false,
                            "justRecycled": false,
                            "languageRootId": "",
                            "lingualMaps": {
                                "clones": [],
                                "master": null
                            },
                            "locale": "",
                            "localeInherited": true,
                            "markedForPublish": true,
                            "markedForPublishAny": true,
                            "markedForPublishPropagated": true,
                            "nextPageId": null,
                            "nextPageIndex": 0,
                            "noDnd": false,
                            "numChildPages": 7,
                            "pageId": "x2",
                            "parentId": null,
                            "pendingMasterVersion": 0,
                            "referenceProps": {
                                "created": "20131206T23:58:02",
                                "createdBy": "INGENIUX\\awang",
                                "endDate": "00010101T00:00:00",
                                "lastModified": "20140125T01:13:31",
                                "lastModifiedBy": "User\/INGENIUX___awang",
                                "publishAs": "",
                                "startDate": "00010101T00:00:00"
                            },
                            "remoteServer": "",
                            "schemaFriendlyName": null,
                            "schemaName": "Folder",
                            "schemaOnLatestVersion": false,
                            "securityLevel": 2,
                            "userCanCopyPage": true,
                            "workflow": null
                        },
                        "readOnly": false,
                        "title": "<span unselectable='on'><img src='\/CMStrunk\/images\/icons\/over\/folder16.png' \/><\/span>&nbsp;<span unselectable='on' class=' markedForPublish '>Site<\/span>",
                        "widgetId": "x2"
                    }, {
                        "name": "Recycle Folder",
                        "isFolder": true,
                        "objectId": "RecycleBin",
                        "props": {
                            "name": "Recycle%20Folder",
                            "allowedCategoryRoots": [],
                            "ancestors": ["x1"],
                            "assignedGroup": null,
                            "assignedUser": null,
                            "canClaimPage": false,
                            "canTranslate": false,
                            "checkedOut": false,
                            "error": null,
                            "icon": 1,
                            "isAssignedToOtherUser": false,
                            "isEditable": false,
                            "isInWorkflow": false,
                            "justRecycled": false,
                            "languageRootId": "",
                            "lingualMaps": {
                                "clones": [],
                                "master": null
                            },
                            "locale": "",
                            "localeInherited": true,
                            "markedForPublish": false,
                            "markedForPublishAny": false,
                            "markedForPublishPropagated": false,
                            "nextPageId": null,
                            "nextPageIndex": 0,
                            "noDnd": false,
                            "numChildPages": 7,
                            "pageId": "RecycleBin",
                            "parentId": null,
                            "pendingMasterVersion": 0,
                            "referenceProps": {
                                "created": "20131206T23:41:42",
                                "createdBy": "INGENIUX\\abusbin",
                                "endDate": "00010101T00:00:00",
                                "lastModified": "20140125T01:13:30",
                                "lastModifiedBy": "User\/INGENIUX___awang",
                                "publishAs": "",
                                "startDate": "00010101T00:00:00"
                            },
                            "remoteServer": "",
                            "schemaFriendlyName": null,
                            "schemaName": "Folder",
                            "schemaOnLatestVersion": false,
                            "securityLevel": 2,
                            "userCanCopyPage": true,
                            "workflow": null
                        },
                        "readOnly": false,
                        "title": "<span unselectable='on'><img src='\/CMStrunk\/images\/icons\/inactive\/folder16.png' \/><\/span>&nbsp;<span unselectable='on' class=''>Recycle Folder<\/span>",
                        "widgetId": "RecycleBin"
                    }],
                    "myParentId": null
                }, {
                    "children": [{
                        "name": "Listing",
                        "isFolder": true,
                        "objectId": "x112",
                        "props": {
                            "name": "Listing",
                            "allowedCategoryRoots": [],
                            "ancestors": ["x1", "x2"],
                            "assignedGroup": null,
                            "assignedUser": {
                                "name": "Turtle Master",
                                "email": "awang@ingeniux.com",
                                "userId": "INGENIUX\\awang"
                            },
                            "canClaimPage": false,
                            "canTranslate": false,
                            "checkedOut": true,
                            "error": null,
                            "icon": 99,
                            "isAssignedToOtherUser": false,
                            "isEditable": true,
                            "isInWorkflow": false,
                            "justRecycled": false,
                            "languageRootId": "x112",
                            "lingualMaps": {
                                "clones": [{
                                    "name": "List",
                                    "id": "x117",
                                    "locale": "zh-cn"
                                }],
                                "master": null
                            },
                            "locale": "en-us",
                            "localeInherited": false,
                            "markedForPublish": false,
                            "markedForPublishAny": false,
                            "markedForPublishPropagated": false,
                            "nextPageId": null,
                            "nextPageIndex": 0,
                            "noDnd": false,
                            "numChildPages": 2,
                            "pageId": "x112",
                            "parentId": null,
                            "pendingMasterVersion": 0,
                            "referenceProps": {
                                "created": "20140121T22:53:23",
                                "createdBy": "INGENIUX\\awang",
                                "endDate": "00010101T00:00:00",
                                "lastModified": "20140127T17:24:31",
                                "lastModifiedBy": "User\/INGENIUX___awang",
                                "publishAs": "",
                                "startDate": "00010101T00:00:00"
                            },
                            "remoteServer": "",
                            "schemaFriendlyName": null,
                            "schemaName": "ListTest",
                            "schemaOnLatestVersion": false,
                            "securityLevel": 2,
                            "userCanCopyPage": true,
                            "workflow": null
                        },
                        "readOnly": false,
                        "title": "<span unselectable='on'><img src='\/CMStrunk\/images\/icons\/over\/document16.png' \/><\/span>&nbsp;<span unselectable='on' class=''>Listing<\/span>",
                        "widgetId": "x112"
                    }, {
                        "name": "Default Dynamic Schemas Test",
                        "isFolder": true,
                        "objectId": "x100",
                        "props": {
                            "name": "Default%20Dynamic%20Schemas%20Test",
                            "allowedCategoryRoots": [],
                            "ancestors": ["x1", "x2"],
                            "assignedGroup": null,
                            "assignedUser": {
                                "name": "Turtle Master",
                                "email": "awang@ingeniux.com",
                                "userId": "INGENIUX\\awang"
                            },
                            "canClaimPage": false,
                            "canTranslate": false,
                            "checkedOut": true,
                            "error": null,
                            "icon": 1,
                            "isAssignedToOtherUser": false,
                            "isEditable": true,
                            "isInWorkflow": false,
                            "justRecycled": false,
                            "languageRootId": "",
                            "lingualMaps": {
                                "clones": [],
                                "master": null
                            },
                            "locale": "",
                            "localeInherited": true,
                            "markedForPublish": false,
                            "markedForPublishAny": false,
                            "markedForPublishPropagated": false,
                            "nextPageId": null,
                            "nextPageIndex": 0,
                            "noDnd": false,
                            "numChildPages": 6,
                            "pageId": "x100",
                            "parentId": null,
                            "pendingMasterVersion": 0,
                            "referenceProps": {
                                "created": "20140110T01:04:25",
                                "createdBy": "INGENIUX\\awang",
                                "endDate": "00010101T00:00:00",
                                "lastModified": "20140120T18:44:57",
                                "lastModifiedBy": "User\/INGENIUX___awang",
                                "publishAs": "",
                                "startDate": "00010101T00:00:00"
                            },
                            "remoteServer": "",
                            "schemaFriendlyName": null,
                            "schemaName": "Folder",
                            "schemaOnLatestVersion": false,
                            "securityLevel": 2,
                            "userCanCopyPage": true,
                            "workflow": null
                        },
                        "readOnly": false,
                        "title": "<span unselectable='on'><img src='\/CMStrunk\/images\/icons\/over\/folder16.png' \/><\/span>&nbsp;<span unselectable='on' class=''>Default Dynamic Schemas Test<\/span>",
                        "widgetId": "x100"
                    }, {
                        "name": "dbquery",
                        "isFolder": false,
                        "objectId": "x99",
                        "props": {
                            "name": "dbquery",
                            "allowedCategoryRoots": [],
                            "ancestors": ["x1", "x2"],
                            "assignedGroup": null,
                            "assignedUser": null,
                            "canClaimPage": false,
                            "canTranslate": false,
                            "checkedOut": false,
                            "error": null,
                            "icon": 4,
                            "isAssignedToOtherUser": false,
                            "isEditable": false,
                            "isInWorkflow": false,
                            "justRecycled": false,
                            "languageRootId": "",
                            "lingualMaps": {
                                "clones": [],
                                "master": null
                            },
                            "locale": "",
                            "localeInherited": true,
                            "markedForPublish": true,
                            "markedForPublishAny": true,
                            "markedForPublishPropagated": true,
                            "nextPageId": null,
                            "nextPageIndex": 0,
                            "noDnd": false,
                            "numChildPages": 0,
                            "pageId": "x99",
                            "parentId": null,
                            "pendingMasterVersion": 0,
                            "referenceProps": {
                                "created": "20140109T22:46:19",
                                "createdBy": "INGENIUX\\awang",
                                "endDate": "00010101T00:00:00",
                                "lastModified": "20140127T18:17:05",
                                "lastModifiedBy": "User\/INGENIUX___awang",
                                "publishAs": "",
                                "startDate": "00010101T00:00:00"
                            },
                            "remoteServer": "",
                            "schemaFriendlyName": null,
                            "schemaName": "DbQuery",
                            "schemaOnLatestVersion": false,
                            "securityLevel": 2,
                            "userCanCopyPage": true,
                            "workflow": null
                        },
                        "readOnly": false,
                        "title": "<span unselectable='on'><img src='\/CMStrunk\/images\/icons\/inactive\/gateway16.png' \/><\/span>&nbsp;<span unselectable='on' class=' markedForPublish '>dbquery<\/span>",
                        "widgetId": "x99"
                    }, {
                        "name": "DynamicExecutes",
                        "isFolder": true,
                        "objectId": "x89",
                        "props": {
                            "name": "DynamicExecutes",
                            "allowedCategoryRoots": [],
                            "ancestors": ["x1", "x2"],
                            "assignedGroup": null,
                            "assignedUser": null,
                            "canClaimPage": false,
                            "canTranslate": false,
                            "checkedOut": false,
                            "error": null,
                            "icon": 1,
                            "isAssignedToOtherUser": false,
                            "isEditable": false,
                            "isInWorkflow": false,
                            "justRecycled": false,
                            "languageRootId": "",
                            "lingualMaps": {
                                "clones": [],
                                "master": null
                            },
                            "locale": "",
                            "localeInherited": true,
                            "markedForPublish": true,
                            "markedForPublishAny": true,
                            "markedForPublishPropagated": true,
                            "nextPageId": null,
                            "nextPageIndex": 0,
                            "noDnd": false,
                            "numChildPages": 6,
                            "pageId": "x89",
                            "parentId": null,
                            "pendingMasterVersion": 0,
                            "referenceProps": {
                                "created": "20140107T21:57:04",
                                "createdBy": "INGENIUX\\awang",
                                "endDate": "00010101T00:00:00",
                                "lastModified": "20140122T21:48:30",
                                "lastModifiedBy": "User\/INGENIUX___awang",
                                "publishAs": "",
                                "startDate": "00010101T00:00:00"
                            },
                            "remoteServer": "",
                            "schemaFriendlyName": null,
                            "schemaName": "Folder",
                            "schemaOnLatestVersion": false,
                            "securityLevel": 2,
                            "userCanCopyPage": true,
                            "workflow": null
                        },
                        "readOnly": false,
                        "title": "<span unselectable='on'><img src='\/CMStrunk\/images\/icons\/inactive\/folder16.png' \/><\/span>&nbsp;<span unselectable='on' class=' markedForPublish '>DynamicExecutes<\/span>",
                        "widgetId": "x89"
                    }, {
                        "name": "Home",
                        "isFolder": true,
                        "objectId": "x5",
                        "props": {
                            "name": "Home",
                            "allowedCategoryRoots": [],
                            "ancestors": ["x1", "x2"],
                            "assignedGroup": null,
                            "assignedUser": {
                                "name": "Turtle Master",
                                "email": "awang@ingeniux.com",
                                "userId": "INGENIUX\\awang"
                            },
                            "canClaimPage": false,
                            "canTranslate": false,
                            "checkedOut": true,
                            "error": null,
                            "icon": 8,
                            "isAssignedToOtherUser": false,
                            "isEditable": true,
                            "isInWorkflow": false,
                            "justRecycled": false,
                            "languageRootId": "",
                            "lingualMaps": {
                                "clones": [],
                                "master": null
                            },
                            "locale": "",
                            "localeInherited": true,
                            "markedForPublish": true,
                            "markedForPublishAny": true,
                            "markedForPublishPropagated": true,
                            "nextPageId": null,
                            "nextPageIndex": 0,
                            "noDnd": false,
                            "numChildPages": 4,
                            "pageId": "x5",
                            "parentId": null,
                            "pendingMasterVersion": 0,
                            "referenceProps": {
                                "created": "20131207T00:07:46",
                                "createdBy": "INGENIUX\\awang",
                                "endDate": "00010101T00:00:00",
                                "lastModified": "20140125T01:04:19",
                                "lastModifiedBy": "User\/INGENIUX___awang",
                                "publishAs": "",
                                "startDate": "00010101T00:00:00"
                            },
                            "remoteServer": "",
                            "schemaFriendlyName": null,
                            "schemaName": "Home",
                            "schemaOnLatestVersion": false,
                            "securityLevel": 2,
                            "userCanCopyPage": true,
                            "workflow": null
                        },
                        "readOnly": false,
                        "title": "<span unselectable='on'><img src='\/CMStrunk\/images\/icons\/over\/section16.png' \/><\/span>&nbsp;<span unselectable='on' class=' markedForPublish '>Home<\/span>",
                        "widgetId": "x5"
                    }, {
                        "name": "Internal Components",
                        "isFolder": true,
                        "objectId": "x3",
                        "props": {
                            "name": "Internal%20Components",
                            "allowedCategoryRoots": [],
                            "ancestors": ["x1", "x2"],
                            "assignedGroup": null,
                            "assignedUser": null,
                            "canClaimPage": false,
                            "canTranslate": false,
                            "checkedOut": false,
                            "error": null,
                            "icon": 1,
                            "isAssignedToOtherUser": false,
                            "isEditable": false,
                            "isInWorkflow": false,
                            "justRecycled": false,
                            "languageRootId": "",
                            "lingualMaps": {
                                "clones": [],
                                "master": null
                            },
                            "locale": "",
                            "localeInherited": true,
                            "markedForPublish": true,
                            "markedForPublishAny": true,
                            "markedForPublishPropagated": true,
                            "nextPageId": null,
                            "nextPageIndex": 0,
                            "noDnd": false,
                            "numChildPages": 62,
                            "pageId": "x3",
                            "parentId": null,
                            "pendingMasterVersion": 0,
                            "referenceProps": {
                                "created": "20131206T23:58:14",
                                "createdBy": "INGENIUX\\awang",
                                "endDate": "00010101T00:00:00",
                                "lastModified": "20140128T18:15:02",
                                "lastModifiedBy": "User\/INGENIUX___awang",
                                "publishAs": "",
                                "startDate": "00010101T00:00:00"
                            },
                            "remoteServer": "",
                            "schemaFriendlyName": null,
                            "schemaName": "Folder",
                            "schemaOnLatestVersion": false,
                            "securityLevel": 2,
                            "userCanCopyPage": true,
                            "workflow": null
                        },
                        "readOnly": false,
                        "title": "<span unselectable='on'><img src='\/CMStrunk\/images\/icons\/inactive\/folder16.png' \/><\/span>&nbsp;<span unselectable='on' class=' markedForPublish '>Internal Components<\/span>",
                        "widgetId": "x3"
                    }, {
                        "name": "List",
                        "isFolder": true,
                        "objectId": "x117",
                        "props": {
                            "name": "List",
                            "allowedCategoryRoots": [],
                            "ancestors": ["x1", "x2"],
                            "assignedGroup": null,
                            "assignedUser": {
                                "name": "Turtle Master",
                                "email": "awang@ingeniux.com",
                                "userId": "INGENIUX\\awang"
                            },
                            "canClaimPage": false,
                            "canTranslate": false,
                            "checkedOut": true,
                            "error": null,
                            "icon": 99,
                            "isAssignedToOtherUser": false,
                            "isEditable": true,
                            "isInWorkflow": false,
                            "justRecycled": false,
                            "languageRootId": "x117",
                            "lingualMaps": {
                                "clones": [],
                                "master": {
                                    "name": "Listing",
                                    "id": "x112",
                                    "locale": "en-us"
                                }
                            },
                            "locale": "zh-cn",
                            "localeInherited": false,
                            "markedForPublish": false,
                            "markedForPublishAny": false,
                            "markedForPublishPropagated": false,
                            "nextPageId": null,
                            "nextPageIndex": 0,
                            "noDnd": false,
                            "numChildPages": 2,
                            "pageId": "x117",
                            "parentId": null,
                            "pendingMasterVersion": 0,
                            "referenceProps": {
                                "created": "20140123T23:49:20",
                                "createdBy": "INGENIUX\\awang",
                                "endDate": "00010101T00:00:00",
                                "lastModified": "20140123T23:49:51",
                                "lastModifiedBy": "User\/INGENIUX___awang",
                                "publishAs": "",
                                "startDate": "00010101T00:00:00"
                            },
                            "remoteServer": "",
                            "schemaFriendlyName": null,
                            "schemaName": "ListTest",
                            "schemaOnLatestVersion": false,
                            "securityLevel": 2,
                            "userCanCopyPage": true,
                            "workflow": null
                        },
                        "readOnly": false,
                        "title": "<span unselectable='on'><img src='\/CMStrunk\/images\/icons\/over\/document16.png' \/><\/span>&nbsp;<span unselectable='on' class=''>List<\/span>",
                        "widgetId": "x117"
                    }],
                    "myParentId": "x2"
                }, {
                    "children": [{
                        "name": "zBrush",
                        "isFolder": false,
                        "objectId": "x116",
                        "props": {
                            "name": "zBrush",
                            "allowedCategoryRoots": [],
                            "ancestors": ["x1", "x2", "x112"],
                            "assignedGroup": null,
                            "assignedUser": null,
                            "canClaimPage": false,
                            "canTranslate": false,
                            "checkedOut": false,
                            "error": null,
                            "icon": 3,
                            "isAssignedToOtherUser": false,
                            "isEditable": false,
                            "isInWorkflow": false,
                            "justRecycled": false,
                            "languageRootId": "x112",
                            "lingualMaps": {
                                "clones": [{
                                    "name": "zBrush",
                                    "id": "x118",
                                    "locale": "zh-cn"
                                }],
                                "master": null
                            },
                            "locale": "en-us",
                            "localeInherited": true,
                            "markedForPublish": false,
                            "markedForPublishAny": false,
                            "markedForPublishPropagated": false,
                            "nextPageId": null,
                            "nextPageIndex": 0,
                            "noDnd": false,
                            "numChildPages": 0,
                            "pageId": "x116",
                            "parentId": null,
                            "pendingMasterVersion": 0,
                            "referenceProps": {
                                "created": "20140122T00:37:10",
                                "createdBy": "INGENIUX\\awang",
                                "endDate": "00010101T00:00:00",
                                "lastModified": "20140127T21:24:37",
                                "lastModifiedBy": "User\/INGENIUX___awang",
                                "publishAs": "",
                                "startDate": "00010101T00:00:00"
                            },
                            "remoteServer": "",
                            "schemaFriendlyName": null,
                            "schemaName": "Image",
                            "schemaOnLatestVersion": false,
                            "securityLevel": 2,
                            "userCanCopyPage": true,
                            "workflow": null
                        },
                        "readOnly": false,
                        "title": "<span unselectable='on'><img src='\/CMStrunk\/images\/icons\/inactive\/image16.png' \/><\/span>&nbsp;<span unselectable='on' class=''>zBrush<\/span>",
                        "widgetId": "x116"
                    }, {
                        "name": "zBrush",
                        "isFolder": false,
                        "objectId": "x119",
                        "props": {
                            "name": "zBrush",
                            "allowedCategoryRoots": [],
                            "ancestors": ["x1", "x2", "x112"],
                            "assignedGroup": null,
                            "assignedUser": {
                                "name": "Turtle Master",
                                "email": "awang@ingeniux.com",
                                "userId": "INGENIUX\\awang"
                            },
                            "canClaimPage": false,
                            "canTranslate": false,
                            "checkedOut": true,
                            "error": null,
                            "icon": 3,
                            "isAssignedToOtherUser": false,
                            "isEditable": true,
                            "isInWorkflow": false,
                            "justRecycled": false,
                            "languageRootId": "x112",
                            "lingualMaps": {
                                "clones": [{
                                    "name": "zBrush",
                                    "id": "x120",
                                    "locale": "zh-cn"
                                }],
                                "master": null
                            },
                            "locale": "en-us",
                            "localeInherited": true,
                            "markedForPublish": false,
                            "markedForPublishAny": false,
                            "markedForPublishPropagated": false,
                            "nextPageId": null,
                            "nextPageIndex": 0,
                            "noDnd": false,
                            "numChildPages": 0,
                            "pageId": "x119",
                            "parentId": null,
                            "pendingMasterVersion": 0,
                            "referenceProps": {
                                "created": "20140123T23:49:33",
                                "createdBy": "INGENIUX\\awang",
                                "endDate": "00010101T00:00:00",
                                "lastModified": "20140123T23:49:33",
                                "lastModifiedBy": "User\/INGENIUX___awang",
                                "publishAs": "",
                                "startDate": "00010101T00:00:00"
                            },
                            "remoteServer": "",
                            "schemaFriendlyName": null,
                            "schemaName": "Image",
                            "schemaOnLatestVersion": false,
                            "securityLevel": 2,
                            "userCanCopyPage": true,
                            "workflow": null
                        },
                        "readOnly": false,
                        "title": "<span unselectable='on'><img src='\/CMStrunk\/images\/icons\/over\/image16.png' \/><\/span>&nbsp;<span unselectable='on' class=''>zBrush<\/span>",
                        "widgetId": "x119"
                    }],
                    "myParentId": "x112"
                }]
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>The first item in the listing is the Content Store's children information. The "myParentId" field is null. Rest of entries have the "myParentId" set to Page Id</para>
            <para>This is an expensive operation, due to the number of Pages it needs to query and return. The deep the Page node is, the more expensive it becomes</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SiteTreeServices.CanMovePage(System.String[])">
            <summary>
            Determines if a collection of Pages can be moved to another location by current User.
            </summary>
            <param name="pageIds">Ids of Pages to be determined</param>
            <returns>
            <para>Confirmation of whether the given Pages and their descendants can be moved. Returns warning if current User cannot reorder Page assigned to another User, and any of the Pages or descendants are assigned to another User</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                canMove: false,
                prompt: "page"
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.SiteTreeServices.MoveCopyPageAdvanced(System.String[],System.String,System.String,System.Boolean,System.Boolean,System.String,System.String)">
            <summary>
            Moves or Copies a Page node from one location to another location. All the descendants of the Page node gets moved/copied together.
            This operation divides instructions of Move/Copy into separate parameters.
            </summary>
            <param name="pageIds">Array of Id of Pages to be moved</param>
            <param name="targetId">Target Page Id</param>
            <param name="location">Postion of placements relative to target Page Id, choices are "before", "after", or "child". Any other value returns error status</param>
            <param name="copy">Whether to perform Copy or Move</param>
            <param name="special">Whether to trigger a different set of Custom hooks, on work with "Copy" action. 
            When true, uses "OnBeforePasteSpecial" and "OnAfterPasterSpecial"; otherwise, uses "OnBeforeCopy" and "OnAfterCopy"</param>
            <param name="targetLocale">Locale to set on the Pages after move/copy</param>
            <param name="pubTargetId">Id of the current Publishing Target</param>
            <returns>
            <para>Object containing information of the action executed, and properties of the Pages after move/copy.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "pageAction": "copy",
                    "pageProperties": [{
                        "name": "Soap",
                        "allowedCategoryRoots": [],
                        "ancestors": ["x1", "x2", "x100", "x109"],
                        "assignedGroup": null,
                        "assignedUser": {
                            "name": "Turtle Master",
                            "email": "awang@ingeniux.com",
                            "userId": "INGENIUX\\awang"
                        },
                        "canClaimPage": false,
                        "canTranslate": false,
                        "checkedOut": true,
                        "error": null,
                        "icon": 9,
                        "isAssignedToOtherUser": false,
                        "isEditable": true,
                        "isInWorkflow": false,
                        "justRecycled": false,
                        "languageRootId": "",
                        "lingualMaps": {
                            "clones": [],
                            "master": null
                        },
                        "locale": "",
                        "localeInherited": true,
                        "markedForPublish": false,
                        "markedForPublishAny": false,
                        "markedForPublishPropagated": false,
                        "nextPageId": null,
                        "nextPageIndex": 0,
                        "noDnd": false,
                        "numChildPages": 0,
                        "pageId": "x108",
                        "parentId": null,
                        "pendingMasterVersion": 0,
                        "referenceProps": {
                            "created": "20140110T01:21:30",
                            "createdBy": "INGENIUX\\awang",
                            "endDate": "00010101T00:00:00",
                            "lastModified": "20140130T18:49:40",
                            "lastModifiedBy": "User\/INGENIUX___awang",
                            "publishAs": "",
                            "startDate": "00010101T00:00:00"
                        },
                        "remoteServer": "",
                        "schemaFriendlyName": null,
                        "schemaName": "SOAPServiceClient",
                        "schemaOnLatestVersion": false,
                        "securityLevel": 2,
                        "userCanCopyPage": true,
                        "workflow": null
                    }],
                    "queryString": {
                        "copy": false,
                        "pageIds": "x108",
                        "targetId": "x109"
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>Non-existing Page are ignored.</para>
            <para>All Pages specified will be placed as sibling after move/copy, without consideration of their original positions in the Site tree hierarchy.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SiteTreeServices.EmptyRecycleFolder">
            <summary>
            Permenantly deletes all Pages placed under the Recycle Folder.
            </summary>
            <returns>
            <para>Tree when deletions are successful. Otherwise, returns error status</para>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.SiteTreeServices.CreateNewPage(System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            Creates a new Page or Components, from either Page Creation Rule or Schema specified.
            </summary>
            <param name="parentId">Id of the parent Page to create the new Page under</param>
            <param name="pageName">Name of the new Page</param>
            <param name="ruleId">Id of the Page Creation Rule to use for Page Creation. Page Creation Rule is higher priority over Schema on this operation</param>
            <param name="schemaId">Id of the Schema to use for Page creation</param>
            <param name="ss">Name of the XSLT stylesheet file to assign to created Page. Only applies in Page Creation Rule scenario</param>
            <param name="userID">Id of the User to assign the Page to after creation. If left null or empty, Page will be assigned to current User</param>
            <param name="pubTargetId">Id of the current Publishing Target</param>
            <returns>
            <para>Object containing information of the action and property of the created Page</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "pageAction": "newpage",
                    "pageProperties": {
                        "name": "Detail",
                        "allowedCategoryRoots": [],
                        "ancestors": ["x1", "x2", "x112", "x116"],
                        "assignedGroup": null,
                        "assignedUser": {
                            "name": "Turtle Master",
                            "email": "awang@ingeniux.com",
                            "userId": "INGENIUX\\awang"
                        },
                        "canClaimPage": false,
                        "canTranslate": false,
                        "checkedOut": true,
                        "error": null,
                        "icon": 2,
                        "isAssignedToOtherUser": false,
                        "isEditable": true,
                        "isInWorkflow": false,
                        "justRecycled": false,
                        "languageRootId": "x112",
                        "lingualMaps": {
                            "clones": [],
                            "master": null
                        },
                        "locale": "en-us",
                        "localeInherited": true,
                        "markedForPublish": false,
                        "markedForPublishAny": false,
                        "markedForPublishPropagated": false,
                        "nextPageId": null,
                        "nextPageIndex": 0,
                        "noDnd": false,
                        "numChildPages": 0,
                        "pageId": "x124",
                        "parentId": null,
                        "pendingMasterVersion": 0,
                        "referenceProps": {
                            "created": "20140130T19:04:22",
                            "createdBy": "INGENIUX\\awang",
                            "endDate": "00010101T00:00:00",
                            "lastModified": "20140130T19:04:22",
                            "lastModifiedBy": "User\/INGENIUX___awang",
                            "publishAs": "",
                            "startDate": "00010101T00:00:00"
                        },
                        "remoteServer": "",
                        "schemaFriendlyName": null,
                        "schemaName": "Details",
                        "schemaOnLatestVersion": false,
                        "securityLevel": 2,
                        "userCanCopyPage": true,
                        "workflow": null
                    },
                    "queryString": {
                        "pageName": "Detail",
                        "parentPageId": "x116",
                        "schemaFile": "schemas\/194"
                    }
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Page doesn't exist, returns error status</para>
            <para>If Page Creation Rule or Schema Id is specified, but don't exist, returns error status</para>
            <para>If Page Creation Id is specified, uses Page Creation Rule to create the Page; Otherwise, uses Schema to create the Page</para>
            <para>Specified "ss" XSLT stylesheet doesn't affect Page creation with Schema at all</para>
            <para>Created new Page is checked out and assigned to specified User</para>
            <para>If "userId" is not specified, Page will be assigned to current User</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.SiteTreeServices.NewPageWorkflowCheck(System.String,System.String)">
            <summary>
            Determines whether a Page created via Page Creation Rule or Schema needs to be added to Workflow.
            If yes, doesn't have a User to assign to, or a the User to assign the Page to must be selected.
            </summary>
            <param name="ruleId">Id of the Page Creation Rule, higher priority</param>
            <param name="schemaRootName">Root name of the Schema</param>
            <returns>
            <para>Information on the Workflow to add Page to, and the User to assign the Page to</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "defaultUser": "ingeniux\\awang",
                "isGroupMember": true,
                "workflowId": "WorkflowDefinitions/34"
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.SiteTreeServices.buildTitleMarkup(Ingeniux.CMS.IPage,System.Boolean,System.Boolean)">
            <summary>
            This is an outdated fuction that builds server-side HTML. It's still here temporarily until we have time to redo the tree and take
            the HTML out of this area.
            </summary>
            <param name="page"></param>
            <returns></returns>
        </member>
        <member name="T:IngeniuxCMService.XHRServiceResponseGeneric`1">
            <summary>
            The generic object that all Ingeniux CMS Web Services use for returning information.
            </summary>
            <typeparam name="T">Type of the actual returning object</typeparam>
        </member>
        <member name="F:IngeniuxCMService.XHRServiceResponseGeneric`1.code">
            <summary>
            Response codes: 
            0: Success
            1: Session expired
            2: Processing error
            3: Cancelled by user
            </summary>
        </member>
        <member name="F:IngeniuxCMService.XHRServiceResponseGeneric`1.message">
            <summary>
            Actual result object
            </summary>
        </member>
        <member name="F:IngeniuxCMService.XHRServiceResponseGeneric`1.error">
            <summary>
            Error message, null when code is 0
            </summary>
        </member>
        <member name="T:IngeniuxCMService.VirtualSVCPathProvider">
            <summary>
            The virtual path provider to eliminate the need for SVC files and host them manually.
            It also remove the need for service model configuration.
            </summary>
        </member>
        <member name="T:IngeniuxCMService.ITaxonomyTreeServices">
            <summary>
            Taxonomy services
            </summary>
            <remarks>Includes handlers: getTaxonomyTreeData, taxonomy, getCategoryInfo, getTaxonomyLookup</remarks>
        </member>
        <member name="M:IngeniuxCMService.ITaxonomyTreeServices.GetCategoryAssociations(IngeniuxCMService.CategoryAssociationManipulationInput)">
            <summary>
            Get associated page IDs and names of a specific category.
            </summary>
            <param name="data"></param>
            <returns></returns>
            <remarks>Re-uses the "add association input" data model.</remarks>
        </member>
        <member name="M:IngeniuxCMService.ITaxonomyTreeServices.GetCategoriesInfo(System.String[])">
            <summary>
            Gets categories list (simple information).
            </summary>
            <param name="categoryIds"></param>
            <returns></returns>
            <remarks>From handler: getCategoryInfo. The parameter categoryIds used to be a pipe-delimited string, but it is now an array.</remarks>
        </member>
        <member name="M:IngeniuxCMService.ITaxonomyTreeServices.GetTaxonomyLookup(System.String,System.String,System.String,System.String)">
            <summary>
            Looks up categories for initial text of name or synonym on specific locale.
            </summary>
            <param name="search"></param>
            <param name="locale"></param>
            <param name="pageId"></param>
            <param name="pageSchemaName"></param>
            <returns></returns>
            <remarks>From handle: getTaxonomyLookup</remarks>
        </member>
        <member name="F:IngeniuxCMService.CategoryProperties.description">
            <summary>
            Needs escaping
            </summary>
        </member>
        <member name="F:IngeniuxCMService.CategoryProperties.originalTitle">
            <summary>
            Needs escaping
            </summary>
        </member>
        <member name="F:IngeniuxCMService.CategoryProperties.originalDescription">
            <summary>
            Needs escaping
            </summary>
        </member>
        <member name="F:IngeniuxCMService.CategoryProperties.path">
            <summary>
            Needs escaping
            </summary>
        </member>
        <member name="F:IngeniuxCMService.CategoryProperties.typeName">
            <summary>
            Needs escaping
            </summary>
        </member>
        <member name="F:IngeniuxCMService.CategoryProperties.originalTypeName">
            <summary>
            Needs escaping
            </summary>
        </member>
        <member name="F:IngeniuxCMService.CategoryProperties.associatedPages">
            <summary>
            This is originally json string, needs to take care of it as normal array now
            </summary>
        </member>
        <member name="F:IngeniuxCMService.CategoryProperties.everyoneName">
            <summary>
            Backward compatible with old model, need to get from server lockit
            </summary>
        </member>
        <member name="F:IngeniuxCMService.CategoryAssociationInfo.elements">
            <summary>
            array of arbitrary 3-elements array [id, escaped name, escape path]
            </summary>
        </member>
        <member name="F:IngeniuxCMService.CategoryGetAncestorsPathInput.searchIds">
            <summary>
            Pipe-delimited ids
            </summary>
        </member>
        <member name="T:IngeniuxCMService.TaxonomyTreeServices">
            <summary>
            Provides the functionality to manage the Ingeniux CMS taxonomy system.
            </summary>
        </member>
        <member name="M:IngeniuxCMService.TaxonomyTreeServices.GetChildren(IngeniuxCMService.CategoryTreeNodeInfo,System.String,System.String)">
            <summary>
            Retrieves children Nodes of a specific Category Node in the Taxonomy Tree
            </summary>
            <param name="node">
            <para>Information on the Category Node to retrieve children for</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "widgetId": "tta__CategoryNodes/3",
                "objectId": "tta__CategoryNodes/3",
                "index": 0,
                "idPrefix": "tta",
                "baseId": "CategoryNodes/3"
            }
            ]]>
            </code>
            </example>
            <remarks>
            <para>The following of "widgetId" and "objectId" of the category must be "tta__[category node id]". If we are retrieving root nodes, the "widgetId" must be "tta_0", "objectId" is optional.</para>
            </remarks>
            </param>
            <param name="pageSchemaName">The Schema friendly name to filter out root Category nodes. This parameter is only needed when retrieving root Category nodes that the given schema allows</param>
            <param name="selectedLocale">The currently selected Content Locale. The locale value affects the labels of Category nodes information.</param>
            <returns>
            <para>Array of full details for all child Category nodes of given Category node.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "objectId": "tta__CategoryNodes\/3",
                    "widgetId": "tta__CategoryNodes\/3",
                    "isFolder": true,
                    "props": {
                        "associatedPages": null,
                        "creationLocale": "en-us",
                        "depth": 1,
                        "description": "",
                        "everyoneName": "Everyone",
                        "externalId": "",
                        "id": "CategoryNodes\/3",
                        "idPrefix": "tta",
                        "originalDescription": "",
                        "originalTitle": "Animalia",
                        "originalTypeName": "Kingdom",
                        "path": "Animalia",
                        "permissions": [{
                            "name": "Everyone",
                            "id": "0",
                            "accessLevel": 2
                        }],
                        "permissionsInherited": true,
                        "synonyms": [],
                        "translated": true,
                        "typeName": "Kingdom",
                        "visibility": 1
                    },
                    "title": "Animalia"
                }, {
                    "objectId": "tta__CategoryNodes\/2",
                    "widgetId": "tta__CategoryNodes\/2",
                    "isFolder": false,
                    "props": {
                        "associatedPages": null,
                        "creationLocale": "en-us",
                        "depth": 1,
                        "description": "",
                        "everyoneName": "Everyone",
                        "externalId": "",
                        "id": "CategoryNodes\/2",
                        "idPrefix": "tta",
                        "originalDescription": "",
                        "originalTitle": "Fungi",
                        "originalTypeName": "Kingdom",
                        "path": "Fungi",
                        "permissions": [{
                            "name": "Everyone",
                            "id": "0",
                            "accessLevel": 2
                        }],
                        "permissionsInherited": true,
                        "synonyms": [],
                        "translated": true,
                        "typeName": "Kingdom",
                        "visibility": 1
                    },
                    "title": "Fungi"
                }, {
                    "objectId": "tta__CategoryNodes\/1",
                    "widgetId": "tta__CategoryNodes\/1",
                    "isFolder": false,
                    "props": {
                        "associatedPages": null,
                        "creationLocale": "en-us",
                        "depth": 1,
                        "description": "",
                        "everyoneName": "Everyone",
                        "externalId": "",
                        "id": "CategoryNodes\/1",
                        "idPrefix": "tta",
                        "originalDescription": "",
                        "originalTitle": "Plantae",
                        "originalTypeName": "Kingdom",
                        "path": "Plantae",
                        "permissions": [{
                            "name": "Everyone",
                            "id": "0",
                            "accessLevel": 2
                        }],
                        "permissionsInherited": true,
                        "synonyms": [],
                        "translated": true,
                        "typeName": "Kingdom",
                        "visibility": 1
                    },
                    "title": "Plantae"
                }]
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>Taxonomy Tree doesn't have the concept of order. The result is always sorted alphabetically.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.TaxonomyTreeServices.GetCategoryAncestorIds(IngeniuxCMService.CategoryGetAncestorsPathInput)">
            <summary>
            Retrieves the list of all ancestor Category Node Ids for a given Category Node
            </summary>
            <param name="data">
            <para>Object containing the current Category Node Id, and whether to return error status if Category doesn't exist.</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "searchIds": "CategoryNodes/34",
                    "alertMissingCategory": false
                }
            }
            ]]>
            </code>
            </example>
            <remarks>If "alertMissingCategory" is set to false, returns empty array if Category doesn't exist.</remarks>
            </param>
            <returns>
            <para>Array of all ancestor Category Node Ids. Starting from the Root Category.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [["CategoryNodes\/3", "CategoryNodes\/4", "CategoryNodes\/34"]]
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.TaxonomyTreeServices.Move(IngeniuxCMService.CategoryMoveInput)">
            <summary>
            Moves a Category Node from one location to another
            </summary>
            <param name="data">
            <para>Instruction of the Move action</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "child": {
                        "widgetId": "tta__CategoryNodes/33",
                        "objectId": "tta__CategoryNodes/33",
                        "index": 1,
                        "idPrefix": "tta",
                        "baseId": "CategoryNodes/33"
                    },
                    "newParent": {
                        "widgetId": "tta__CategoryNodes/2",
                        "objectId": "tta__CategoryNodes/2",
                        "index": 1,
                        "idPrefix": "tta",
                        "baseId": "CategoryNodes/2"
                    }
                },
                "pubTarget": "PublishingTargets/1"
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Array of all sibling Categories Nodes of the newly moved node in alphabetic order.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "objectId": "tta__CategoryNodes\/34",
                    "widgetId": "tta__CategoryNodes\/34",
                    "isFolder": false,
                    "props": {
                        "associatedPages": null,
                        "creationLocale": "en-us",
                        "depth": 3,
                        "description": "",
                        "everyoneName": "Everyone",
                        "externalId": "",
                        "id": "CategoryNodes\/34",
                        "idPrefix": "tta",
                        "originalDescription": "",
                        "originalTitle": "Cestida",
                        "originalTypeName": "Class",
                        "path": "Animalia%2FCtenophora%2FCestida",
                        "permissions": [{
                            "name": "Everyone",
                            "id": "0",
                            "accessLevel": 2
                        }],
                        "permissionsInherited": true,
                        "synonyms": [],
                        "translated": true,
                        "typeName": "Class",
                        "visibility": 1
                    },
                    "title": "Cestida"
                }]
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>All Name and Path information in the array of Category Nodes are URI encoded.</para>
            <para>This operation requires current User to have the permission to manage Taxonomy System. If not, returns error status.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.TaxonomyTreeServices.Clone(IngeniuxCMService.CategoryCopyInput)">
            <summary>
            Copies a Category Node and place it under specified target Category Node
            </summary>
            <param name="data">
            <para>Instructions of the Copy action</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "child": {
                        "widgetId": "tta__CategoryNodes/1",
                        "objectId": "tta__CategoryNodes/1",
                        "index": 2,
                        "idPrefix": "tta",
                        "baseId": "CategoryNodes/1"
                    },
                    "newParent": {
                        "widgetId": "tta__CategoryNodes/4",
                        "objectId": "tta__CategoryNodes/4",
                        "index": 0,
                        "idPrefix": "tta",
                        "baseId": "CategoryNodes/4"
                    }
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Details of newly created Category Node</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "objectId": "tta__CategoryNodes\/65",
                    "widgetId": "tta__CategoryNodes\/65",
                    "isFolder": false,
                    "props": {
                        "associatedPages": null,
                        "creationLocale": "en-us",
                        "depth": 3,
                        "description": "",
                        "everyoneName": "Everyone",
                        "externalId": "",
                        "id": "CategoryNodes\/65",
                        "idPrefix": "tta",
                        "originalDescription": "",
                        "originalTitle": "Plantae",
                        "originalTypeName": "Kingdom",
                        "path": "Animalia%2FCtenophora%2FPlantae",
                        "permissions": [{
                            "name": "Everyone",
                            "id": "0",
                            "accessLevel": 2
                        }],
                        "permissionsInherited": true,
                        "synonyms": [],
                        "translated": true,
                        "typeName": "Kingdom",
                        "visibility": 1
                    },
                    "title": "Plantae"
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>All Name and Path information in the array of Category Nodes are URI encoded.</para>
            <para>This operation requires current User to have the permission to manage Taxonomy System. If not, returns error status.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.TaxonomyTreeServices.AddAssociationToCategory(IngeniuxCMService.CategoryAssociationManipulationInput)">
            <summary>
            Associates a Category with a Page. This operation categiorizes the given Page with given Category.
            </summary>
            <param name="data">
            <para>Object containing Ids of Category and Page to create the new association</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "categoryId": "CategoryNodes/33",
                    "pageXID": "x9"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Object containing the Id and Name of the Page that was just associated with the Category. It is always a two-items array, first item holds the Page Id, second item holds the Page name.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": ["x9", "Terms"]
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Category or Page doesn't exist, returns error status</para>
            <para>All Name and Path information in the array of Category Nodes are URI encoded.</para>
            <para>This operation requires current User to have the permission to manage Taxonomy System. If not, returns error status.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.TaxonomyTreeServices.CreateNewCategory(IngeniuxCMService.CategoryCreateUpdateInput,System.String)">
            <summary>
            Creates a new Category Node in a specific Locale.
            </summary>
            <param name="data">
            <para>Full details of the new Category Node to create, including the Parent Id.</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "parentId": "CategoryNodes/3",
                "idPrefix": "tta",
                "name": "Lophotrochozoa",
                "description": "",
                "externalId": "",
                "typeName": "Phylum"
            }
            ]]>
            </code>
            </example>
            <remarks>
            <para>To create a new Root Category, specify the "parentId" field of "data" parameter to "0".</para>
            </remarks>
            </param>
            <param name="locale">Specifies the Locale of this new Category Node. This will be the "Creation Locale" of the new Category.</param>
            <returns>
            <para>Full details of the newly created Category</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "objectId": "tta__CategoryNodes\/67",
                    "widgetId": "tta__CategoryNodes\/67",
                    "isFolder": false,
                    "props": {
                        "associatedPages": null,
                        "creationLocale": "en-us",
                        "depth": 1,
                        "description": "",
                        "everyoneName": "Everyone",
                        "externalId": "",
                        "id": "CategoryNodes\/67",
                        "idPrefix": "tta",
                        "originalDescription": "",
                        "originalTitle": "Monera",
                        "originalTypeName": "Kingdom",
                        "path": "Monera",
                        "permissions": [{
                            "name": "Everyone",
                            "id": "0",
                            "accessLevel": 2
                        }],
                        "permissionsInherited": true,
                        "synonyms": [],
                        "translated": true,
                        "typeName": "Kingdom",
                        "visibility": 1
                    },
                    "title": "Monera"
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If new Parent Id is not "0", but the new Parent Category doesn't exist, returns error status.</para>
            <para>All Name and Path information in the array of Category Nodes are URI encoded.</para>
            <para>This operation requires current User to have the permission to manager Taxonomy System. If not, returns error status.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.TaxonomyTreeServices.GetAssociationsToPage(IngeniuxCMService.GetPageCategorizationsInput)">
            <summary>
            Retrieves all the Categories associated with given Page
            </summary>
            <param name="data">
            <para>Object containing the Id of the Page to get associations information for</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "pageId": "x9"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Collection of information of Category Nodes that are associated with the given Page.</para>
            <para>Each item contains "attributes" and "elements" listing. "attributes" has Category Id only. "elements" item is a 3 items array that has Id, Name and Path of the Category Node item.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "ids": ["CategoryNodes\/33", "CategoryNodes\/67", "CategoryNodes\/2"],
                    "info": [{
                        "attributes": {
                            "categoryId": "CategoryNodes\/33"
                        },
                        "elements": ["CategoryNodes\/33", "Cydippida", "Animalia\/Ctenophora\/Cydippida"]
                    }, {
                        "attributes": {
                            "categoryId": "CategoryNodes\/67"
                        },
                        "elements": ["CategoryNodes\/67", "Monera", "Monera"]
                    }, {
                        "attributes": {
                            "categoryId": "CategoryNodes\/2"
                        },
                        "elements": ["CategoryNodes\/2", "Fungi", "Fungi"]
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.TaxonomyTreeServices.GetCategoryAssociations(IngeniuxCMService.CategoryAssociationManipulationInput)">
            <summary>
            Retrieves all the Pages associated with given Category.
            </summary>
            <param name="data">
            <para>Object containing the Id of the Category to retrieve associations for</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "categoryId": "CategoryNodes/2"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Array of associated Pages' Id and Name</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [["x9", "Terms"], ["x11", "About Us"]]
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.TaxonomyTreeServices.RemoveAssociationsToCategory(IngeniuxCMService.RemovePageCategorizationsInput)">
            <summary>
            Removes a list of Page associations to a given Category Node
            </summary>
            <param name="data">
            <para>Object containing the Category Id and the Ids of Pages to sever the associations</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "categoryId": "CategoryNodes/2",
                    "pageXIDs": ["x11"]
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Array of Page Ids, that were associated with the Category Node, and now associations were severed.</para>
            </returns>
            <remarks>
            <para>If Category doesn't exist, returns error status.</para>
            <para>This operation requires current User to have the permission to manager Taxonomy System. If not, returns error status.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.TaxonomyTreeServices.RemoveCategory(IngeniuxCMService.CategoryAssociationManipulationInput)">
            <summary>
            Permenantly deletes a Category from the Taxonomy system. This operation also removes the association of this Category to all Pages.
            </summary>
            <param name="data">
            <para>Object containing the Id of the Category to delete</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "categoryId": "CategoryNodes/65"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>
            Object containing the deleted Category Node's Id
            </para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            
                "code": 0,
                "error": null,
                "message": {
                    "removedCategoryId": "CategoryNodes\/65"
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Category doesn't exist, returns error status.</para>
            <para>This operation requires current User to have the permission to manager Taxonomy System. If not, returns error status.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.TaxonomyTreeServices.SetAssociationsToPage(IngeniuxCMService.SetPageCategorizationInput)">
            <summary>
            Associates a collection of Categories to given page
            </summary>
            <param name="data">
            <para>Object containing the Page Id and the array of Ids for the Categories to associate with the Page</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "categories": ["CategoryNodes/33", "CategoryNodes/67", "CategoryNodes/2", "CategoryNodes/66", "CategoryNodes/1"],
                    "pageId": "x9"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Array of Id of the Categories that are currently associated with the given Page</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "associatedCategories": ["CategoryNodes\/33", "CategoryNodes\/67", "CategoryNodes\/2"]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Page doesn't exist, returns error status.</para>
            <para>This operation requires current User to have the permission to manager Taxonomy System. If not, returns error status.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.TaxonomyTreeServices.SetCategoryInformation(IngeniuxCMService.CategoryCreateUpdateInput,System.String)">
            <summary>
            Updates the details of Category Node
            </summary>
            <param name="data">
            <para>New information for the Category. Doesn't include associations information.</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "categoryId": "CategoryNodes/66",
                "idPrefix": "tta",
                "name": "Lophotrochozoa",
                "description": "",
                "externalId": "",
                "typeName": "Phylum"
            }
            ]]>
            </code>
            </example>
            </param>
            <param name="locale">
            The environmental Locale to perform the update under.
            <remarks>
            <para>If the locale is the same as the Category's creation Locale, the original Name and Description will be changes; Otherwise, we are updating the translations in the target Locale.</para>
            </remarks>
            </param>
            <returns>
            <para>The full details of the updated Category</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "objectId": "tta__CategoryNodes\/66",
                    "widgetId": "tta__CategoryNodes\/66",
                    "isFolder": false,
                    "props": {
                        "associatedPages": null,
                        "creationLocale": "en-us",
                        "depth": 2,
                        "description": "",
                        "everyoneName": "Everyone",
                        "externalId": "",
                        "id": "CategoryNodes\/66",
                        "idPrefix": "tta",
                        "originalDescription": "",
                        "originalTitle": "Lophotrochozoa",
                        "originalTypeName": "Phylum",
                        "path": "Animalia%2FLophotrochozoa",
                        "permissions": [{
                            "name": "Everyone",
                            "id": "0",
                            "accessLevel": 2
                        }],
                        "permissionsInherited": true,
                        "synonyms": [],
                        "translated": true,
                        "typeName": "Phylum",
                        "visibility": 1
                    },
                    "title": "Lophotrochozoa"
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Category doesn't exist, returns error status.</para>
            <para>If locale is not specified, or empty, default to "en-us".</para>
            <para>This operation requires current User to have the permission to manager Taxonomy System. If not, returns error status.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.TaxonomyTreeServices.GetCategorySynonyms(IngeniuxCMService.GetCategorySynonymsInput)">
            <summary>
            Retrieves the collection of Synonyms for given Category under specified Locale
            </summary>
            <param name="data">
            <para>Object containing of the Category and Locale we want to retrieve synonyms under</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "categoryId": "CategoryNodes/3",
                    "locale": "en-us"
                }
            }
            ]]>
            </code>
            </example>
            <remarks>Synonyms are language specific</remarks>
            </param>
            <returns>
            <para>Array of Synonyms under the given locale</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": ["Animal", "Creatures that moves"]
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Category doesn't exist, returns error status.</para>
            <para>If Locale not specified, default to "en-us".</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.TaxonomyTreeServices.SetCategorySynonyms(IngeniuxCMService.SetCategorySynonymsInput)">
            <summary>
            Updates the Synonyms listing under specified locale for a Category
            </summary>
            <param name="data">
            <para>Object containing Category Id, environmental Locale, and list of the Synonyms under that Locale</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "categoryId": "CategoryNodes/3",
                    "locale": "en-us",
                    "synonyms": ["Animals", "Creatures that moves"]
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            True if update successful.
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": true
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Category doesn't exist, returns error status.</para>
            <para>If Locale not specified, default to "en-us".</para>
            <para>This operation requires current User to have the permission to manager Taxonomy System. If not, returns error status.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.TaxonomyTreeServices.GetCategoriesInfo(System.String[])">
            <summary>
            Retrieves basic information of Categories by their Ids
            </summary>
            <param name="categoryIds">
            <para>Array of Ids of Categories</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "categoryIds": ["CategoryNodes/34", "CategoryNodes/33", "CategoryNodes/66"]
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Array of basic information for the given Categories, including Id, Name and Path.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [{
                    "name": "Cestida",
                    "id": "CategoryNodes\/34",
                    "path": "Animalia\/Ctenophora\/Cestida"
                }, {
                    "name": "Cydippida",
                    "id": "CategoryNodes\/33",
                    "path": "Animalia\/Ctenophora\/Cydippida"
                }, {
                    "name": "Monera",
                    "id": "CategoryNodes\/67",
                    "path": "Monera"
                }]
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>All non-existing Categories will be bypassed.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.TaxonomyTreeServices.SetCategoryPermissions(IngeniuxCMService.SetCategoriesPermissions)">
            <summary>
            Updates the security permission for a Category
            </summary>
            <param name="data">
            <para>
            Object containing Category Id and its new collection of Node-Level permissions.
            </para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "categoryId": "CategoryNodes/4",
                    "permissions": {
                        "inherited": false,
                        "data": [{
                            "Id": "0",
                            "Access": "1"
                        }, {
                            "Id": "UserGroup/1",
                            "Access": "2"
                        }]
                    }
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Full details of the updated Category</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "objectId": "__CategoryNodes\/4",
                    "widgetId": "__CategoryNodes\/4",
                    "isFolder": true,
                    "props": {
                        "associatedPages": null,
                        "creationLocale": "en-us",
                        "depth": 2,
                        "description": "",
                        "everyoneName": "Everyone",
                        "externalId": "",
                        "id": "CategoryNodes\/4",
                        "idPrefix": null,
                        "originalDescription": "",
                        "originalTitle": "Ctenophora",
                        "originalTypeName": "Phylum",
                        "path": "Animalia%2FCtenophora",
                        "permissions": [{
                            "name": "Everyone",
                            "id": "0",
                            "accessLevel": 1
                        }, {
                            "name": "Administrators",
                            "id": "UserGroup\/1",
                            "accessLevel": 2
                        }],
                        "permissionsInherited": false,
                        "synonyms": [],
                        "translated": true,
                        "typeName": "Phylum",
                        "visibility": 1
                    },
                    "title": "Ctenophora"
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Category doesn't exist, returns error status.</para>
            <para>This operation requires current User to have the permission to manager Taxonomy System. If not, returns error status.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.TaxonomyTreeServices.GetStats">
            <summary>
            Retrieves the statistics of the Taxonomy system
            </summary>
            <returns>
            <para>The summary information of the Taxonomy system</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "categoriesCount": 8,
                    "createdCount": 8,
                    "lastUpdate": "20140203T18:06:40",
                    "translatedCount": 0
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.TaxonomyTreeServices.GetTaxonomyLookup(System.String,System.String,System.String,System.String)">
            <summary>
            Searches for Categories with initial characters in their names
            </summary>
            <param name="search">Initial characters in Category names</param>
            <param name="locale">Environmental locale. Only name of Categories under these locales are searched.</param>
            <param name="pageId">Optional criteria - Id of the Page that Categories are associated with</param>
            <param name="pageSchemaName">Optional criteria - Friendly name of the Schema that allows this Category to be Root category in categorization process</param>
            <returns>
            <para>Array of Category Id, Name, and Path, which names matches the initial letters in search text, case-insensitive.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": [["Monera : Monera", "CategoryNodes\/67", "Monera"]]
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="T:IngeniuxCMService.IWorkflowServices">
            <summary>
            Workflow services
            </summary>
            <remarks>Includes handlers: getGlobalWorkflowData, getWorkFlowData, getWorkFlowReports, workflowActions</remarks>
        </member>
        <member name="M:IngeniuxCMService.IWorkflowServices.GetGlobalWorkflowData(System.Boolean)">
            <summary>
            Gets workflow definitions and states.
            </summary>
            <returns></returns>
            <remarks>From handler:getGlobalWorkflowData</remarks>
        </member>
        <member name="M:IngeniuxCMService.IWorkflowServices.GetTransitionList(System.String)">
            <summary>
            Gets transition list for page advance.
            </summary>
            <param name="pageData"></param>
            <returns></returns>
            <remarks>From handler: getTransitionList. Could be in dialogs services, but makes more sense here.</remarks>
        </member>
        <member name="M:IngeniuxCMService.IWorkflowServices.GetDefaultTransition">
            <summary>
            Gets transition list for page advance.
            </summary>
            <returns></returns>
            <remarks>From handler: getTransitionList. Could be in dialogs services, but makes more sense here</remarks>
        </member>
        <member name="M:IngeniuxCMService.IWorkflowServices.GetWorkflowData(System.String)">
            <summary>
            Gets workflow defintion (detailed information).
            </summary>
            <param name="wfDefId"></param>
            <returns></returns>
            <remarks>From handler: getWorkFlowData</remarks>
        </member>
        <member name="M:IngeniuxCMService.IWorkflowServices.GetWorkflowReports(System.String)">
            <summary>
            Gets workflow report for a specific workflow, or for all workflows.
            </summary>
            <param name="wfDefId"></param>
            <returns></returns>
            <remarks>From handler: getWorkFlowReports</remarks>
        </member>
        <member name="M:IngeniuxCMService.IWorkflowServices.SetWorkflowData(IngeniuxCMService.WorkflowDefinitionDesignerInfo)">
            <summary>
            Sets workflow data and save.
            </summary>
            <param name="data"></param>
            <returns></returns>
            <remarks>From handler: setWorkFlowData</remarks>
        </member>
        <member name="M:IngeniuxCMService.IWorkflowServices.SendMail(System.String,System.String,System.String,System.String,System.String)">
            <remarks>Not exactly workflow, but workflow-related. From handler: sendMail</remarks>
        </member>
        <member name="F:IngeniuxCMService.DeleteWorkstateInput.ids">
            <summary>
            Comma-delimited list
            </summary>
        </member>
        <member name="T:IngeniuxCMService.IWorldviewWorkflowActions">
            <summary>
            Worldview workflow actions services
            </summary>
        </member>
        <member name="T:IngeniuxCMService.WorkflowServices">
            <summary>
            Provides the functionality to manage the Ingeniux CMS workflow system,
            </summary>
        </member>
        <member name="M:IngeniuxCMService.WorkflowServices.GetGlobalWorkflowData(System.Boolean)">
            <summary>
            Retrieves the items in Ingeniux CMS Workflow system. 
            </summary>
            <param name="definitionsOnly">Whether to retrieve on Workflow Definitions, or Workflow Defintions and Workstates.</param>
            <returns>
            <para>Object containg collection of Workflow Definition, and Workstate if specified.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "wfDefs": [{
                        "name": "One Step",
                        "id": "WorkflowDefinitions\/3",
                        "desc": "",
                        "pages": 0
                    }, {
                        "name": "Standard",
                        "id": "WorkflowDefinitions\/2",
                        "desc": "",
                        "pages": 0
                    }],
                    "wfStates": [{
                        "name": "Approving",
                        "id": "WorkStates\/36",
                        "desc": "",
                        "active": false
                    }, {
                        "name": "Authoring",
                        "id": "WorkStates\/35",
                        "desc": "",
                        "active": false
                    }, {
                        "name": "Initial",
                        "id": "WorkStates\/1",
                        "desc": "The initial WorkState of a workflow",
                        "active": true
                    }, {
                        "name": "Publishing",
                        "id": "WorkStates\/38",
                        "desc": "",
                        "active": false
                    }, {
                        "name": "Reviewing",
                        "id": "WorkStates\/37",
                        "desc": "",
                        "active": false
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If "definitesOnly" parameter is true, then "wfStates" field of the return object will be null.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.WorkflowServices.GetTransitionList(System.String)">
            <summary>
            Retrieves the list of Transitions that are available to all of the Pages specified.
            Any Pages specified, but not in Workflow, are ignored.
            </summary>
            <param name="pageData">
            <para>"|" delimited Page Ids list</para>
            <example>x43|x653|x1543</example>
            </param>
            <returns>
            List of Transitions, that are available to all Pages that are in Workflow.
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "transitions": [{
                        "name": "Transition5",
                        "id": "WorkflowTransition_WorkflowDefinitions\/2_2",
                        "assignToGroupOnly": false,
                        "defaultUserId": "",
                        "disallowDefaultUserOverride": false,
                        "externalActions": [],
                        "groupId": "UserGroup\/1",
                        "groupName": "Administrators",
                        "isDefaultTransition": false,
                        "onEnterDisplayTime": 0,
                        "onEnterHideDlgButtons": false,
                        "onEnterPrompt": "",
                        "onExistDisplayTime": 0,
                        "onExistHideDlgButtons": false,
                        "onExistPrompt": "",
                        "toolbarIcon": ""
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>Any non-existing Page Ids will cause returing of error status.</para>
            <para>If Page are in differnt Workflows, result will be empty array.</para>
            <para>If only one Page specified, result will be the Transition available to this Page, or empty if the Page is not in Workflow.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.WorkflowServices.GetWorkflowData(System.String)">
            <summary>
            Retrieves the detailed information of a Workflow Definition.
            </summary>
            <param name="wfDefId">Id of the Workflow Definition</param>
            <returns>
            <para>Full details of the Workflow Definition</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "name": "Standard",
                    "id": "WorkflowDefinitions\/2",
                    "desc": "",
                    "tran": [{
                        "name": "Initial",
                        "id": "WorkflowTransition_WorkflowDefinitions\/2_1",
                        "desc": "",
                        "actions": [],
                        "allowNextGroupToAdvance": false,
                        "currentState": "WorkStates\/1",
                        "defaultUser": "",
                        "description": "",
                        "isDefault": false,
                        "nextGroupName": "UserGroup\/1",
                        "nextGroupNameStr": "Administrators",
                        "nextState": "WorkStates\/35"
                    }, {
                        "name": "Transition5",
                        "id": "WorkflowTransition_WorkflowDefinitions\/2_2",
                        "desc": "",
                        "actions": [],
                        "allowNextGroupToAdvance": false,
                        "currentState": "WorkStates\/35",
                        "defaultUser": "",
                        "description": "",
                        "isDefault": false,
                        "nextGroupName": "UserGroup\/1",
                        "nextGroupNameStr": "Administrators",
                        "nextState": "WorkStates\/37"
                    }, {
                        "name": "Transition6",
                        "id": "WorkflowTransition_WorkflowDefinitions\/2_3",
                        "desc": "",
                        "actions": [],
                        "allowNextGroupToAdvance": false,
                        "currentState": "WorkStates\/37",
                        "defaultUser": "",
                        "description": "",
                        "isDefault": false,
                        "nextGroupName": "UserGroup\/1",
                        "nextGroupNameStr": "Administrators",
                        "nextState": "WorkStates\/36"
                    }, {
                        "name": "Transition7",
                        "id": "WorkflowTransition_WorkflowDefinitions\/2_4",
                        "desc": "",
                        "actions": [],
                        "allowNextGroupToAdvance": false,
                        "currentState": "WorkStates\/36",
                        "defaultUser": "",
                        "description": "",
                        "isDefault": false,
                        "nextGroupName": "UserGroup\/1",
                        "nextGroupNameStr": "Administrators",
                        "nextState": "WorkStates\/38"
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Workflow Definition doesn't exist, returns error status.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.WorkflowServices.GetWorkflowReports(System.String)">
            <summary>
            Retrieves a list of Pages that are in Workflow, and their current state
            </summary>
            <param name="wfDefId">Operational parameter - Id of the Workflow Definition to get reports one. If not provided, retrieves reports for all Workflow Definitions</param>
            <returns>
            <para>Object containing listing of Pages in Workflow. It is designed to be injected into a Table/Grid.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "columns": [{
                        "name": "Page",
                        "field": "pageName",
                        "igxtype": "pagename",
                        "relWidth": 2
                    }, {
                        "name": "xID",
                        "field": "id",
                        "igxtype": "xid",
                        "relWidth": 1
                    }, {
                        "name": "Workflow",
                        "field": "workflow",
                        "igxtype": null,
                        "relWidth": 2
                    }, {
                        "name": "Workstate",
                        "field": "workstate",
                        "igxtype": null,
                        "relWidth": 2
                    }, {
                        "name": "Group",
                        "field": "group",
                        "igxtype": null,
                        "relWidth": 2
                    }, {
                        "name": "Assigned To",
                        "field": "assignedTo",
                        "igxtype": null,
                        "relWidth": 2
                    }, {
                        "name": "Last Updated",
                        "field": "lastUpdated",
                        "igxtype": "date",
                        "relWidth": 2
                    }, {
                        "name": "Last Comment",
                        "field": "lastComment",
                        "igxtype": null,
                        "relWidth": 2
                    }],
                    "report": [{
                        "assignedTo": "Administrators",
                        "group": "Administrators",
                        "id": "x11",
                        "lastComment": "Existing page added to workflow",
                        "lastUpdated": "20140204T17:09:09",
                        "pageName": "About Us",
                        "workflow": "Standard",
                        "workstate": "Authoring"
                    }, {
                        "assignedTo": "Administrators",
                        "group": "Administrators",
                        "id": "x9",
                        "lastComment": "Existing page added to workflow",
                        "lastUpdated": "20140204T17:10:46",
                        "pageName": "Terms",
                        "workflow": "Standard",
                        "workstate": "Authoring"
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Workflow Definition Id is specified, but Definition doesn't exist, returns error status.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.WorkflowServices.SetWorkflowData(IngeniuxCMService.WorkflowDefinitionDesignerInfo)">
            <summary>
            Updates a Workflow Definition with new data
            </summary>
            <param name="data">
            <para>Full details of the update for the Workflow Definition</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "id": "WorkflowDefinitions/3",
                    "name": "One Step",
                    "desc": "",
                    "tran": [{
                        "name": "Initial",
                        "id": "WorkflowTransition_WorkflowDefinitions/3_1",
                        "desc": "",
                        "actions": [],
                        "allowNextGroupToAdvance": false,
                        "currentState": "WorkStates/1",
                        "defaultUser": "",
                        "description": "",
                        "isDefault": false,
                        "nextGroupName": "UserGroups/1",
                        "nextGroupNameStr": "Authors",
                        "nextState": "WorkStates/35",
                        "endPos": {
                            "x": -1.0014430014430014,
                            "y": -0.0014598540145985828
                        }
                    }, {
                        "name": "Publish",
                        "id": "WorkflowTransition_WorkflowDefinitions/3_2",
                        "desc": "",
                        "actions": [],
                        "allowNextGroupToAdvance": false,
                        "currentState": "WorkStates/35",
                        "defaultUser": "",
                        "description": "",
                        "isDefault": false,
                        "nextGroupName": "UserGroup/1",
                        "nextGroupNameStr": "Administrators",
                        "nextState": "WorkStates/38",
                        "startPos": {
                            "x": -1.0014430014430014,
                            "y": -0.0014598540145985828
                        },
                        "endPos": {
                            "x": -1.0014430014430014,
                            "y": 0.9970802919708028
                        }
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Information of the updated Workflow Definition and its Transitions</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "newDefinition": {
                        "name": "One Step",
                        "id": "WorkflowDefinitions\/3",
                        "desc": ""
                    },
                    "trans": [{
                        "Key": "WorkflowTransition_WorkflowDefinitions\/3_1",
                        "Value": {
                            "actions": [],
                            "id": "WorkflowTransition_WorkflowDefinitions\/3_1"
                        }
                    }, {
                        "Key": "WorkflowTransition_WorkflowDefinitions\/3_2",
                        "Value": {
                            "actions": [],
                            "id": "WorkflowTransition_WorkflowDefinitions\/3_2"
                        }
                    }]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If Workflow Definition doesn't exist, returns error status</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.WorkflowServices.DeleteWorkflowDefinition(IngeniuxCMService.WorkflowSimpleInfoBase)">
            <summary>
            Deletes a Workflow Definition
            </summary>
            <param name="data">
            <para>Object containing the Id of the Workfloe Definition to be deleted</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "id": "WorkflowDefinitions/3"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Result of the delete operation</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "id": "WorkflowDefinitions\/3",
                    "message": null,
                    "success": true
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.WorkflowServices.CreateWorkstate(IngeniuxCMService.WorkstateSimpleInfo)">
            <summary>
            Creates a new Workstate. Workstates are stages within a workflow. A Workstate is available to every Workflow Definition.
            </summary>
            <param name="data">
            <para>Information for the new Workstate to be created</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "id": "",
                    "name": "Translating",
                    "desc": "Translating content to another language",
                    "active": true
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Information of the newly created Workstate.</para>
            </returns>
            <remarks>
            <para>If name is null or empty, returns error status.</para>
            <para>If there is another Workstate that has the same name, returns error status.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.WorkflowServices.UpdateWorkstate(IngeniuxCMService.WorkstateSimpleInfo)">
            <summary>
            Updates an existing Workstate with new data
            </summary>
            <param name="data">
            <para>New information of the Workstate to be updated</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "id": "WorkStates/67",
                    "name": "Translating",
                    "desc": "Translating content to another language",
                    "active": true
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Information of updated Workstate</para>	
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "name": "Translating",
                    "id": "WorkStates\/67",
                    "desc": "Translating content to another language",
                    "active": true
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>If name is null or empty, returns error status.</para>
            <para>If Workstate doesn't exist, returns error status.</para>
            <para>If there is another Workstate that has the same name, returns error status.</para>
            </remarks>
        </member>
        <member name="M:IngeniuxCMService.WorkflowServices.DeleteWorkstate(IngeniuxCMService.DeleteWorkstateInput)">
            <summary>
            Deletes a collection of Workstates. Opertaion will not stop when encount errors on individual Workstate deletion.
            Instead of the problematic Workstate Ids and the actual errors will be records and returned
            </summary>
            <param name="data">
            <para>Object containing array of Id of Workstates to be deleted</para>
            <example>
            Sample JSON input
            <code language="javascript">
            <![CDATA[
            {
                "data": {
                    "ids": "WorkStates/67, WorkStates/38, WorkStates/12"
                }
            }
            ]]>
            </code>
            </example>
            </param>
            <returns>
            <para>Object containing the Id of the Workstates that has been removed, also Id and error of the Workstates that could not be deleted.</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "deletedIds": ["WorkStates\/67", "WorkStates\/38"],
                    "problemIds": [{
            			"id": "WorkStates\/12",
            			"error": "Workstate with Id \"WorkStates\/12\" doesn't exist"
            		}]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.WorkflowServices.GetWorldviewWorkflowStatus">
            <summary>
            Retrieves the status information on the Workflows for Worldview system.
            These are the Workflows to facilitate localization processes
            </summary>
            <returns>
            <para>
            Information of the Worldview Workflows
            </para>
            <example>
            Sample JSON return - No Worldview Workflow setup yet, all Workstates and Definitions are missing
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "allBlank": true,
                    "badDefs": ["Master Page Workflow for Translation", 
            			"Clone Page Workflow for Translation"],
                    "badStates": ["Ready for Translation", 
            			"Translating", 
            			"Translation Complete", 
            			"Proofreading", 
            			"Implementing Proofreading Feedback", 
            			"Reviewing", 
            			"Implementing Review Feedback", 
            			"Translation Project Complete"]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
        </member>
        <member name="M:IngeniuxCMService.WorkflowServices.FixWorldviewWorkflows">
            <summary>
            Fixes the Worldview Workflows, create the necessary Workstates and Workflow Definitions.
            </summary>
            <returns>
            <para>The result of fixing operation, including the Id of Workflow Definitions that were created, and remaining missing Workflow Definitions and Workstates</para>
            <example>
            Sample JSON return
            <code language="javascript">
            <![CDATA[
            {
                "code": 0,
                "error": null,
                "message": {
                    "allBlank": false,
                    "badDefs": [],
                    "badStates": [],
                    "workflowsCreated": ["Master Page Workflow for Translation", "Clone Page Workflow for Translation"]
                }
            }
            ]]>
            </code>
            </example>
            </returns>
            <remarks>
            <para>This operation will using existing Workflow Definitions and Workstates with the same names.</para>
            </remarks>
        </member>
    </members>
</doc>
